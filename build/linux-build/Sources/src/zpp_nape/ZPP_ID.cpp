// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_ZPP_ID
#include <hxinc/zpp_nape/ZPP_ID.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_178_Constraint,"zpp_nape.ZPP_ID","Constraint",0x84b261aa,"zpp_nape.ZPP_ID.Constraint","zpp_nape/ID.hx",178,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_182_Interactor,"zpp_nape.ZPP_ID","Interactor",0xaf5627a6,"zpp_nape.ZPP_ID.Interactor","zpp_nape/ID.hx",182,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_186_CbType,"zpp_nape.ZPP_ID","CbType",0x53ca27c6,"zpp_nape.ZPP_ID.CbType","zpp_nape/ID.hx",186,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_190_CbSet,"zpp_nape.ZPP_ID","CbSet",0x19a0cc16,"zpp_nape.ZPP_ID.CbSet","zpp_nape/ID.hx",190,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_194_Listener,"zpp_nape.ZPP_ID","Listener",0x1b258481,"zpp_nape.ZPP_ID.Listener","zpp_nape/ID.hx",194,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_198_ZPP_SimpleVert,"zpp_nape.ZPP_ID","ZPP_SimpleVert",0x3252f855,"zpp_nape.ZPP_ID.ZPP_SimpleVert","zpp_nape/ID.hx",198,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_202_ZPP_SimpleSeg,"zpp_nape.ZPP_ID","ZPP_SimpleSeg",0x0dfe1871,"zpp_nape.ZPP_ID.ZPP_SimpleSeg","zpp_nape/ID.hx",202,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_206_Space,"zpp_nape.ZPP_ID","Space",0x5955ae99,"zpp_nape.ZPP_ID.Space","zpp_nape/ID.hx",206,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_210_InteractionGroup,"zpp_nape.ZPP_ID","InteractionGroup",0xe44d2b1a,"zpp_nape.ZPP_ID.InteractionGroup","zpp_nape/ID.hx",210,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_176_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",176,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_180_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",180,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_184_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",184,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_188_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",188,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_192_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",192,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_196_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",196,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_200_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",200,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_204_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",204,0xdcb88c81)
HX_LOCAL_STACK_FRAME(_hx_pos_71a0ef752644c384_208_boot,"zpp_nape.ZPP_ID","boot",0x8525919f,"zpp_nape.ZPP_ID.boot","zpp_nape/ID.hx",208,0xdcb88c81)
namespace zpp_nape{

void ZPP_ID_obj::__construct() { }

Dynamic ZPP_ID_obj::__CreateEmpty() { return new ZPP_ID_obj; }

void *ZPP_ID_obj::_hx_vtable = 0;

Dynamic ZPP_ID_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZPP_ID_obj > _hx_result = new ZPP_ID_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZPP_ID_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3a4832ad;
}

int ZPP_ID_obj::_Constraint;

int ZPP_ID_obj::Constraint(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_178_Constraint)
HXDLIN( 178)		return ::zpp_nape::ZPP_ID_obj::_Constraint++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,Constraint,return )

int ZPP_ID_obj::_Interactor;

int ZPP_ID_obj::Interactor(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_182_Interactor)
HXDLIN( 182)		return ::zpp_nape::ZPP_ID_obj::_Interactor++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,Interactor,return )

int ZPP_ID_obj::_CbType;

int ZPP_ID_obj::CbType(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_186_CbType)
HXDLIN( 186)		return ::zpp_nape::ZPP_ID_obj::_CbType++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,CbType,return )

int ZPP_ID_obj::_CbSet;

int ZPP_ID_obj::CbSet(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_190_CbSet)
HXDLIN( 190)		return ::zpp_nape::ZPP_ID_obj::_CbSet++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,CbSet,return )

int ZPP_ID_obj::_Listener;

int ZPP_ID_obj::Listener(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_194_Listener)
HXDLIN( 194)		return ::zpp_nape::ZPP_ID_obj::_Listener++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,Listener,return )

int ZPP_ID_obj::_ZPP_SimpleVert;

int ZPP_ID_obj::ZPP_SimpleVert(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_198_ZPP_SimpleVert)
HXDLIN( 198)		return ::zpp_nape::ZPP_ID_obj::_ZPP_SimpleVert++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,ZPP_SimpleVert,return )

int ZPP_ID_obj::_ZPP_SimpleSeg;

int ZPP_ID_obj::ZPP_SimpleSeg(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_202_ZPP_SimpleSeg)
HXDLIN( 202)		return ::zpp_nape::ZPP_ID_obj::_ZPP_SimpleSeg++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,ZPP_SimpleSeg,return )

int ZPP_ID_obj::_Space;

int ZPP_ID_obj::Space(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_206_Space)
HXDLIN( 206)		return ::zpp_nape::ZPP_ID_obj::_Space++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,Space,return )

int ZPP_ID_obj::_InteractionGroup;

int ZPP_ID_obj::InteractionGroup(){
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_210_InteractionGroup)
HXDLIN( 210)		return ::zpp_nape::ZPP_ID_obj::_InteractionGroup++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ZPP_ID_obj,InteractionGroup,return )


ZPP_ID_obj::ZPP_ID_obj()
{
}

bool ZPP_ID_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"CbSet") ) { outValue = CbSet_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Space") ) { outValue = Space_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"CbType") ) { outValue = CbType_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_CbSet") ) { outValue = ( _CbSet ); return true; }
		if (HX_FIELD_EQ(inName,"_Space") ) { outValue = ( _Space ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_CbType") ) { outValue = ( _CbType ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"Listener") ) { outValue = Listener_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_Listener") ) { outValue = ( _Listener ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"Constraint") ) { outValue = Constraint_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Interactor") ) { outValue = Interactor_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_Constraint") ) { outValue = ( _Constraint ); return true; }
		if (HX_FIELD_EQ(inName,"_Interactor") ) { outValue = ( _Interactor ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ZPP_SimpleSeg") ) { outValue = ZPP_SimpleSeg_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ZPP_SimpleVert") ) { outValue = ZPP_SimpleVert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_ZPP_SimpleSeg") ) { outValue = ( _ZPP_SimpleSeg ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_ZPP_SimpleVert") ) { outValue = ( _ZPP_SimpleVert ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"InteractionGroup") ) { outValue = InteractionGroup_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_InteractionGroup") ) { outValue = ( _InteractionGroup ); return true; }
	}
	return false;
}

bool ZPP_ID_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_CbSet") ) { _CbSet=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"_Space") ) { _Space=ioValue.Cast< int >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_CbType") ) { _CbType=ioValue.Cast< int >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_Listener") ) { _Listener=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_Constraint") ) { _Constraint=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"_Interactor") ) { _Interactor=ioValue.Cast< int >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_ZPP_SimpleSeg") ) { _ZPP_SimpleSeg=ioValue.Cast< int >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_ZPP_SimpleVert") ) { _ZPP_SimpleVert=ioValue.Cast< int >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_InteractionGroup") ) { _InteractionGroup=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *ZPP_ID_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ZPP_ID_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &ZPP_ID_obj::_Constraint,HX_("_Constraint",9c,d1,06,24)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_Interactor,HX_("_Interactor",98,97,aa,4e)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_CbType,HX_("_CbType",b8,36,87,dd)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_CbSet,HX_("_CbSet",64,61,c6,d0)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_Listener,HX_("_Listener",f3,b3,79,59)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_ZPP_SimpleVert,HX_("_ZPP_SimpleVert",47,49,03,dd)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_ZPP_SimpleSeg,HX_("_ZPP_SimpleSeg",bf,ab,ce,b9)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_Space,HX_("_Space",e7,43,7b,10)},
	{hx::fsInt,(void *) &ZPP_ID_obj::_InteractionGroup,HX_("_InteractionGroup",8c,1c,69,d8)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ZPP_ID_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_Constraint,"_Constraint");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_Interactor,"_Interactor");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_CbType,"_CbType");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_CbSet,"_CbSet");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_Listener,"_Listener");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_ZPP_SimpleVert,"_ZPP_SimpleVert");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_ZPP_SimpleSeg,"_ZPP_SimpleSeg");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_Space,"_Space");
	HX_MARK_MEMBER_NAME(ZPP_ID_obj::_InteractionGroup,"_InteractionGroup");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZPP_ID_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_Constraint,"_Constraint");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_Interactor,"_Interactor");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_CbType,"_CbType");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_CbSet,"_CbSet");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_Listener,"_Listener");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_ZPP_SimpleVert,"_ZPP_SimpleVert");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_ZPP_SimpleSeg,"_ZPP_SimpleSeg");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_Space,"_Space");
	HX_VISIT_MEMBER_NAME(ZPP_ID_obj::_InteractionGroup,"_InteractionGroup");
};

#endif

hx::Class ZPP_ID_obj::__mClass;

static ::String ZPP_ID_obj_sStaticFields[] = {
	HX_("_Constraint",9c,d1,06,24),
	HX_("Constraint",7d,04,7d,51),
	HX_("_Interactor",98,97,aa,4e),
	HX_("Interactor",79,ca,20,7c),
	HX_("_CbType",b8,36,87,dd),
	HX_("CbType",19,25,10,6f),
	HX_("_CbSet",64,61,c6,d0),
	HX_("CbSet",23,1a,df,d4),
	HX_("_Listener",f3,b3,79,59),
	HX_("Listener",94,bc,e3,11),
	HX_("_ZPP_SimpleVert",47,49,03,dd),
	HX_("ZPP_SimpleVert",a8,00,a3,93),
	HX_("_ZPP_SimpleSeg",bf,ab,ce,b9),
	HX_("ZPP_SimpleSeg",7e,bb,7c,7b),
	HX_("_Space",e7,43,7b,10),
	HX_("Space",a6,fc,93,14),
	HX_("_InteractionGroup",8c,1c,69,d8),
	HX_("InteractionGroup",2d,2e,ee,3f),
	::String(null())
};

void ZPP_ID_obj::__register()
{
	ZPP_ID_obj _hx_dummy;
	ZPP_ID_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("zpp_nape.ZPP_ID",21,4a,7f,e6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ZPP_ID_obj::__GetStatic;
	__mClass->mSetStaticField = &ZPP_ID_obj::__SetStatic;
	__mClass->mMarkFunc = ZPP_ID_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ZPP_ID_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ZPP_ID_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZPP_ID_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZPP_ID_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZPP_ID_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ZPP_ID_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_176_boot)
HXDLIN( 176)		_Constraint = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_180_boot)
HXDLIN( 180)		_Interactor = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_184_boot)
HXDLIN( 184)		_CbType = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_188_boot)
HXDLIN( 188)		_CbSet = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_192_boot)
HXDLIN( 192)		_Listener = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_196_boot)
HXDLIN( 196)		_ZPP_SimpleVert = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_200_boot)
HXDLIN( 200)		_ZPP_SimpleSeg = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_204_boot)
HXDLIN( 204)		_Space = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_71a0ef752644c384_208_boot)
HXDLIN( 208)		_InteractionGroup = 0;
            	}
}

} // end namespace zpp_nape
