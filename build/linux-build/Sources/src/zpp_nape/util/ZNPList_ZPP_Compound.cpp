// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_phys_ZPP_Compound
#include <hxinc/zpp_nape/phys/ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <hxinc/zpp_nape/phys/ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Compound
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Compound
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Compound.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2260_new,"zpp_nape.util.ZNPList_ZPP_Compound","new",0x96c0b492,"zpp_nape.util.ZNPList_ZPP_Compound.new","zpp_nape/util/Lists.hx",2260,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2266_begin,"zpp_nape.util.ZNPList_ZPP_Compound","begin",0x66e9bedb,"zpp_nape.util.ZNPList_ZPP_Compound.begin","zpp_nape/util/Lists.hx",2266,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2273_setbegin,"zpp_nape.util.ZNPList_ZPP_Compound","setbegin",0x298d89d5,"zpp_nape.util.ZNPList_ZPP_Compound.setbegin","zpp_nape/util/Lists.hx",2273,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2279_add,"zpp_nape.util.ZNPList_ZPP_Compound","add",0x96b6d653,"zpp_nape.util.ZNPList_ZPP_Compound.add","zpp_nape/util/Lists.hx",2279,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2283_inlined_add,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_add",0x1945b2bf,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_add","zpp_nape/util/Lists.hx",2283,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2329_addAll,"zpp_nape.util.ZNPList_ZPP_Compound","addAll",0xa9c1508e,"zpp_nape.util.ZNPList_ZPP_Compound.addAll","zpp_nape/util/Lists.hx",2329,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2339_insert,"zpp_nape.util.ZNPList_ZPP_Compound","insert",0xa8a38a47,"zpp_nape.util.ZNPList_ZPP_Compound.insert","zpp_nape/util/Lists.hx",2339,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2343_inlined_insert,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_insert",0x6529395b,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_insert","zpp_nape/util/Lists.hx",2343,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2387_pop,"zpp_nape.util.ZNPList_ZPP_Compound","pop",0x96c241c3,"zpp_nape.util.ZNPList_ZPP_Compound.pop","zpp_nape/util/Lists.hx",2387,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2391_inlined_pop,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_pop",0x19511e2f,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_pop","zpp_nape/util/Lists.hx",2391,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2425_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_Compound","pop_unsafe",0xde7e6262,"zpp_nape.util.ZNPList_ZPP_Compound.pop_unsafe","zpp_nape/util/Lists.hx",2425,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2429_inlined_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_pop_unsafe",0x650b2b76,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_pop_unsafe","zpp_nape/util/Lists.hx",2429,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2451_remove,"zpp_nape.util.ZNPList_ZPP_Compound","remove",0x0f4ee352,"zpp_nape.util.ZNPList_ZPP_Compound.remove","zpp_nape/util/Lists.hx",2451,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2453_try_remove,"zpp_nape.util.ZNPList_ZPP_Compound","try_remove",0xf5a89816,"zpp_nape.util.ZNPList_ZPP_Compound.try_remove","zpp_nape/util/Lists.hx",2453,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2487_inlined_remove,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_remove",0xcbd49266,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_remove","zpp_nape/util/Lists.hx",2487,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2491_inlined_try_remove,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_try_remove",0x7c35612a,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_try_remove","zpp_nape/util/Lists.hx",2491,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2515_erase,"zpp_nape.util.ZNPList_ZPP_Compound","erase",0x29b0bd98,"zpp_nape.util.ZNPList_ZPP_Compound.erase","zpp_nape/util/Lists.hx",2515,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2519_inlined_erase,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_erase",0x93008d04,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_erase","zpp_nape/util/Lists.hx",2519,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2565_splice,"zpp_nape.util.ZNPList_ZPP_Compound","splice",0xca64cc8a,"zpp_nape.util.ZNPList_ZPP_Compound.splice","zpp_nape/util/Lists.hx",2565,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2570_clear,"zpp_nape.util.ZNPList_ZPP_Compound","clear",0xfeef463f,"zpp_nape.util.ZNPList_ZPP_Compound.clear","zpp_nape/util/Lists.hx",2570,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2575_inlined_clear,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_clear",0x683f15ab,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_clear","zpp_nape/util/Lists.hx",2575,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2580_reverse,"zpp_nape.util.ZNPList_ZPP_Compound","reverse",0x7db41e54,"zpp_nape.util.ZNPList_ZPP_Compound.reverse","zpp_nape/util/Lists.hx",2580,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2596_empty,"zpp_nape.util.ZNPList_ZPP_Compound","empty",0x266e0f3f,"zpp_nape.util.ZNPList_ZPP_Compound.empty","zpp_nape/util/Lists.hx",2596,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2601_size,"zpp_nape.util.ZNPList_ZPP_Compound","size",0x552e684f,"zpp_nape.util.ZNPList_ZPP_Compound.size","zpp_nape/util/Lists.hx",2601,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2604_has,"zpp_nape.util.ZNPList_ZPP_Compound","has",0x96bc238c,"zpp_nape.util.ZNPList_ZPP_Compound.has","zpp_nape/util/Lists.hx",2604,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2608_inlined_has,"zpp_nape.util.ZNPList_ZPP_Compound","inlined_has",0x194afff8,"zpp_nape.util.ZNPList_ZPP_Compound.inlined_has","zpp_nape/util/Lists.hx",2608,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2639_front,"zpp_nape.util.ZNPList_ZPP_Compound","front",0xbd21ed5b,"zpp_nape.util.ZNPList_ZPP_Compound.front","zpp_nape/util/Lists.hx",2639,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2641_back,"zpp_nape.util.ZNPList_ZPP_Compound","back",0x49eba1b5,"zpp_nape.util.ZNPList_ZPP_Compound.back","zpp_nape/util/Lists.hx",2641,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2650_iterator_at,"zpp_nape.util.ZNPList_ZPP_Compound","iterator_at",0x1de9f016,"zpp_nape.util.ZNPList_ZPP_Compound.iterator_at","zpp_nape/util/Lists.hx",2650,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_4de1a2cec2325a50_2663_at,"zpp_nape.util.ZNPList_ZPP_Compound","at",0x40f67d01,"zpp_nape.util.ZNPList_ZPP_Compound.at","zpp_nape/util/Lists.hx",2663,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZNPList_ZPP_Compound_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2260_new)
HXLINE(2270)		this->length = 0;
HXLINE(2269)		this->pushmod = false;
HXLINE(2268)		this->modified = false;
HXLINE(2261)		this->head = null();
            	}

Dynamic ZNPList_ZPP_Compound_obj::__CreateEmpty() { return new ZNPList_ZPP_Compound_obj; }

void *ZNPList_ZPP_Compound_obj::_hx_vtable = 0;

Dynamic ZNPList_ZPP_Compound_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZNPList_ZPP_Compound_obj > _hx_result = new ZNPList_ZPP_Compound_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZNPList_ZPP_Compound_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x175a39e4;
}

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2266_begin)
HXDLIN(2266)		return this->head;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,begin,return )

void ZNPList_ZPP_Compound_obj::setbegin( ::zpp_nape::util::ZNPNode_ZPP_Compound i){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2273_setbegin)
HXLINE(2274)		this->head = i;
HXLINE(2275)		this->modified = true;
HXLINE(2276)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,setbegin,(void))

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::add( ::zpp_nape::phys::ZPP_Compound o){
            	HX_GC_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2279_add)
HXDLIN(2279)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXDLIN(2279)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool )) {
HXDLIN(2279)			ret =  ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(2279)			ret = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2279)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = ret->next;
HXDLIN(2279)			ret->next = null();
            		}
HXDLIN(2279)		ret->elt = o;
HXDLIN(2279)		 ::zpp_nape::util::ZNPNode_ZPP_Compound temp = ret;
HXDLIN(2279)		temp->next = this->head;
HXDLIN(2279)		this->head = temp;
HXDLIN(2279)		this->modified = true;
HXDLIN(2279)		this->length++;
HXDLIN(2279)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,add,return )

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::inlined_add( ::zpp_nape::phys::ZPP_Compound o){
            	HX_GC_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2283_inlined_add)
HXLINE(2293)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXLINE(2295)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool )) {
HXLINE(2296)			ret =  ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(2302)			ret = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXLINE(2303)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = ret->next;
HXLINE(2304)			ret->next = null();
            		}
HXLINE(2311)		ret->elt = o;
HXLINE(2292)		 ::zpp_nape::util::ZNPNode_ZPP_Compound temp = ret;
HXLINE(2314)		temp->next = this->head;
HXLINE(2315)		this->head = temp;
HXLINE(2316)		this->modified = true;
HXLINE(2317)		this->length++;
HXLINE(2318)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,inlined_add,return )

void ZNPList_ZPP_Compound_obj::addAll( ::zpp_nape::util::ZNPList_ZPP_Compound x){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2329_addAll)
HXLINE(2330)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cx_ite = x->head;
HXLINE(2331)		while(hx::IsNotNull( cx_ite )){
HXLINE(2332)			 ::zpp_nape::phys::ZPP_Compound i = cx_ite->elt;
HXLINE(2333)			this->add(i);
HXLINE(2334)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,addAll,(void))

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::insert( ::zpp_nape::util::ZNPNode_ZPP_Compound cur, ::zpp_nape::phys::ZPP_Compound o){
            	HX_GC_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2339_insert)
HXDLIN(2339)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXDLIN(2339)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool )) {
HXDLIN(2339)			ret =  ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(2339)			ret = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2339)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = ret->next;
HXDLIN(2339)			ret->next = null();
            		}
HXDLIN(2339)		ret->elt = o;
HXDLIN(2339)		 ::zpp_nape::util::ZNPNode_ZPP_Compound temp = ret;
HXDLIN(2339)		if (hx::IsNull( cur )) {
HXDLIN(2339)			temp->next = this->head;
HXDLIN(2339)			this->head = temp;
            		}
            		else {
HXDLIN(2339)			temp->next = cur->next;
HXDLIN(2339)			cur->next = temp;
            		}
HXDLIN(2339)		this->pushmod = (this->modified = true);
HXDLIN(2339)		this->length++;
HXDLIN(2339)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_Compound_obj,insert,return )

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::inlined_insert( ::zpp_nape::util::ZNPNode_ZPP_Compound cur, ::zpp_nape::phys::ZPP_Compound o){
            	HX_GC_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2343_inlined_insert)
HXLINE(2353)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXLINE(2355)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool )) {
HXLINE(2356)			ret =  ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(2362)			ret = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXLINE(2363)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = ret->next;
HXLINE(2364)			ret->next = null();
            		}
HXLINE(2371)		ret->elt = o;
HXLINE(2352)		 ::zpp_nape::util::ZNPNode_ZPP_Compound temp = ret;
HXLINE(2374)		if (hx::IsNull( cur )) {
HXLINE(2375)			temp->next = this->head;
HXLINE(2376)			this->head = temp;
            		}
            		else {
HXLINE(2379)			temp->next = cur->next;
HXLINE(2380)			cur->next = temp;
            		}
HXLINE(2382)		this->pushmod = (this->modified = true);
HXLINE(2383)		this->length++;
HXLINE(2384)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_Compound_obj,inlined_insert,return )

void ZNPList_ZPP_Compound_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2387_pop)
HXDLIN(2387)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXDLIN(2387)		this->head = ret->next;
HXDLIN(2387)		{
HXDLIN(2387)			 ::zpp_nape::util::ZNPNode_ZPP_Compound o = ret;
HXDLIN(2387)			o->elt = null();
HXDLIN(2387)			o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2387)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            		}
HXDLIN(2387)		if (hx::IsNull( this->head )) {
HXDLIN(2387)			this->pushmod = true;
            		}
HXDLIN(2387)		this->modified = true;
HXDLIN(2387)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,pop,(void))

void ZNPList_ZPP_Compound_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2391_inlined_pop)
HXLINE(2400)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXLINE(2401)		this->head = ret->next;
HXLINE(2403)		{
HXLINE(2404)			 ::zpp_nape::util::ZNPNode_ZPP_Compound o = ret;
HXLINE(2413)			o->elt = null();
HXLINE(2414)			o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXLINE(2415)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            		}
HXLINE(2420)		if (hx::IsNull( this->head )) {
HXLINE(2420)			this->pushmod = true;
            		}
HXLINE(2421)		this->modified = true;
HXLINE(2422)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,inlined_pop,(void))

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2425_pop_unsafe)
HXDLIN(2425)		 ::zpp_nape::phys::ZPP_Compound ret = this->head->elt;
HXDLIN(2425)		this->pop();
HXDLIN(2425)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,pop_unsafe,return )

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2429_inlined_pop_unsafe)
HXLINE(2438)		 ::zpp_nape::phys::ZPP_Compound ret = this->head->elt;
HXLINE(2439)		this->pop();
HXLINE(2440)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,inlined_pop_unsafe,return )

void ZNPList_ZPP_Compound_obj::remove( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2451_remove)
HXDLIN(2451)		 ::zpp_nape::util::ZNPNode_ZPP_Compound pre = null();
HXDLIN(2451)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = this->head;
HXDLIN(2451)		bool ret = false;
HXDLIN(2451)		while(hx::IsNotNull( cur )){
HXDLIN(2451)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(2451)				{
HXDLIN(2451)					 ::zpp_nape::util::ZNPNode_ZPP_Compound old;
HXDLIN(2451)					 ::zpp_nape::util::ZNPNode_ZPP_Compound ret1;
HXDLIN(2451)					if (hx::IsNull( pre )) {
HXDLIN(2451)						old = this->head;
HXDLIN(2451)						ret1 = old->next;
HXDLIN(2451)						this->head = ret1;
HXDLIN(2451)						if (hx::IsNull( this->head )) {
HXDLIN(2451)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(2451)						old = pre->next;
HXDLIN(2451)						ret1 = old->next;
HXDLIN(2451)						pre->next = ret1;
HXDLIN(2451)						if (hx::IsNull( ret1 )) {
HXDLIN(2451)							this->pushmod = true;
            						}
            					}
HXDLIN(2451)					{
HXDLIN(2451)						 ::zpp_nape::util::ZNPNode_ZPP_Compound o = old;
HXDLIN(2451)						o->elt = null();
HXDLIN(2451)						o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2451)						::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            					}
HXDLIN(2451)					this->modified = true;
HXDLIN(2451)					this->length--;
HXDLIN(2451)					this->pushmod = true;
            				}
HXDLIN(2451)				ret = true;
HXDLIN(2451)				goto _hx_goto_13;
            			}
HXDLIN(2451)			pre = cur;
HXDLIN(2451)			cur = cur->next;
            		}
            		_hx_goto_13:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,remove,(void))

bool ZNPList_ZPP_Compound_obj::try_remove( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2453_try_remove)
HXLINE(2462)		 ::zpp_nape::util::ZNPNode_ZPP_Compound pre = null();
HXLINE(2463)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = this->head;
HXLINE(2464)		bool ret = false;
HXLINE(2465)		while(hx::IsNotNull( cur )){
HXLINE(2466)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(2467)				this->erase(pre);
HXLINE(2468)				ret = true;
HXLINE(2469)				goto _hx_goto_15;
            			}
HXLINE(2471)			pre = cur;
HXLINE(2472)			cur = cur->next;
            		}
            		_hx_goto_15:;
HXLINE(2474)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,try_remove,return )

void ZNPList_ZPP_Compound_obj::inlined_remove( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2487_inlined_remove)
HXDLIN(2487)		 ::zpp_nape::util::ZNPNode_ZPP_Compound pre = null();
HXDLIN(2487)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = this->head;
HXDLIN(2487)		bool ret = false;
HXDLIN(2487)		while(hx::IsNotNull( cur )){
HXDLIN(2487)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(2487)				{
HXDLIN(2487)					 ::zpp_nape::util::ZNPNode_ZPP_Compound old;
HXDLIN(2487)					 ::zpp_nape::util::ZNPNode_ZPP_Compound ret1;
HXDLIN(2487)					if (hx::IsNull( pre )) {
HXDLIN(2487)						old = this->head;
HXDLIN(2487)						ret1 = old->next;
HXDLIN(2487)						this->head = ret1;
HXDLIN(2487)						if (hx::IsNull( this->head )) {
HXDLIN(2487)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(2487)						old = pre->next;
HXDLIN(2487)						ret1 = old->next;
HXDLIN(2487)						pre->next = ret1;
HXDLIN(2487)						if (hx::IsNull( ret1 )) {
HXDLIN(2487)							this->pushmod = true;
            						}
            					}
HXDLIN(2487)					{
HXDLIN(2487)						 ::zpp_nape::util::ZNPNode_ZPP_Compound o = old;
HXDLIN(2487)						o->elt = null();
HXDLIN(2487)						o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2487)						::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            					}
HXDLIN(2487)					this->modified = true;
HXDLIN(2487)					this->length--;
HXDLIN(2487)					this->pushmod = true;
            				}
HXDLIN(2487)				ret = true;
HXDLIN(2487)				goto _hx_goto_17;
            			}
HXDLIN(2487)			pre = cur;
HXDLIN(2487)			cur = cur->next;
            		}
            		_hx_goto_17:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,inlined_remove,(void))

bool ZNPList_ZPP_Compound_obj::inlined_try_remove( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2491_inlined_try_remove)
HXLINE(2500)		 ::zpp_nape::util::ZNPNode_ZPP_Compound pre = null();
HXLINE(2501)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = this->head;
HXLINE(2502)		bool ret = false;
HXLINE(2503)		while(hx::IsNotNull( cur )){
HXLINE(2504)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(2505)				{
HXLINE(2505)					 ::zpp_nape::util::ZNPNode_ZPP_Compound old;
HXDLIN(2505)					 ::zpp_nape::util::ZNPNode_ZPP_Compound ret1;
HXDLIN(2505)					if (hx::IsNull( pre )) {
HXLINE(2505)						old = this->head;
HXDLIN(2505)						ret1 = old->next;
HXDLIN(2505)						this->head = ret1;
HXDLIN(2505)						if (hx::IsNull( this->head )) {
HXLINE(2505)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(2505)						old = pre->next;
HXDLIN(2505)						ret1 = old->next;
HXDLIN(2505)						pre->next = ret1;
HXDLIN(2505)						if (hx::IsNull( ret1 )) {
HXLINE(2505)							this->pushmod = true;
            						}
            					}
HXDLIN(2505)					{
HXLINE(2505)						 ::zpp_nape::util::ZNPNode_ZPP_Compound o = old;
HXDLIN(2505)						o->elt = null();
HXDLIN(2505)						o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2505)						::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            					}
HXDLIN(2505)					this->modified = true;
HXDLIN(2505)					this->length--;
HXDLIN(2505)					this->pushmod = true;
            				}
HXLINE(2506)				ret = true;
HXLINE(2507)				goto _hx_goto_19;
            			}
HXLINE(2509)			pre = cur;
HXLINE(2510)			cur = cur->next;
            		}
            		_hx_goto_19:;
HXLINE(2512)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,inlined_try_remove,return )

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::erase( ::zpp_nape::util::ZNPNode_ZPP_Compound pre){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2515_erase)
HXDLIN(2515)		 ::zpp_nape::util::ZNPNode_ZPP_Compound old;
HXDLIN(2515)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXDLIN(2515)		if (hx::IsNull( pre )) {
HXDLIN(2515)			old = this->head;
HXDLIN(2515)			ret = old->next;
HXDLIN(2515)			this->head = ret;
HXDLIN(2515)			if (hx::IsNull( this->head )) {
HXDLIN(2515)				this->pushmod = true;
            			}
            		}
            		else {
HXDLIN(2515)			old = pre->next;
HXDLIN(2515)			ret = old->next;
HXDLIN(2515)			pre->next = ret;
HXDLIN(2515)			if (hx::IsNull( ret )) {
HXDLIN(2515)				this->pushmod = true;
            			}
            		}
HXDLIN(2515)		{
HXDLIN(2515)			 ::zpp_nape::util::ZNPNode_ZPP_Compound o = old;
HXDLIN(2515)			o->elt = null();
HXDLIN(2515)			o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2515)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            		}
HXDLIN(2515)		this->modified = true;
HXDLIN(2515)		this->length--;
HXDLIN(2515)		this->pushmod = true;
HXDLIN(2515)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::inlined_erase( ::zpp_nape::util::ZNPNode_ZPP_Compound pre){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2519_inlined_erase)
HXLINE(2528)		 ::zpp_nape::util::ZNPNode_ZPP_Compound old;
HXLINE(2529)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret;
HXLINE(2530)		if (hx::IsNull( pre )) {
HXLINE(2531)			old = this->head;
HXLINE(2532)			ret = old->next;
HXLINE(2533)			this->head = ret;
HXLINE(2534)			if (hx::IsNull( this->head )) {
HXLINE(2534)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(2537)			old = pre->next;
HXLINE(2538)			ret = old->next;
HXLINE(2539)			pre->next = ret;
HXLINE(2540)			if (hx::IsNull( ret )) {
HXLINE(2540)				this->pushmod = true;
            			}
            		}
HXLINE(2543)		{
HXLINE(2544)			 ::zpp_nape::util::ZNPNode_ZPP_Compound o = old;
HXLINE(2553)			o->elt = null();
HXLINE(2554)			o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXLINE(2555)			::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            		}
HXLINE(2560)		this->modified = true;
HXLINE(2561)		this->length--;
HXLINE(2562)		this->pushmod = true;
HXLINE(2563)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,inlined_erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::splice( ::zpp_nape::util::ZNPNode_ZPP_Compound pre,int n){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2565_splice)
HXLINE(2566)		while(true){
HXLINE(2566)			bool _hx_tmp;
HXDLIN(2566)			n = (n - 1);
HXDLIN(2566)			if (((n + 1) > 0)) {
HXLINE(2566)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE(2566)				_hx_tmp = false;
            			}
HXDLIN(2566)			if (!(_hx_tmp)) {
HXLINE(2566)				goto _hx_goto_23;
            			}
HXDLIN(2566)			this->erase(pre);
            		}
            		_hx_goto_23:;
HXLINE(2567)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_Compound_obj,splice,return )

void ZNPList_ZPP_Compound_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2570_clear)
HXDLIN(2570)		while(hx::IsNotNull( this->head )){
HXDLIN(2570)			 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXDLIN(2570)			this->head = ret->next;
HXDLIN(2570)			{
HXDLIN(2570)				 ::zpp_nape::util::ZNPNode_ZPP_Compound o = ret;
HXDLIN(2570)				o->elt = null();
HXDLIN(2570)				o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2570)				::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            			}
HXDLIN(2570)			if (hx::IsNull( this->head )) {
HXDLIN(2570)				this->pushmod = true;
            			}
HXDLIN(2570)			this->modified = true;
HXDLIN(2570)			this->length--;
            		}
HXDLIN(2570)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,clear,(void))

void ZNPList_ZPP_Compound_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2575_inlined_clear)
HXLINE(2576)		while(hx::IsNotNull( this->head )){
HXLINE(2576)			 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXDLIN(2576)			this->head = ret->next;
HXDLIN(2576)			{
HXLINE(2576)				 ::zpp_nape::util::ZNPNode_ZPP_Compound o = ret;
HXDLIN(2576)				o->elt = null();
HXDLIN(2576)				o->next = ::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool;
HXDLIN(2576)				::zpp_nape::util::ZNPNode_ZPP_Compound_obj::zpp_pool = o;
            			}
HXDLIN(2576)			if (hx::IsNull( this->head )) {
HXLINE(2576)				this->pushmod = true;
            			}
HXDLIN(2576)			this->modified = true;
HXDLIN(2576)			this->length--;
            		}
HXLINE(2577)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,inlined_clear,(void))

void ZNPList_ZPP_Compound_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2580_reverse)
HXLINE(2581)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = this->head;
HXLINE(2582)		 ::zpp_nape::util::ZNPNode_ZPP_Compound pre = null();
HXLINE(2583)		while(hx::IsNotNull( cur )){
HXLINE(2584)			 ::zpp_nape::util::ZNPNode_ZPP_Compound nx = cur->next;
HXLINE(2585)			cur->next = pre;
HXLINE(2586)			this->head = cur;
HXLINE(2587)			pre = cur;
HXLINE(2588)			cur = nx;
            		}
HXLINE(2590)		this->modified = true;
HXLINE(2591)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,reverse,(void))

bool ZNPList_ZPP_Compound_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2596_empty)
HXDLIN(2596)		return hx::IsNull( this->head );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,empty,return )

int ZNPList_ZPP_Compound_obj::size(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2601_size)
HXDLIN(2601)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,size,return )

bool ZNPList_ZPP_Compound_obj::has( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2604_has)
HXDLIN(2604)		bool ret;
HXDLIN(2604)		{
HXDLIN(2604)			ret = false;
HXDLIN(2604)			{
HXDLIN(2604)				 ::zpp_nape::util::ZNPNode_ZPP_Compound cx_ite = this->head;
HXDLIN(2604)				while(hx::IsNotNull( cx_ite )){
HXDLIN(2604)					 ::zpp_nape::phys::ZPP_Compound npite = cx_ite->elt;
HXDLIN(2604)					if (hx::IsEq( npite,obj )) {
HXDLIN(2604)						ret = true;
HXDLIN(2604)						goto _hx_goto_33;
            					}
HXDLIN(2604)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_33:;
            			}
            		}
HXDLIN(2604)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,has,return )

bool ZNPList_ZPP_Compound_obj::inlined_has( ::zpp_nape::phys::ZPP_Compound obj){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2608_inlined_has)
HXLINE(2617)		bool ret;
HXLINE(2618)		{
HXLINE(2619)			ret = false;
HXLINE(2620)			{
HXLINE(2621)				 ::zpp_nape::util::ZNPNode_ZPP_Compound cx_ite = this->head;
HXLINE(2622)				while(hx::IsNotNull( cx_ite )){
HXLINE(2623)					 ::zpp_nape::phys::ZPP_Compound npite = cx_ite->elt;
HXLINE(2625)					if (hx::IsEq( npite,obj )) {
HXLINE(2626)						ret = true;
HXLINE(2627)						goto _hx_goto_35;
            					}
HXLINE(2630)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE(2634)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,inlined_has,return )

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::front(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2639_front)
HXDLIN(2639)		return this->head->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,front,return )

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::back(){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2641_back)
HXLINE(2642)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXLINE(2643)		 ::zpp_nape::util::ZNPNode_ZPP_Compound cur = ret;
HXLINE(2644)		while(hx::IsNotNull( cur )){
HXLINE(2645)			ret = cur;
HXLINE(2646)			cur = cur->next;
            		}
HXLINE(2648)		return ret->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_Compound_obj,back,return )

 ::zpp_nape::util::ZNPNode_ZPP_Compound ZNPList_ZPP_Compound_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2650_iterator_at)
HXLINE(2659)		 ::zpp_nape::util::ZNPNode_ZPP_Compound ret = this->head;
HXLINE(2660)		while(true){
HXLINE(2660)			bool _hx_tmp;
HXDLIN(2660)			ind = (ind - 1);
HXDLIN(2660)			if (((ind + 1) > 0)) {
HXLINE(2660)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE(2660)				_hx_tmp = false;
            			}
HXDLIN(2660)			if (!(_hx_tmp)) {
HXLINE(2660)				goto _hx_goto_40;
            			}
HXDLIN(2660)			ret = ret->next;
            		}
            		_hx_goto_40:;
HXLINE(2661)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,iterator_at,return )

 ::zpp_nape::phys::ZPP_Compound ZNPList_ZPP_Compound_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_4de1a2cec2325a50_2663_at)
HXLINE(2672)		 ::zpp_nape::util::ZNPNode_ZPP_Compound it = this->iterator_at(ind);
HXLINE(2673)		if (hx::IsNotNull( it )) {
HXLINE(2673)			return it->elt;
            		}
            		else {
HXLINE(2673)			return null();
            		}
HXDLIN(2673)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_Compound_obj,at,return )


hx::ObjectPtr< ZNPList_ZPP_Compound_obj > ZNPList_ZPP_Compound_obj::__new() {
	hx::ObjectPtr< ZNPList_ZPP_Compound_obj > __this = new ZNPList_ZPP_Compound_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZNPList_ZPP_Compound_obj > ZNPList_ZPP_Compound_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZNPList_ZPP_Compound_obj *__this = (ZNPList_ZPP_Compound_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPList_ZPP_Compound_obj), true, "zpp_nape.util.ZNPList_ZPP_Compound"));
	*(void **)__this = ZNPList_ZPP_Compound_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZNPList_ZPP_Compound_obj::ZNPList_ZPP_Compound_obj()
{
}

void ZNPList_ZPP_Compound_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZNPList_ZPP_Compound);
	HX_MARK_MEMBER_NAME(head,"head");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void ZNPList_ZPP_Compound_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(head,"head");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val ZNPList_ZPP_Compound_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { return hx::Val( head ); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn() ); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn() ); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length ); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn() ); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified ); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZNPList_ZPP_Compound_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { head=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_Compound >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZNPList_ZPP_Compound_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("head",20,29,0b,45));
	outFields->push(HX_("modified",49,db,c7,16));
	outFields->push(HX_("pushmod",28,29,4b,75));
	outFields->push(HX_("length",e6,94,07,9f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ZNPList_ZPP_Compound_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::zpp_nape::util::ZNPNode_ZPP_Compound */ ,(int)offsetof(ZNPList_ZPP_Compound_obj,head),HX_("head",20,29,0b,45)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_Compound_obj,modified),HX_("modified",49,db,c7,16)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_Compound_obj,pushmod),HX_("pushmod",28,29,4b,75)},
	{hx::fsInt,(int)offsetof(ZNPList_ZPP_Compound_obj,length),HX_("length",e6,94,07,9f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZNPList_ZPP_Compound_obj_sStaticStorageInfo = 0;
#endif

static ::String ZNPList_ZPP_Compound_obj_sMemberFields[] = {
	HX_("head",20,29,0b,45),
	HX_("begin",29,ea,55,b0),
	HX_("modified",49,db,c7,16),
	HX_("pushmod",28,29,4b,75),
	HX_("length",e6,94,07,9f),
	HX_("setbegin",47,e3,5c,2b),
	HX_("add",21,f2,49,00),
	HX_("inlined_add",8d,4c,2e,02),
	HX_("addAll",80,09,fb,9e),
	HX_("insert",39,43,dd,9d),
	HX_("inlined_insert",4d,34,10,a7),
	HX_("pop",91,5d,55,00),
	HX_("inlined_pop",fd,b7,39,02),
	HX_("pop_unsafe",54,7c,ec,75),
	HX_("inlined_pop_unsafe",68,87,ef,15),
	HX_("remove",44,9c,88,04),
	HX_("try_remove",08,b2,16,8d),
	HX_("inlined_remove",58,8d,bb,0d),
	HX_("inlined_try_remove",1c,bd,19,2d),
	HX_("erase",e6,e8,1c,73),
	HX_("inlined_erase",52,b6,9d,fa),
	HX_("splice",7c,85,9e,bf),
	HX_("clear",8d,71,5b,48),
	HX_("inlined_clear",f9,3e,dc,cf),
	HX_("reverse",22,39,fc,1a),
	HX_("empty",8d,3a,da,6f),
	HX_("size",c1,a0,53,4c),
	HX_("has",5a,3f,4f,00),
	HX_("inlined_has",c6,99,33,02),
	HX_("front",a9,18,8e,06),
	HX_("back",27,da,10,41),
	HX_("iterator_at",e4,89,d2,06),
	HX_("at",f3,54,00,00),
	::String(null()) };

hx::Class ZNPList_ZPP_Compound_obj::__mClass;

void ZNPList_ZPP_Compound_obj::__register()
{
	ZNPList_ZPP_Compound_obj _hx_dummy;
	ZNPList_ZPP_Compound_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("zpp_nape.util.ZNPList_ZPP_Compound",a0,c3,ca,87);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZNPList_ZPP_Compound_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZNPList_ZPP_Compound_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZNPList_ZPP_Compound_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZNPList_ZPP_Compound_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
