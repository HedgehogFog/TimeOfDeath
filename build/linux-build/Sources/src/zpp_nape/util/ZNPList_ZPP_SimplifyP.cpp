// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_geom_ZPP_SimplifyP
#include <hxinc/zpp_nape/geom/ZPP_SimplifyP.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_SimplifyP
#include <hxinc/zpp_nape/util/ZNPList_ZPP_SimplifyP.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_SimplifyP
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_SimplifyP.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6847_new,"zpp_nape.util.ZNPList_ZPP_SimplifyP","new",0x7e62b144,"zpp_nape.util.ZNPList_ZPP_SimplifyP.new","zpp_nape/util/Lists.hx",6847,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6853_begin,"zpp_nape.util.ZNPList_ZPP_SimplifyP","begin",0xf889cc0d,"zpp_nape.util.ZNPList_ZPP_SimplifyP.begin","zpp_nape/util/Lists.hx",6853,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6860_setbegin,"zpp_nape.util.ZNPList_ZPP_SimplifyP","setbegin",0x14c047e3,"zpp_nape.util.ZNPList_ZPP_SimplifyP.setbegin","zpp_nape/util/Lists.hx",6860,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6866_add,"zpp_nape.util.ZNPList_ZPP_SimplifyP","add",0x7e58d305,"zpp_nape.util.ZNPList_ZPP_SimplifyP.add","zpp_nape/util/Lists.hx",6866,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6870_inlined_add,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_add",0x591eb171,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_add","zpp_nape/util/Lists.hx",6870,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6916_addAll,"zpp_nape.util.ZNPList_ZPP_SimplifyP","addAll",0x842ccf1c,"zpp_nape.util.ZNPList_ZPP_SimplifyP.addAll","zpp_nape/util/Lists.hx",6916,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6926_insert,"zpp_nape.util.ZNPList_ZPP_SimplifyP","insert",0x830f08d5,"zpp_nape.util.ZNPList_ZPP_SimplifyP.insert","zpp_nape/util/Lists.hx",6926,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6930_inlined_insert,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_insert",0xf62af5e9,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_insert","zpp_nape/util/Lists.hx",6930,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6974_pop,"zpp_nape.util.ZNPList_ZPP_SimplifyP","pop",0x7e643e75,"zpp_nape.util.ZNPList_ZPP_SimplifyP.pop","zpp_nape/util/Lists.hx",6974,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_6978_inlined_pop,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_pop",0x592a1ce1,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_pop","zpp_nape/util/Lists.hx",6978,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7012_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_SimplifyP","pop_unsafe",0x0a673ff0,"zpp_nape.util.ZNPList_ZPP_SimplifyP.pop_unsafe","zpp_nape/util/Lists.hx",7012,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7016_inlined_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_pop_unsafe",0x22814704,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_pop_unsafe","zpp_nape/util/Lists.hx",7016,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7038_remove,"zpp_nape.util.ZNPList_ZPP_SimplifyP","remove",0xe9ba61e0,"zpp_nape.util.ZNPList_ZPP_SimplifyP.remove","zpp_nape/util/Lists.hx",7038,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7040_try_remove,"zpp_nape.util.ZNPList_ZPP_SimplifyP","try_remove",0x219175a4,"zpp_nape.util.ZNPList_ZPP_SimplifyP.try_remove","zpp_nape/util/Lists.hx",7040,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7074_inlined_remove,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_remove",0x5cd64ef4,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_remove","zpp_nape/util/Lists.hx",7074,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7078_inlined_try_remove,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_try_remove",0x39ab7cb8,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_try_remove","zpp_nape/util/Lists.hx",7078,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7102_erase,"zpp_nape.util.ZNPList_ZPP_SimplifyP","erase",0xbb50caca,"zpp_nape.util.ZNPList_ZPP_SimplifyP.erase","zpp_nape/util/Lists.hx",7102,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7106_inlined_erase,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_erase",0x3a1c1c36,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_erase","zpp_nape/util/Lists.hx",7106,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7152_splice,"zpp_nape.util.ZNPList_ZPP_SimplifyP","splice",0xa4d04b18,"zpp_nape.util.ZNPList_ZPP_SimplifyP.splice","zpp_nape/util/Lists.hx",7152,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7157_clear,"zpp_nape.util.ZNPList_ZPP_SimplifyP","clear",0x908f5371,"zpp_nape.util.ZNPList_ZPP_SimplifyP.clear","zpp_nape/util/Lists.hx",7157,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7162_inlined_clear,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_clear",0x0f5aa4dd,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_clear","zpp_nape/util/Lists.hx",7162,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7167_reverse,"zpp_nape.util.ZNPList_ZPP_SimplifyP","reverse",0xc1575c06,"zpp_nape.util.ZNPList_ZPP_SimplifyP.reverse","zpp_nape/util/Lists.hx",7167,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7183_empty,"zpp_nape.util.ZNPList_ZPP_SimplifyP","empty",0xb80e1c71,"zpp_nape.util.ZNPList_ZPP_SimplifyP.empty","zpp_nape/util/Lists.hx",7183,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7188_size,"zpp_nape.util.ZNPList_ZPP_SimplifyP","size",0x1b49875d,"zpp_nape.util.ZNPList_ZPP_SimplifyP.size","zpp_nape/util/Lists.hx",7188,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7191_has,"zpp_nape.util.ZNPList_ZPP_SimplifyP","has",0x7e5e203e,"zpp_nape.util.ZNPList_ZPP_SimplifyP.has","zpp_nape/util/Lists.hx",7191,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7195_inlined_has,"zpp_nape.util.ZNPList_ZPP_SimplifyP","inlined_has",0x5923feaa,"zpp_nape.util.ZNPList_ZPP_SimplifyP.inlined_has","zpp_nape/util/Lists.hx",7195,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7226_front,"zpp_nape.util.ZNPList_ZPP_SimplifyP","front",0x4ec1fa8d,"zpp_nape.util.ZNPList_ZPP_SimplifyP.front","zpp_nape/util/Lists.hx",7226,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7228_back,"zpp_nape.util.ZNPList_ZPP_SimplifyP","back",0x1006c0c3,"zpp_nape.util.ZNPList_ZPP_SimplifyP.back","zpp_nape/util/Lists.hx",7228,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7237_iterator_at,"zpp_nape.util.ZNPList_ZPP_SimplifyP","iterator_at",0x5dc2eec8,"zpp_nape.util.ZNPList_ZPP_SimplifyP.iterator_at","zpp_nape/util/Lists.hx",7237,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ecabe5f435d737ba_7250_at,"zpp_nape.util.ZNPList_ZPP_SimplifyP","at",0x09c01c8f,"zpp_nape.util.ZNPList_ZPP_SimplifyP.at","zpp_nape/util/Lists.hx",7250,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZNPList_ZPP_SimplifyP_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6847_new)
HXLINE(6857)		this->length = 0;
HXLINE(6856)		this->pushmod = false;
HXLINE(6855)		this->modified = false;
HXLINE(6848)		this->head = null();
            	}

Dynamic ZNPList_ZPP_SimplifyP_obj::__CreateEmpty() { return new ZNPList_ZPP_SimplifyP_obj; }

void *ZNPList_ZPP_SimplifyP_obj::_hx_vtable = 0;

Dynamic ZNPList_ZPP_SimplifyP_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZNPList_ZPP_SimplifyP_obj > _hx_result = new ZNPList_ZPP_SimplifyP_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZNPList_ZPP_SimplifyP_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6d58048e;
}

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6853_begin)
HXDLIN(6853)		return this->head;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,begin,return )

void ZNPList_ZPP_SimplifyP_obj::setbegin( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP i){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6860_setbegin)
HXLINE(6861)		this->head = i;
HXLINE(6862)		this->modified = true;
HXLINE(6863)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,setbegin,(void))

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::add( ::zpp_nape::geom::ZPP_SimplifyP o){
            	HX_GC_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6866_add)
HXDLIN(6866)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXDLIN(6866)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool )) {
HXDLIN(6866)			ret =  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(6866)			ret = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(6866)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = ret->next;
HXDLIN(6866)			ret->next = null();
            		}
HXDLIN(6866)		ret->elt = o;
HXDLIN(6866)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP temp = ret;
HXDLIN(6866)		temp->next = this->head;
HXDLIN(6866)		this->head = temp;
HXDLIN(6866)		this->modified = true;
HXDLIN(6866)		this->length++;
HXDLIN(6866)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,add,return )

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::inlined_add( ::zpp_nape::geom::ZPP_SimplifyP o){
            	HX_GC_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6870_inlined_add)
HXLINE(6880)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXLINE(6882)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool )) {
HXLINE(6883)			ret =  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(6889)			ret = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXLINE(6890)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = ret->next;
HXLINE(6891)			ret->next = null();
            		}
HXLINE(6898)		ret->elt = o;
HXLINE(6879)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP temp = ret;
HXLINE(6901)		temp->next = this->head;
HXLINE(6902)		this->head = temp;
HXLINE(6903)		this->modified = true;
HXLINE(6904)		this->length++;
HXLINE(6905)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,inlined_add,return )

void ZNPList_ZPP_SimplifyP_obj::addAll( ::zpp_nape::util::ZNPList_ZPP_SimplifyP x){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6916_addAll)
HXLINE(6917)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cx_ite = x->head;
HXLINE(6918)		while(hx::IsNotNull( cx_ite )){
HXLINE(6919)			 ::zpp_nape::geom::ZPP_SimplifyP i = cx_ite->elt;
HXLINE(6920)			this->add(i);
HXLINE(6921)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,addAll,(void))

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::insert( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur, ::zpp_nape::geom::ZPP_SimplifyP o){
            	HX_GC_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6926_insert)
HXDLIN(6926)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXDLIN(6926)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool )) {
HXDLIN(6926)			ret =  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(6926)			ret = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(6926)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = ret->next;
HXDLIN(6926)			ret->next = null();
            		}
HXDLIN(6926)		ret->elt = o;
HXDLIN(6926)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP temp = ret;
HXDLIN(6926)		if (hx::IsNull( cur )) {
HXDLIN(6926)			temp->next = this->head;
HXDLIN(6926)			this->head = temp;
            		}
            		else {
HXDLIN(6926)			temp->next = cur->next;
HXDLIN(6926)			cur->next = temp;
            		}
HXDLIN(6926)		this->pushmod = (this->modified = true);
HXDLIN(6926)		this->length++;
HXDLIN(6926)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_SimplifyP_obj,insert,return )

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::inlined_insert( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur, ::zpp_nape::geom::ZPP_SimplifyP o){
            	HX_GC_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6930_inlined_insert)
HXLINE(6940)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXLINE(6942)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool )) {
HXLINE(6943)			ret =  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(6949)			ret = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXLINE(6950)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = ret->next;
HXLINE(6951)			ret->next = null();
            		}
HXLINE(6958)		ret->elt = o;
HXLINE(6939)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP temp = ret;
HXLINE(6961)		if (hx::IsNull( cur )) {
HXLINE(6962)			temp->next = this->head;
HXLINE(6963)			this->head = temp;
            		}
            		else {
HXLINE(6966)			temp->next = cur->next;
HXLINE(6967)			cur->next = temp;
            		}
HXLINE(6969)		this->pushmod = (this->modified = true);
HXLINE(6970)		this->length++;
HXLINE(6971)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_SimplifyP_obj,inlined_insert,return )

void ZNPList_ZPP_SimplifyP_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6974_pop)
HXDLIN(6974)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXDLIN(6974)		this->head = ret->next;
HXDLIN(6974)		{
HXDLIN(6974)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = ret;
HXDLIN(6974)			o->elt = null();
HXDLIN(6974)			o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(6974)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            		}
HXDLIN(6974)		if (hx::IsNull( this->head )) {
HXDLIN(6974)			this->pushmod = true;
            		}
HXDLIN(6974)		this->modified = true;
HXDLIN(6974)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,pop,(void))

void ZNPList_ZPP_SimplifyP_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_6978_inlined_pop)
HXLINE(6987)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXLINE(6988)		this->head = ret->next;
HXLINE(6990)		{
HXLINE(6991)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = ret;
HXLINE(7000)			o->elt = null();
HXLINE(7001)			o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXLINE(7002)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            		}
HXLINE(7007)		if (hx::IsNull( this->head )) {
HXLINE(7007)			this->pushmod = true;
            		}
HXLINE(7008)		this->modified = true;
HXLINE(7009)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,inlined_pop,(void))

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7012_pop_unsafe)
HXDLIN(7012)		 ::zpp_nape::geom::ZPP_SimplifyP ret = this->head->elt;
HXDLIN(7012)		this->pop();
HXDLIN(7012)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,pop_unsafe,return )

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7016_inlined_pop_unsafe)
HXLINE(7025)		 ::zpp_nape::geom::ZPP_SimplifyP ret = this->head->elt;
HXLINE(7026)		this->pop();
HXLINE(7027)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,inlined_pop_unsafe,return )

void ZNPList_ZPP_SimplifyP_obj::remove( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7038_remove)
HXDLIN(7038)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre = null();
HXDLIN(7038)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = this->head;
HXDLIN(7038)		bool ret = false;
HXDLIN(7038)		while(hx::IsNotNull( cur )){
HXDLIN(7038)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(7038)				{
HXDLIN(7038)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP old;
HXDLIN(7038)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret1;
HXDLIN(7038)					if (hx::IsNull( pre )) {
HXDLIN(7038)						old = this->head;
HXDLIN(7038)						ret1 = old->next;
HXDLIN(7038)						this->head = ret1;
HXDLIN(7038)						if (hx::IsNull( this->head )) {
HXDLIN(7038)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(7038)						old = pre->next;
HXDLIN(7038)						ret1 = old->next;
HXDLIN(7038)						pre->next = ret1;
HXDLIN(7038)						if (hx::IsNull( ret1 )) {
HXDLIN(7038)							this->pushmod = true;
            						}
            					}
HXDLIN(7038)					{
HXDLIN(7038)						 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = old;
HXDLIN(7038)						o->elt = null();
HXDLIN(7038)						o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7038)						::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            					}
HXDLIN(7038)					this->modified = true;
HXDLIN(7038)					this->length--;
HXDLIN(7038)					this->pushmod = true;
            				}
HXDLIN(7038)				ret = true;
HXDLIN(7038)				goto _hx_goto_13;
            			}
HXDLIN(7038)			pre = cur;
HXDLIN(7038)			cur = cur->next;
            		}
            		_hx_goto_13:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,remove,(void))

bool ZNPList_ZPP_SimplifyP_obj::try_remove( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7040_try_remove)
HXLINE(7049)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre = null();
HXLINE(7050)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = this->head;
HXLINE(7051)		bool ret = false;
HXLINE(7052)		while(hx::IsNotNull( cur )){
HXLINE(7053)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(7054)				this->erase(pre);
HXLINE(7055)				ret = true;
HXLINE(7056)				goto _hx_goto_15;
            			}
HXLINE(7058)			pre = cur;
HXLINE(7059)			cur = cur->next;
            		}
            		_hx_goto_15:;
HXLINE(7061)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,try_remove,return )

void ZNPList_ZPP_SimplifyP_obj::inlined_remove( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7074_inlined_remove)
HXDLIN(7074)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre = null();
HXDLIN(7074)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = this->head;
HXDLIN(7074)		bool ret = false;
HXDLIN(7074)		while(hx::IsNotNull( cur )){
HXDLIN(7074)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(7074)				{
HXDLIN(7074)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP old;
HXDLIN(7074)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret1;
HXDLIN(7074)					if (hx::IsNull( pre )) {
HXDLIN(7074)						old = this->head;
HXDLIN(7074)						ret1 = old->next;
HXDLIN(7074)						this->head = ret1;
HXDLIN(7074)						if (hx::IsNull( this->head )) {
HXDLIN(7074)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(7074)						old = pre->next;
HXDLIN(7074)						ret1 = old->next;
HXDLIN(7074)						pre->next = ret1;
HXDLIN(7074)						if (hx::IsNull( ret1 )) {
HXDLIN(7074)							this->pushmod = true;
            						}
            					}
HXDLIN(7074)					{
HXDLIN(7074)						 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = old;
HXDLIN(7074)						o->elt = null();
HXDLIN(7074)						o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7074)						::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            					}
HXDLIN(7074)					this->modified = true;
HXDLIN(7074)					this->length--;
HXDLIN(7074)					this->pushmod = true;
            				}
HXDLIN(7074)				ret = true;
HXDLIN(7074)				goto _hx_goto_17;
            			}
HXDLIN(7074)			pre = cur;
HXDLIN(7074)			cur = cur->next;
            		}
            		_hx_goto_17:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,inlined_remove,(void))

bool ZNPList_ZPP_SimplifyP_obj::inlined_try_remove( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7078_inlined_try_remove)
HXLINE(7087)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre = null();
HXLINE(7088)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = this->head;
HXLINE(7089)		bool ret = false;
HXLINE(7090)		while(hx::IsNotNull( cur )){
HXLINE(7091)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(7092)				{
HXLINE(7092)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP old;
HXDLIN(7092)					 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret1;
HXDLIN(7092)					if (hx::IsNull( pre )) {
HXLINE(7092)						old = this->head;
HXDLIN(7092)						ret1 = old->next;
HXDLIN(7092)						this->head = ret1;
HXDLIN(7092)						if (hx::IsNull( this->head )) {
HXLINE(7092)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(7092)						old = pre->next;
HXDLIN(7092)						ret1 = old->next;
HXDLIN(7092)						pre->next = ret1;
HXDLIN(7092)						if (hx::IsNull( ret1 )) {
HXLINE(7092)							this->pushmod = true;
            						}
            					}
HXDLIN(7092)					{
HXLINE(7092)						 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = old;
HXDLIN(7092)						o->elt = null();
HXDLIN(7092)						o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7092)						::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            					}
HXDLIN(7092)					this->modified = true;
HXDLIN(7092)					this->length--;
HXDLIN(7092)					this->pushmod = true;
            				}
HXLINE(7093)				ret = true;
HXLINE(7094)				goto _hx_goto_19;
            			}
HXLINE(7096)			pre = cur;
HXLINE(7097)			cur = cur->next;
            		}
            		_hx_goto_19:;
HXLINE(7099)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,inlined_try_remove,return )

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::erase( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7102_erase)
HXDLIN(7102)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP old;
HXDLIN(7102)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXDLIN(7102)		if (hx::IsNull( pre )) {
HXDLIN(7102)			old = this->head;
HXDLIN(7102)			ret = old->next;
HXDLIN(7102)			this->head = ret;
HXDLIN(7102)			if (hx::IsNull( this->head )) {
HXDLIN(7102)				this->pushmod = true;
            			}
            		}
            		else {
HXDLIN(7102)			old = pre->next;
HXDLIN(7102)			ret = old->next;
HXDLIN(7102)			pre->next = ret;
HXDLIN(7102)			if (hx::IsNull( ret )) {
HXDLIN(7102)				this->pushmod = true;
            			}
            		}
HXDLIN(7102)		{
HXDLIN(7102)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = old;
HXDLIN(7102)			o->elt = null();
HXDLIN(7102)			o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7102)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            		}
HXDLIN(7102)		this->modified = true;
HXDLIN(7102)		this->length--;
HXDLIN(7102)		this->pushmod = true;
HXDLIN(7102)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::inlined_erase( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7106_inlined_erase)
HXLINE(7115)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP old;
HXLINE(7116)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret;
HXLINE(7117)		if (hx::IsNull( pre )) {
HXLINE(7118)			old = this->head;
HXLINE(7119)			ret = old->next;
HXLINE(7120)			this->head = ret;
HXLINE(7121)			if (hx::IsNull( this->head )) {
HXLINE(7121)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(7124)			old = pre->next;
HXLINE(7125)			ret = old->next;
HXLINE(7126)			pre->next = ret;
HXLINE(7127)			if (hx::IsNull( ret )) {
HXLINE(7127)				this->pushmod = true;
            			}
            		}
HXLINE(7130)		{
HXLINE(7131)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = old;
HXLINE(7140)			o->elt = null();
HXLINE(7141)			o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXLINE(7142)			::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            		}
HXLINE(7147)		this->modified = true;
HXLINE(7148)		this->length--;
HXLINE(7149)		this->pushmod = true;
HXLINE(7150)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,inlined_erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::splice( ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre,int n){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7152_splice)
HXLINE(7153)		while(true){
HXLINE(7153)			bool _hx_tmp;
HXDLIN(7153)			n = (n - 1);
HXDLIN(7153)			if (((n + 1) > 0)) {
HXLINE(7153)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE(7153)				_hx_tmp = false;
            			}
HXDLIN(7153)			if (!(_hx_tmp)) {
HXLINE(7153)				goto _hx_goto_23;
            			}
HXDLIN(7153)			this->erase(pre);
            		}
            		_hx_goto_23:;
HXLINE(7154)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_SimplifyP_obj,splice,return )

void ZNPList_ZPP_SimplifyP_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7157_clear)
HXDLIN(7157)		while(hx::IsNotNull( this->head )){
HXDLIN(7157)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXDLIN(7157)			this->head = ret->next;
HXDLIN(7157)			{
HXDLIN(7157)				 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = ret;
HXDLIN(7157)				o->elt = null();
HXDLIN(7157)				o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7157)				::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            			}
HXDLIN(7157)			if (hx::IsNull( this->head )) {
HXDLIN(7157)				this->pushmod = true;
            			}
HXDLIN(7157)			this->modified = true;
HXDLIN(7157)			this->length--;
            		}
HXDLIN(7157)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,clear,(void))

void ZNPList_ZPP_SimplifyP_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7162_inlined_clear)
HXLINE(7163)		while(hx::IsNotNull( this->head )){
HXLINE(7163)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXDLIN(7163)			this->head = ret->next;
HXDLIN(7163)			{
HXLINE(7163)				 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP o = ret;
HXDLIN(7163)				o->elt = null();
HXDLIN(7163)				o->next = ::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool;
HXDLIN(7163)				::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::zpp_pool = o;
            			}
HXDLIN(7163)			if (hx::IsNull( this->head )) {
HXLINE(7163)				this->pushmod = true;
            			}
HXDLIN(7163)			this->modified = true;
HXDLIN(7163)			this->length--;
            		}
HXLINE(7164)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,inlined_clear,(void))

void ZNPList_ZPP_SimplifyP_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7167_reverse)
HXLINE(7168)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = this->head;
HXLINE(7169)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP pre = null();
HXLINE(7170)		while(hx::IsNotNull( cur )){
HXLINE(7171)			 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP nx = cur->next;
HXLINE(7172)			cur->next = pre;
HXLINE(7173)			this->head = cur;
HXLINE(7174)			pre = cur;
HXLINE(7175)			cur = nx;
            		}
HXLINE(7177)		this->modified = true;
HXLINE(7178)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,reverse,(void))

bool ZNPList_ZPP_SimplifyP_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7183_empty)
HXDLIN(7183)		return hx::IsNull( this->head );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,empty,return )

int ZNPList_ZPP_SimplifyP_obj::size(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7188_size)
HXDLIN(7188)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,size,return )

bool ZNPList_ZPP_SimplifyP_obj::has( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7191_has)
HXDLIN(7191)		bool ret;
HXDLIN(7191)		{
HXDLIN(7191)			ret = false;
HXDLIN(7191)			{
HXDLIN(7191)				 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cx_ite = this->head;
HXDLIN(7191)				while(hx::IsNotNull( cx_ite )){
HXDLIN(7191)					 ::zpp_nape::geom::ZPP_SimplifyP npite = cx_ite->elt;
HXDLIN(7191)					if (hx::IsEq( npite,obj )) {
HXDLIN(7191)						ret = true;
HXDLIN(7191)						goto _hx_goto_33;
            					}
HXDLIN(7191)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_33:;
            			}
            		}
HXDLIN(7191)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,has,return )

bool ZNPList_ZPP_SimplifyP_obj::inlined_has( ::zpp_nape::geom::ZPP_SimplifyP obj){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7195_inlined_has)
HXLINE(7204)		bool ret;
HXLINE(7205)		{
HXLINE(7206)			ret = false;
HXLINE(7207)			{
HXLINE(7208)				 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cx_ite = this->head;
HXLINE(7209)				while(hx::IsNotNull( cx_ite )){
HXLINE(7210)					 ::zpp_nape::geom::ZPP_SimplifyP npite = cx_ite->elt;
HXLINE(7212)					if (hx::IsEq( npite,obj )) {
HXLINE(7213)						ret = true;
HXLINE(7214)						goto _hx_goto_35;
            					}
HXLINE(7217)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE(7221)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,inlined_has,return )

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::front(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7226_front)
HXDLIN(7226)		return this->head->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,front,return )

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::back(){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7228_back)
HXLINE(7229)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXLINE(7230)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP cur = ret;
HXLINE(7231)		while(hx::IsNotNull( cur )){
HXLINE(7232)			ret = cur;
HXLINE(7233)			cur = cur->next;
            		}
HXLINE(7235)		return ret->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_SimplifyP_obj,back,return )

 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7237_iterator_at)
HXLINE(7246)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP ret = this->head;
HXLINE(7247)		while(true){
HXLINE(7247)			bool _hx_tmp;
HXDLIN(7247)			ind = (ind - 1);
HXDLIN(7247)			if (((ind + 1) > 0)) {
HXLINE(7247)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE(7247)				_hx_tmp = false;
            			}
HXDLIN(7247)			if (!(_hx_tmp)) {
HXLINE(7247)				goto _hx_goto_40;
            			}
HXDLIN(7247)			ret = ret->next;
            		}
            		_hx_goto_40:;
HXLINE(7248)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,iterator_at,return )

 ::zpp_nape::geom::ZPP_SimplifyP ZNPList_ZPP_SimplifyP_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_ecabe5f435d737ba_7250_at)
HXLINE(7259)		 ::zpp_nape::util::ZNPNode_ZPP_SimplifyP it = this->iterator_at(ind);
HXLINE(7260)		if (hx::IsNotNull( it )) {
HXLINE(7260)			return it->elt;
            		}
            		else {
HXLINE(7260)			return null();
            		}
HXDLIN(7260)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_SimplifyP_obj,at,return )


hx::ObjectPtr< ZNPList_ZPP_SimplifyP_obj > ZNPList_ZPP_SimplifyP_obj::__new() {
	hx::ObjectPtr< ZNPList_ZPP_SimplifyP_obj > __this = new ZNPList_ZPP_SimplifyP_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZNPList_ZPP_SimplifyP_obj > ZNPList_ZPP_SimplifyP_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZNPList_ZPP_SimplifyP_obj *__this = (ZNPList_ZPP_SimplifyP_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPList_ZPP_SimplifyP_obj), true, "zpp_nape.util.ZNPList_ZPP_SimplifyP"));
	*(void **)__this = ZNPList_ZPP_SimplifyP_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZNPList_ZPP_SimplifyP_obj::ZNPList_ZPP_SimplifyP_obj()
{
}

void ZNPList_ZPP_SimplifyP_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZNPList_ZPP_SimplifyP);
	HX_MARK_MEMBER_NAME(head,"head");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void ZNPList_ZPP_SimplifyP_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(head,"head");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val ZNPList_ZPP_SimplifyP_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { return hx::Val( head ); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn() ); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn() ); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length ); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn() ); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified ); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZNPList_ZPP_SimplifyP_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { head=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZNPList_ZPP_SimplifyP_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("head",20,29,0b,45));
	outFields->push(HX_("modified",49,db,c7,16));
	outFields->push(HX_("pushmod",28,29,4b,75));
	outFields->push(HX_("length",e6,94,07,9f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ZNPList_ZPP_SimplifyP_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::zpp_nape::util::ZNPNode_ZPP_SimplifyP */ ,(int)offsetof(ZNPList_ZPP_SimplifyP_obj,head),HX_("head",20,29,0b,45)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_SimplifyP_obj,modified),HX_("modified",49,db,c7,16)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_SimplifyP_obj,pushmod),HX_("pushmod",28,29,4b,75)},
	{hx::fsInt,(int)offsetof(ZNPList_ZPP_SimplifyP_obj,length),HX_("length",e6,94,07,9f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZNPList_ZPP_SimplifyP_obj_sStaticStorageInfo = 0;
#endif

static ::String ZNPList_ZPP_SimplifyP_obj_sMemberFields[] = {
	HX_("head",20,29,0b,45),
	HX_("begin",29,ea,55,b0),
	HX_("modified",49,db,c7,16),
	HX_("pushmod",28,29,4b,75),
	HX_("length",e6,94,07,9f),
	HX_("setbegin",47,e3,5c,2b),
	HX_("add",21,f2,49,00),
	HX_("inlined_add",8d,4c,2e,02),
	HX_("addAll",80,09,fb,9e),
	HX_("insert",39,43,dd,9d),
	HX_("inlined_insert",4d,34,10,a7),
	HX_("pop",91,5d,55,00),
	HX_("inlined_pop",fd,b7,39,02),
	HX_("pop_unsafe",54,7c,ec,75),
	HX_("inlined_pop_unsafe",68,87,ef,15),
	HX_("remove",44,9c,88,04),
	HX_("try_remove",08,b2,16,8d),
	HX_("inlined_remove",58,8d,bb,0d),
	HX_("inlined_try_remove",1c,bd,19,2d),
	HX_("erase",e6,e8,1c,73),
	HX_("inlined_erase",52,b6,9d,fa),
	HX_("splice",7c,85,9e,bf),
	HX_("clear",8d,71,5b,48),
	HX_("inlined_clear",f9,3e,dc,cf),
	HX_("reverse",22,39,fc,1a),
	HX_("empty",8d,3a,da,6f),
	HX_("size",c1,a0,53,4c),
	HX_("has",5a,3f,4f,00),
	HX_("inlined_has",c6,99,33,02),
	HX_("front",a9,18,8e,06),
	HX_("back",27,da,10,41),
	HX_("iterator_at",e4,89,d2,06),
	HX_("at",f3,54,00,00),
	::String(null()) };

hx::Class ZNPList_ZPP_SimplifyP_obj::__mClass;

void ZNPList_ZPP_SimplifyP_obj::__register()
{
	ZNPList_ZPP_SimplifyP_obj _hx_dummy;
	ZNPList_ZPP_SimplifyP_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("zpp_nape.util.ZNPList_ZPP_SimplifyP",52,ff,5f,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZNPList_ZPP_SimplifyP_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZNPList_ZPP_SimplifyP_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZNPList_ZPP_SimplifyP_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZNPList_ZPP_SimplifyP_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
