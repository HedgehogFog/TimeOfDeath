// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_geom_ZPP_GeomVert
#include <hxinc/zpp_nape/geom/ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_GeomVert
#include <hxinc/zpp_nape/util/ZNPList_ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_GeomVert
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_GeomVert.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_243f17acbbadd49f_7681_new,"zpp_nape.util.ZNPList_ZPP_GeomVert","new",0x3d6117b4,"zpp_nape.util.ZNPList_ZPP_GeomVert.new","zpp_nape/util/Lists.hx",7681,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7687_begin,"zpp_nape.util.ZNPList_ZPP_GeomVert","begin",0x40c2ae7d,"zpp_nape.util.ZNPList_ZPP_GeomVert.begin","zpp_nape/util/Lists.hx",7687,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7694_setbegin,"zpp_nape.util.ZNPList_ZPP_GeomVert","setbegin",0x6bc88b73,"zpp_nape.util.ZNPList_ZPP_GeomVert.setbegin","zpp_nape/util/Lists.hx",7694,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7700_add,"zpp_nape.util.ZNPList_ZPP_GeomVert","add",0x3d573975,"zpp_nape.util.ZNPList_ZPP_GeomVert.add","zpp_nape/util/Lists.hx",7700,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7704_inlined_add,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_add",0xbf9107e1,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_add","zpp_nape/util/Lists.hx",7704,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7750_addAll,"zpp_nape.util.ZNPList_ZPP_GeomVert","addAll",0x6dba0eac,"zpp_nape.util.ZNPList_ZPP_GeomVert.addAll","zpp_nape/util/Lists.hx",7750,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7760_insert,"zpp_nape.util.ZNPList_ZPP_GeomVert","insert",0x6c9c4865,"zpp_nape.util.ZNPList_ZPP_GeomVert.insert","zpp_nape/util/Lists.hx",7760,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7764_inlined_insert,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_insert",0xc55a4579,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_insert","zpp_nape/util/Lists.hx",7764,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7808_pop,"zpp_nape.util.ZNPList_ZPP_GeomVert","pop",0x3d62a4e5,"zpp_nape.util.ZNPList_ZPP_GeomVert.pop","zpp_nape/util/Lists.hx",7808,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7812_inlined_pop,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_pop",0xbf9c7351,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_pop","zpp_nape/util/Lists.hx",7812,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7846_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_GeomVert","pop_unsafe",0x66b38780,"zpp_nape.util.ZNPList_ZPP_GeomVert.pop_unsafe","zpp_nape/util/Lists.hx",7846,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7850_inlined_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_pop_unsafe",0x46b79e94,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_pop_unsafe","zpp_nape/util/Lists.hx",7850,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7872_remove,"zpp_nape.util.ZNPList_ZPP_GeomVert","remove",0xd347a170,"zpp_nape.util.ZNPList_ZPP_GeomVert.remove","zpp_nape/util/Lists.hx",7872,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7874_try_remove,"zpp_nape.util.ZNPList_ZPP_GeomVert","try_remove",0x7dddbd34,"zpp_nape.util.ZNPList_ZPP_GeomVert.try_remove","zpp_nape/util/Lists.hx",7874,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7908_inlined_remove,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_remove",0x2c059e84,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_remove","zpp_nape/util/Lists.hx",7908,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7912_inlined_try_remove,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_try_remove",0x5de1d448,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_try_remove","zpp_nape/util/Lists.hx",7912,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7936_erase,"zpp_nape.util.ZNPList_ZPP_GeomVert","erase",0x0389ad3a,"zpp_nape.util.ZNPList_ZPP_GeomVert.erase","zpp_nape/util/Lists.hx",7936,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7940_inlined_erase,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_erase",0xe2a4eea6,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_erase","zpp_nape/util/Lists.hx",7940,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7986_splice,"zpp_nape.util.ZNPList_ZPP_GeomVert","splice",0x8e5d8aa8,"zpp_nape.util.ZNPList_ZPP_GeomVert.splice","zpp_nape/util/Lists.hx",7986,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7991_clear,"zpp_nape.util.ZNPList_ZPP_GeomVert","clear",0xd8c835e1,"zpp_nape.util.ZNPList_ZPP_GeomVert.clear","zpp_nape/util/Lists.hx",7991,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_7996_inlined_clear,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_clear",0xb7e3774d,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_clear","zpp_nape/util/Lists.hx",7996,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8001_reverse,"zpp_nape.util.ZNPList_ZPP_GeomVert","reverse",0x3361ba76,"zpp_nape.util.ZNPList_ZPP_GeomVert.reverse","zpp_nape/util/Lists.hx",8001,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8017_empty,"zpp_nape.util.ZNPList_ZPP_GeomVert","empty",0x0046fee1,"zpp_nape.util.ZNPList_ZPP_GeomVert.empty","zpp_nape/util/Lists.hx",8017,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8022_size,"zpp_nape.util.ZNPList_ZPP_GeomVert","size",0x7ae4c2ed,"zpp_nape.util.ZNPList_ZPP_GeomVert.size","zpp_nape/util/Lists.hx",8022,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8025_has,"zpp_nape.util.ZNPList_ZPP_GeomVert","has",0x3d5c86ae,"zpp_nape.util.ZNPList_ZPP_GeomVert.has","zpp_nape/util/Lists.hx",8025,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8029_inlined_has,"zpp_nape.util.ZNPList_ZPP_GeomVert","inlined_has",0xbf96551a,"zpp_nape.util.ZNPList_ZPP_GeomVert.inlined_has","zpp_nape/util/Lists.hx",8029,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8060_front,"zpp_nape.util.ZNPList_ZPP_GeomVert","front",0x96fadcfd,"zpp_nape.util.ZNPList_ZPP_GeomVert.front","zpp_nape/util/Lists.hx",8060,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8062_back,"zpp_nape.util.ZNPList_ZPP_GeomVert","back",0x6fa1fc53,"zpp_nape.util.ZNPList_ZPP_GeomVert.back","zpp_nape/util/Lists.hx",8062,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8071_iterator_at,"zpp_nape.util.ZNPList_ZPP_GeomVert","iterator_at",0xc4354538,"zpp_nape.util.ZNPList_ZPP_GeomVert.iterator_at","zpp_nape/util/Lists.hx",8071,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_243f17acbbadd49f_8084_at,"zpp_nape.util.ZNPList_ZPP_GeomVert","at",0x9eb2541f,"zpp_nape.util.ZNPList_ZPP_GeomVert.at","zpp_nape/util/Lists.hx",8084,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZNPList_ZPP_GeomVert_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7681_new)
HXLINE(7691)		this->length = 0;
HXLINE(7690)		this->pushmod = false;
HXLINE(7689)		this->modified = false;
HXLINE(7682)		this->head = null();
            	}

Dynamic ZNPList_ZPP_GeomVert_obj::__CreateEmpty() { return new ZNPList_ZPP_GeomVert_obj; }

void *ZNPList_ZPP_GeomVert_obj::_hx_vtable = 0;

Dynamic ZNPList_ZPP_GeomVert_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZNPList_ZPP_GeomVert_obj > _hx_result = new ZNPList_ZPP_GeomVert_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZNPList_ZPP_GeomVert_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5e3de406;
}

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7687_begin)
HXDLIN(7687)		return this->head;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,begin,return )

void ZNPList_ZPP_GeomVert_obj::setbegin( ::zpp_nape::util::ZNPNode_ZPP_GeomVert i){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7694_setbegin)
HXLINE(7695)		this->head = i;
HXLINE(7696)		this->modified = true;
HXLINE(7697)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,setbegin,(void))

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::add( ::zpp_nape::geom::ZPP_GeomVert o){
            	HX_GC_STACKFRAME(&_hx_pos_243f17acbbadd49f_7700_add)
HXDLIN(7700)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXDLIN(7700)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool )) {
HXDLIN(7700)			ret =  ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(7700)			ret = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7700)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = ret->next;
HXDLIN(7700)			ret->next = null();
            		}
HXDLIN(7700)		ret->elt = o;
HXDLIN(7700)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert temp = ret;
HXDLIN(7700)		temp->next = this->head;
HXDLIN(7700)		this->head = temp;
HXDLIN(7700)		this->modified = true;
HXDLIN(7700)		this->length++;
HXDLIN(7700)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,add,return )

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::inlined_add( ::zpp_nape::geom::ZPP_GeomVert o){
            	HX_GC_STACKFRAME(&_hx_pos_243f17acbbadd49f_7704_inlined_add)
HXLINE(7714)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXLINE(7716)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool )) {
HXLINE(7717)			ret =  ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(7723)			ret = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXLINE(7724)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = ret->next;
HXLINE(7725)			ret->next = null();
            		}
HXLINE(7732)		ret->elt = o;
HXLINE(7713)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert temp = ret;
HXLINE(7735)		temp->next = this->head;
HXLINE(7736)		this->head = temp;
HXLINE(7737)		this->modified = true;
HXLINE(7738)		this->length++;
HXLINE(7739)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,inlined_add,return )

void ZNPList_ZPP_GeomVert_obj::addAll( ::zpp_nape::util::ZNPList_ZPP_GeomVert x){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7750_addAll)
HXLINE(7751)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cx_ite = x->head;
HXLINE(7752)		while(hx::IsNotNull( cx_ite )){
HXLINE(7753)			 ::zpp_nape::geom::ZPP_GeomVert i = cx_ite->elt;
HXLINE(7754)			this->add(i);
HXLINE(7755)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,addAll,(void))

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::insert( ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur, ::zpp_nape::geom::ZPP_GeomVert o){
            	HX_GC_STACKFRAME(&_hx_pos_243f17acbbadd49f_7760_insert)
HXDLIN(7760)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXDLIN(7760)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool )) {
HXDLIN(7760)			ret =  ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__alloc( HX_CTX );
            		}
            		else {
HXDLIN(7760)			ret = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7760)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = ret->next;
HXDLIN(7760)			ret->next = null();
            		}
HXDLIN(7760)		ret->elt = o;
HXDLIN(7760)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert temp = ret;
HXDLIN(7760)		if (hx::IsNull( cur )) {
HXDLIN(7760)			temp->next = this->head;
HXDLIN(7760)			this->head = temp;
            		}
            		else {
HXDLIN(7760)			temp->next = cur->next;
HXDLIN(7760)			cur->next = temp;
            		}
HXDLIN(7760)		this->pushmod = (this->modified = true);
HXDLIN(7760)		this->length++;
HXDLIN(7760)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_GeomVert_obj,insert,return )

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::inlined_insert( ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur, ::zpp_nape::geom::ZPP_GeomVert o){
            	HX_GC_STACKFRAME(&_hx_pos_243f17acbbadd49f_7764_inlined_insert)
HXLINE(7774)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXLINE(7776)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool )) {
HXLINE(7777)			ret =  ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(7783)			ret = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXLINE(7784)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = ret->next;
HXLINE(7785)			ret->next = null();
            		}
HXLINE(7792)		ret->elt = o;
HXLINE(7773)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert temp = ret;
HXLINE(7795)		if (hx::IsNull( cur )) {
HXLINE(7796)			temp->next = this->head;
HXLINE(7797)			this->head = temp;
            		}
            		else {
HXLINE(7800)			temp->next = cur->next;
HXLINE(7801)			cur->next = temp;
            		}
HXLINE(7803)		this->pushmod = (this->modified = true);
HXLINE(7804)		this->length++;
HXLINE(7805)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_GeomVert_obj,inlined_insert,return )

void ZNPList_ZPP_GeomVert_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7808_pop)
HXDLIN(7808)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXDLIN(7808)		this->head = ret->next;
HXDLIN(7808)		{
HXDLIN(7808)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = ret;
HXDLIN(7808)			o->elt = null();
HXDLIN(7808)			o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7808)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            		}
HXDLIN(7808)		if (hx::IsNull( this->head )) {
HXDLIN(7808)			this->pushmod = true;
            		}
HXDLIN(7808)		this->modified = true;
HXDLIN(7808)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,pop,(void))

void ZNPList_ZPP_GeomVert_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7812_inlined_pop)
HXLINE(7821)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXLINE(7822)		this->head = ret->next;
HXLINE(7824)		{
HXLINE(7825)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = ret;
HXLINE(7834)			o->elt = null();
HXLINE(7835)			o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXLINE(7836)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            		}
HXLINE(7841)		if (hx::IsNull( this->head )) {
HXLINE(7841)			this->pushmod = true;
            		}
HXLINE(7842)		this->modified = true;
HXLINE(7843)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,inlined_pop,(void))

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7846_pop_unsafe)
HXDLIN(7846)		 ::zpp_nape::geom::ZPP_GeomVert ret = this->head->elt;
HXDLIN(7846)		this->pop();
HXDLIN(7846)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,pop_unsafe,return )

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7850_inlined_pop_unsafe)
HXLINE(7859)		 ::zpp_nape::geom::ZPP_GeomVert ret = this->head->elt;
HXLINE(7860)		this->pop();
HXLINE(7861)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,inlined_pop_unsafe,return )

void ZNPList_ZPP_GeomVert_obj::remove( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7872_remove)
HXDLIN(7872)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre = null();
HXDLIN(7872)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = this->head;
HXDLIN(7872)		bool ret = false;
HXDLIN(7872)		while(hx::IsNotNull( cur )){
HXDLIN(7872)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(7872)				{
HXDLIN(7872)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert old;
HXDLIN(7872)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret1;
HXDLIN(7872)					if (hx::IsNull( pre )) {
HXDLIN(7872)						old = this->head;
HXDLIN(7872)						ret1 = old->next;
HXDLIN(7872)						this->head = ret1;
HXDLIN(7872)						if (hx::IsNull( this->head )) {
HXDLIN(7872)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(7872)						old = pre->next;
HXDLIN(7872)						ret1 = old->next;
HXDLIN(7872)						pre->next = ret1;
HXDLIN(7872)						if (hx::IsNull( ret1 )) {
HXDLIN(7872)							this->pushmod = true;
            						}
            					}
HXDLIN(7872)					{
HXDLIN(7872)						 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = old;
HXDLIN(7872)						o->elt = null();
HXDLIN(7872)						o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7872)						::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            					}
HXDLIN(7872)					this->modified = true;
HXDLIN(7872)					this->length--;
HXDLIN(7872)					this->pushmod = true;
            				}
HXDLIN(7872)				ret = true;
HXDLIN(7872)				goto _hx_goto_13;
            			}
HXDLIN(7872)			pre = cur;
HXDLIN(7872)			cur = cur->next;
            		}
            		_hx_goto_13:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,remove,(void))

bool ZNPList_ZPP_GeomVert_obj::try_remove( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7874_try_remove)
HXLINE(7883)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre = null();
HXLINE(7884)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = this->head;
HXLINE(7885)		bool ret = false;
HXLINE(7886)		while(hx::IsNotNull( cur )){
HXLINE(7887)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(7888)				this->erase(pre);
HXLINE(7889)				ret = true;
HXLINE(7890)				goto _hx_goto_15;
            			}
HXLINE(7892)			pre = cur;
HXLINE(7893)			cur = cur->next;
            		}
            		_hx_goto_15:;
HXLINE(7895)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,try_remove,return )

void ZNPList_ZPP_GeomVert_obj::inlined_remove( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7908_inlined_remove)
HXDLIN(7908)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre = null();
HXDLIN(7908)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = this->head;
HXDLIN(7908)		bool ret = false;
HXDLIN(7908)		while(hx::IsNotNull( cur )){
HXDLIN(7908)			if (hx::IsEq( cur->elt,obj )) {
HXDLIN(7908)				{
HXDLIN(7908)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert old;
HXDLIN(7908)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret1;
HXDLIN(7908)					if (hx::IsNull( pre )) {
HXDLIN(7908)						old = this->head;
HXDLIN(7908)						ret1 = old->next;
HXDLIN(7908)						this->head = ret1;
HXDLIN(7908)						if (hx::IsNull( this->head )) {
HXDLIN(7908)							this->pushmod = true;
            						}
            					}
            					else {
HXDLIN(7908)						old = pre->next;
HXDLIN(7908)						ret1 = old->next;
HXDLIN(7908)						pre->next = ret1;
HXDLIN(7908)						if (hx::IsNull( ret1 )) {
HXDLIN(7908)							this->pushmod = true;
            						}
            					}
HXDLIN(7908)					{
HXDLIN(7908)						 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = old;
HXDLIN(7908)						o->elt = null();
HXDLIN(7908)						o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7908)						::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            					}
HXDLIN(7908)					this->modified = true;
HXDLIN(7908)					this->length--;
HXDLIN(7908)					this->pushmod = true;
            				}
HXDLIN(7908)				ret = true;
HXDLIN(7908)				goto _hx_goto_17;
            			}
HXDLIN(7908)			pre = cur;
HXDLIN(7908)			cur = cur->next;
            		}
            		_hx_goto_17:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,inlined_remove,(void))

bool ZNPList_ZPP_GeomVert_obj::inlined_try_remove( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7912_inlined_try_remove)
HXLINE(7921)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre = null();
HXLINE(7922)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = this->head;
HXLINE(7923)		bool ret = false;
HXLINE(7924)		while(hx::IsNotNull( cur )){
HXLINE(7925)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(7926)				{
HXLINE(7926)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert old;
HXDLIN(7926)					 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret1;
HXDLIN(7926)					if (hx::IsNull( pre )) {
HXLINE(7926)						old = this->head;
HXDLIN(7926)						ret1 = old->next;
HXDLIN(7926)						this->head = ret1;
HXDLIN(7926)						if (hx::IsNull( this->head )) {
HXLINE(7926)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(7926)						old = pre->next;
HXDLIN(7926)						ret1 = old->next;
HXDLIN(7926)						pre->next = ret1;
HXDLIN(7926)						if (hx::IsNull( ret1 )) {
HXLINE(7926)							this->pushmod = true;
            						}
            					}
HXDLIN(7926)					{
HXLINE(7926)						 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = old;
HXDLIN(7926)						o->elt = null();
HXDLIN(7926)						o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7926)						::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            					}
HXDLIN(7926)					this->modified = true;
HXDLIN(7926)					this->length--;
HXDLIN(7926)					this->pushmod = true;
            				}
HXLINE(7927)				ret = true;
HXLINE(7928)				goto _hx_goto_19;
            			}
HXLINE(7930)			pre = cur;
HXLINE(7931)			cur = cur->next;
            		}
            		_hx_goto_19:;
HXLINE(7933)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,inlined_try_remove,return )

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::erase( ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7936_erase)
HXDLIN(7936)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert old;
HXDLIN(7936)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXDLIN(7936)		if (hx::IsNull( pre )) {
HXDLIN(7936)			old = this->head;
HXDLIN(7936)			ret = old->next;
HXDLIN(7936)			this->head = ret;
HXDLIN(7936)			if (hx::IsNull( this->head )) {
HXDLIN(7936)				this->pushmod = true;
            			}
            		}
            		else {
HXDLIN(7936)			old = pre->next;
HXDLIN(7936)			ret = old->next;
HXDLIN(7936)			pre->next = ret;
HXDLIN(7936)			if (hx::IsNull( ret )) {
HXDLIN(7936)				this->pushmod = true;
            			}
            		}
HXDLIN(7936)		{
HXDLIN(7936)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = old;
HXDLIN(7936)			o->elt = null();
HXDLIN(7936)			o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7936)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            		}
HXDLIN(7936)		this->modified = true;
HXDLIN(7936)		this->length--;
HXDLIN(7936)		this->pushmod = true;
HXDLIN(7936)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::inlined_erase( ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7940_inlined_erase)
HXLINE(7949)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert old;
HXLINE(7950)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret;
HXLINE(7951)		if (hx::IsNull( pre )) {
HXLINE(7952)			old = this->head;
HXLINE(7953)			ret = old->next;
HXLINE(7954)			this->head = ret;
HXLINE(7955)			if (hx::IsNull( this->head )) {
HXLINE(7955)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(7958)			old = pre->next;
HXLINE(7959)			ret = old->next;
HXLINE(7960)			pre->next = ret;
HXLINE(7961)			if (hx::IsNull( ret )) {
HXLINE(7961)				this->pushmod = true;
            			}
            		}
HXLINE(7964)		{
HXLINE(7965)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = old;
HXLINE(7974)			o->elt = null();
HXLINE(7975)			o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXLINE(7976)			::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            		}
HXLINE(7981)		this->modified = true;
HXLINE(7982)		this->length--;
HXLINE(7983)		this->pushmod = true;
HXLINE(7984)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,inlined_erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::splice( ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre,int n){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7986_splice)
HXLINE(7987)		while(true){
HXLINE(7987)			bool _hx_tmp;
HXDLIN(7987)			n = (n - 1);
HXDLIN(7987)			if (((n + 1) > 0)) {
HXLINE(7987)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE(7987)				_hx_tmp = false;
            			}
HXDLIN(7987)			if (!(_hx_tmp)) {
HXLINE(7987)				goto _hx_goto_23;
            			}
HXDLIN(7987)			this->erase(pre);
            		}
            		_hx_goto_23:;
HXLINE(7988)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_GeomVert_obj,splice,return )

void ZNPList_ZPP_GeomVert_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7991_clear)
HXDLIN(7991)		while(hx::IsNotNull( this->head )){
HXDLIN(7991)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXDLIN(7991)			this->head = ret->next;
HXDLIN(7991)			{
HXDLIN(7991)				 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = ret;
HXDLIN(7991)				o->elt = null();
HXDLIN(7991)				o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7991)				::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            			}
HXDLIN(7991)			if (hx::IsNull( this->head )) {
HXDLIN(7991)				this->pushmod = true;
            			}
HXDLIN(7991)			this->modified = true;
HXDLIN(7991)			this->length--;
            		}
HXDLIN(7991)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,clear,(void))

void ZNPList_ZPP_GeomVert_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_7996_inlined_clear)
HXLINE(7997)		while(hx::IsNotNull( this->head )){
HXLINE(7997)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXDLIN(7997)			this->head = ret->next;
HXDLIN(7997)			{
HXLINE(7997)				 ::zpp_nape::util::ZNPNode_ZPP_GeomVert o = ret;
HXDLIN(7997)				o->elt = null();
HXDLIN(7997)				o->next = ::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool;
HXDLIN(7997)				::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::zpp_pool = o;
            			}
HXDLIN(7997)			if (hx::IsNull( this->head )) {
HXLINE(7997)				this->pushmod = true;
            			}
HXDLIN(7997)			this->modified = true;
HXDLIN(7997)			this->length--;
            		}
HXLINE(7998)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,inlined_clear,(void))

void ZNPList_ZPP_GeomVert_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8001_reverse)
HXLINE(8002)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = this->head;
HXLINE(8003)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert pre = null();
HXLINE(8004)		while(hx::IsNotNull( cur )){
HXLINE(8005)			 ::zpp_nape::util::ZNPNode_ZPP_GeomVert nx = cur->next;
HXLINE(8006)			cur->next = pre;
HXLINE(8007)			this->head = cur;
HXLINE(8008)			pre = cur;
HXLINE(8009)			cur = nx;
            		}
HXLINE(8011)		this->modified = true;
HXLINE(8012)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,reverse,(void))

bool ZNPList_ZPP_GeomVert_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8017_empty)
HXDLIN(8017)		return hx::IsNull( this->head );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,empty,return )

int ZNPList_ZPP_GeomVert_obj::size(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8022_size)
HXDLIN(8022)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,size,return )

bool ZNPList_ZPP_GeomVert_obj::has( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8025_has)
HXDLIN(8025)		bool ret;
HXDLIN(8025)		{
HXDLIN(8025)			ret = false;
HXDLIN(8025)			{
HXDLIN(8025)				 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cx_ite = this->head;
HXDLIN(8025)				while(hx::IsNotNull( cx_ite )){
HXDLIN(8025)					 ::zpp_nape::geom::ZPP_GeomVert npite = cx_ite->elt;
HXDLIN(8025)					if (hx::IsEq( npite,obj )) {
HXDLIN(8025)						ret = true;
HXDLIN(8025)						goto _hx_goto_33;
            					}
HXDLIN(8025)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_33:;
            			}
            		}
HXDLIN(8025)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,has,return )

bool ZNPList_ZPP_GeomVert_obj::inlined_has( ::zpp_nape::geom::ZPP_GeomVert obj){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8029_inlined_has)
HXLINE(8038)		bool ret;
HXLINE(8039)		{
HXLINE(8040)			ret = false;
HXLINE(8041)			{
HXLINE(8042)				 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cx_ite = this->head;
HXLINE(8043)				while(hx::IsNotNull( cx_ite )){
HXLINE(8044)					 ::zpp_nape::geom::ZPP_GeomVert npite = cx_ite->elt;
HXLINE(8046)					if (hx::IsEq( npite,obj )) {
HXLINE(8047)						ret = true;
HXLINE(8048)						goto _hx_goto_35;
            					}
HXLINE(8051)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE(8055)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,inlined_has,return )

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::front(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8060_front)
HXDLIN(8060)		return this->head->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,front,return )

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::back(){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8062_back)
HXLINE(8063)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXLINE(8064)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert cur = ret;
HXLINE(8065)		while(hx::IsNotNull( cur )){
HXLINE(8066)			ret = cur;
HXLINE(8067)			cur = cur->next;
            		}
HXLINE(8069)		return ret->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_GeomVert_obj,back,return )

 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8071_iterator_at)
HXLINE(8080)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert ret = this->head;
HXLINE(8081)		while(true){
HXLINE(8081)			bool _hx_tmp;
HXDLIN(8081)			ind = (ind - 1);
HXDLIN(8081)			if (((ind + 1) > 0)) {
HXLINE(8081)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE(8081)				_hx_tmp = false;
            			}
HXDLIN(8081)			if (!(_hx_tmp)) {
HXLINE(8081)				goto _hx_goto_40;
            			}
HXDLIN(8081)			ret = ret->next;
            		}
            		_hx_goto_40:;
HXLINE(8082)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,iterator_at,return )

 ::zpp_nape::geom::ZPP_GeomVert ZNPList_ZPP_GeomVert_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_243f17acbbadd49f_8084_at)
HXLINE(8093)		 ::zpp_nape::util::ZNPNode_ZPP_GeomVert it = this->iterator_at(ind);
HXLINE(8094)		if (hx::IsNotNull( it )) {
HXLINE(8094)			return it->elt;
            		}
            		else {
HXLINE(8094)			return null();
            		}
HXDLIN(8094)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_GeomVert_obj,at,return )


hx::ObjectPtr< ZNPList_ZPP_GeomVert_obj > ZNPList_ZPP_GeomVert_obj::__new() {
	hx::ObjectPtr< ZNPList_ZPP_GeomVert_obj > __this = new ZNPList_ZPP_GeomVert_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZNPList_ZPP_GeomVert_obj > ZNPList_ZPP_GeomVert_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZNPList_ZPP_GeomVert_obj *__this = (ZNPList_ZPP_GeomVert_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPList_ZPP_GeomVert_obj), true, "zpp_nape.util.ZNPList_ZPP_GeomVert"));
	*(void **)__this = ZNPList_ZPP_GeomVert_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZNPList_ZPP_GeomVert_obj::ZNPList_ZPP_GeomVert_obj()
{
}

void ZNPList_ZPP_GeomVert_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZNPList_ZPP_GeomVert);
	HX_MARK_MEMBER_NAME(head,"head");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void ZNPList_ZPP_GeomVert_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(head,"head");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val ZNPList_ZPP_GeomVert_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { return hx::Val( head ); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn() ); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn() ); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length ); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn() ); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified ); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn() ); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZNPList_ZPP_GeomVert_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { head=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_GeomVert >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZNPList_ZPP_GeomVert_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("head",20,29,0b,45));
	outFields->push(HX_("modified",49,db,c7,16));
	outFields->push(HX_("pushmod",28,29,4b,75));
	outFields->push(HX_("length",e6,94,07,9f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ZNPList_ZPP_GeomVert_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::zpp_nape::util::ZNPNode_ZPP_GeomVert */ ,(int)offsetof(ZNPList_ZPP_GeomVert_obj,head),HX_("head",20,29,0b,45)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_GeomVert_obj,modified),HX_("modified",49,db,c7,16)},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_GeomVert_obj,pushmod),HX_("pushmod",28,29,4b,75)},
	{hx::fsInt,(int)offsetof(ZNPList_ZPP_GeomVert_obj,length),HX_("length",e6,94,07,9f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZNPList_ZPP_GeomVert_obj_sStaticStorageInfo = 0;
#endif

static ::String ZNPList_ZPP_GeomVert_obj_sMemberFields[] = {
	HX_("head",20,29,0b,45),
	HX_("begin",29,ea,55,b0),
	HX_("modified",49,db,c7,16),
	HX_("pushmod",28,29,4b,75),
	HX_("length",e6,94,07,9f),
	HX_("setbegin",47,e3,5c,2b),
	HX_("add",21,f2,49,00),
	HX_("inlined_add",8d,4c,2e,02),
	HX_("addAll",80,09,fb,9e),
	HX_("insert",39,43,dd,9d),
	HX_("inlined_insert",4d,34,10,a7),
	HX_("pop",91,5d,55,00),
	HX_("inlined_pop",fd,b7,39,02),
	HX_("pop_unsafe",54,7c,ec,75),
	HX_("inlined_pop_unsafe",68,87,ef,15),
	HX_("remove",44,9c,88,04),
	HX_("try_remove",08,b2,16,8d),
	HX_("inlined_remove",58,8d,bb,0d),
	HX_("inlined_try_remove",1c,bd,19,2d),
	HX_("erase",e6,e8,1c,73),
	HX_("inlined_erase",52,b6,9d,fa),
	HX_("splice",7c,85,9e,bf),
	HX_("clear",8d,71,5b,48),
	HX_("inlined_clear",f9,3e,dc,cf),
	HX_("reverse",22,39,fc,1a),
	HX_("empty",8d,3a,da,6f),
	HX_("size",c1,a0,53,4c),
	HX_("has",5a,3f,4f,00),
	HX_("inlined_has",c6,99,33,02),
	HX_("front",a9,18,8e,06),
	HX_("back",27,da,10,41),
	HX_("iterator_at",e4,89,d2,06),
	HX_("at",f3,54,00,00),
	::String(null()) };

hx::Class ZNPList_ZPP_GeomVert_obj::__mClass;

void ZNPList_ZPP_GeomVert_obj::__register()
{
	ZNPList_ZPP_GeomVert_obj _hx_dummy;
	ZNPList_ZPP_GeomVert_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("zpp_nape.util.ZNPList_ZPP_GeomVert",c2,6d,ae,ce);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZNPList_ZPP_GeomVert_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZNPList_ZPP_GeomVert_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZNPList_ZPP_GeomVert_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZNPList_ZPP_GeomVert_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
