// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_nape_phys_Interactor
#include <hxinc/nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_nape_phys_InteractorList
#include <hxinc/nape/phys/InteractorList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Interactor
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Interactor
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_InteractorList
#include <hxinc/zpp_nape/util/ZPP_InteractorList.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ac4043229ae897c9_16619_new,"zpp_nape.util.ZPP_InteractorList","new",0xbcf61bf9,"zpp_nape.util.ZPP_InteractorList.new","zpp_nape/util/Lists.hx",16619,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16640_valmod,"zpp_nape.util.ZPP_InteractorList","valmod",0x9c713488,"zpp_nape.util.ZPP_InteractorList.valmod","zpp_nape/util/Lists.hx",16640,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16650_modified,"zpp_nape.util.ZPP_InteractorList","modified",0x3f8fe510,"zpp_nape.util.ZPP_InteractorList.modified","zpp_nape/util/Lists.hx",16650,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16657_modify_test,"zpp_nape.util.ZPP_InteractorList","modify_test",0x086f6210,"zpp_nape.util.ZPP_InteractorList.modify_test","zpp_nape/util/Lists.hx",16657,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16661_validate,"zpp_nape.util.ZPP_InteractorList","validate",0x2dabda5d,"zpp_nape.util.ZPP_InteractorList.validate","zpp_nape/util/Lists.hx",16661,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16666_invalidate,"zpp_nape.util.ZPP_InteractorList","invalidate",0x795d6302,"zpp_nape.util.ZPP_InteractorList.invalidate","zpp_nape/util/Lists.hx",16666,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16633_get,"zpp_nape.util.ZPP_InteractorList","get",0xbcf0cc2f,"zpp_nape.util.ZPP_InteractorList.get","zpp_nape/util/Lists.hx",16633,0x9f4e6754)
HX_LOCAL_STACK_FRAME(_hx_pos_ac4043229ae897c9_16627_boot,"zpp_nape.util.ZPP_InteractorList","boot",0x927b5e79,"zpp_nape.util.ZPP_InteractorList.boot","zpp_nape/util/Lists.hx",16627,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZPP_InteractorList_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_ac4043229ae897c9_16619_new)
HXLINE(16674)		this->user_length = 0;
HXLINE(16673)		this->zip_length = false;
HXLINE(16672)		this->push_ite = null();
HXLINE(16671)		this->at_ite = null();
HXLINE(16670)		this->at_index = 0;
HXLINE(16632)		this->reverse_flag = false;
HXLINE(16631)		this->dontremove = false;
HXLINE(16630)		this->subber = null();
HXLINE(16629)		this->post_adder = null();
HXLINE(16628)		this->adder = null();
HXLINE(16626)		this->_modifiable = null();
HXLINE(16625)		this->_validate = null();
HXLINE(16624)		this->_invalidate = null();
HXLINE(16623)		this->_invalidated = false;
HXLINE(16622)		this->immutable = false;
HXLINE(16621)		this->inner = null();
HXLINE(16620)		this->outer = null();
HXLINE(16676)		this->inner =  ::zpp_nape::util::ZNPList_ZPP_Interactor_obj::__alloc( HX_CTX );
HXLINE(16677)		this->_invalidated = true;
            	}

Dynamic ZPP_InteractorList_obj::__CreateEmpty() { return new ZPP_InteractorList_obj; }

void *ZPP_InteractorList_obj::_hx_vtable = 0;

Dynamic ZPP_InteractorList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZPP_InteractorList_obj > _hx_result = new ZPP_InteractorList_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZPP_InteractorList_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5bab48cb;
}

void ZPP_InteractorList_obj::valmod(){
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16640_valmod)
HXLINE(16641)		this->validate();
HXLINE(16642)		if (this->inner->modified) {
HXLINE(16643)			if (this->inner->pushmod) {
HXLINE(16643)				this->push_ite = null();
            			}
HXLINE(16644)			this->at_ite = null();
HXLINE(16645)			this->inner->modified = false;
HXLINE(16646)			this->inner->pushmod = false;
HXLINE(16647)			this->zip_length = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_InteractorList_obj,valmod,(void))

void ZPP_InteractorList_obj::modified(){
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16650_modified)
HXLINE(16651)		this->zip_length = true;
HXLINE(16652)		this->at_ite = null();
HXLINE(16653)		this->push_ite = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_InteractorList_obj,modified,(void))

void ZPP_InteractorList_obj::modify_test(){
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16657_modify_test)
HXDLIN(16657)		if (hx::IsNotNull( this->_modifiable )) {
HXDLIN(16657)			this->_modifiable();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_InteractorList_obj,modify_test,(void))

void ZPP_InteractorList_obj::validate(){
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16661_validate)
HXDLIN(16661)		if (this->_invalidated) {
HXLINE(16662)			this->_invalidated = false;
HXLINE(16663)			if (hx::IsNotNull( this->_validate )) {
HXLINE(16663)				this->_validate();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_InteractorList_obj,validate,(void))

void ZPP_InteractorList_obj::invalidate(){
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16666_invalidate)
HXLINE(16667)		this->_invalidated = true;
HXLINE(16668)		if (hx::IsNotNull( this->_invalidate )) {
HXLINE(16668)			this->_invalidate(hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_InteractorList_obj,invalidate,(void))

bool ZPP_InteractorList_obj::internal;

 ::nape::phys::InteractorList ZPP_InteractorList_obj::get( ::zpp_nape::util::ZNPList_ZPP_Interactor list,hx::Null< bool >  __o_imm){
            		bool imm = __o_imm.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_ac4043229ae897c9_16633_get)
HXLINE(16634)		 ::nape::phys::InteractorList ret =  ::nape::phys::InteractorList_obj::__alloc( HX_CTX );
HXLINE(16635)		ret->zpp_inner->inner = list;
HXLINE(16636)		if (imm) {
HXLINE(16636)			ret->zpp_inner->immutable = true;
            		}
HXLINE(16637)		ret->zpp_inner->zip_length = true;
HXLINE(16638)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ZPP_InteractorList_obj,get,return )


hx::ObjectPtr< ZPP_InteractorList_obj > ZPP_InteractorList_obj::__new() {
	hx::ObjectPtr< ZPP_InteractorList_obj > __this = new ZPP_InteractorList_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZPP_InteractorList_obj > ZPP_InteractorList_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZPP_InteractorList_obj *__this = (ZPP_InteractorList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZPP_InteractorList_obj), true, "zpp_nape.util.ZPP_InteractorList"));
	*(void **)__this = ZPP_InteractorList_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZPP_InteractorList_obj::ZPP_InteractorList_obj()
{
}

void ZPP_InteractorList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZPP_InteractorList);
	HX_MARK_MEMBER_NAME(outer,"outer");
	HX_MARK_MEMBER_NAME(inner,"inner");
	HX_MARK_MEMBER_NAME(immutable,"immutable");
	HX_MARK_MEMBER_NAME(_invalidated,"_invalidated");
	HX_MARK_MEMBER_NAME(_invalidate,"_invalidate");
	HX_MARK_MEMBER_NAME(_validate,"_validate");
	HX_MARK_MEMBER_NAME(_modifiable,"_modifiable");
	HX_MARK_MEMBER_NAME(adder,"adder");
	HX_MARK_MEMBER_NAME(post_adder,"post_adder");
	HX_MARK_MEMBER_NAME(subber,"subber");
	HX_MARK_MEMBER_NAME(dontremove,"dontremove");
	HX_MARK_MEMBER_NAME(reverse_flag,"reverse_flag");
	HX_MARK_MEMBER_NAME(at_index,"at_index");
	HX_MARK_MEMBER_NAME(at_ite,"at_ite");
	HX_MARK_MEMBER_NAME(push_ite,"push_ite");
	HX_MARK_MEMBER_NAME(zip_length,"zip_length");
	HX_MARK_MEMBER_NAME(user_length,"user_length");
	HX_MARK_END_CLASS();
}

void ZPP_InteractorList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(outer,"outer");
	HX_VISIT_MEMBER_NAME(inner,"inner");
	HX_VISIT_MEMBER_NAME(immutable,"immutable");
	HX_VISIT_MEMBER_NAME(_invalidated,"_invalidated");
	HX_VISIT_MEMBER_NAME(_invalidate,"_invalidate");
	HX_VISIT_MEMBER_NAME(_validate,"_validate");
	HX_VISIT_MEMBER_NAME(_modifiable,"_modifiable");
	HX_VISIT_MEMBER_NAME(adder,"adder");
	HX_VISIT_MEMBER_NAME(post_adder,"post_adder");
	HX_VISIT_MEMBER_NAME(subber,"subber");
	HX_VISIT_MEMBER_NAME(dontremove,"dontremove");
	HX_VISIT_MEMBER_NAME(reverse_flag,"reverse_flag");
	HX_VISIT_MEMBER_NAME(at_index,"at_index");
	HX_VISIT_MEMBER_NAME(at_ite,"at_ite");
	HX_VISIT_MEMBER_NAME(push_ite,"push_ite");
	HX_VISIT_MEMBER_NAME(zip_length,"zip_length");
	HX_VISIT_MEMBER_NAME(user_length,"user_length");
}

hx::Val ZPP_InteractorList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"outer") ) { return hx::Val( outer ); }
		if (HX_FIELD_EQ(inName,"inner") ) { return hx::Val( inner ); }
		if (HX_FIELD_EQ(inName,"adder") ) { return hx::Val( adder ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"subber") ) { return hx::Val( subber ); }
		if (HX_FIELD_EQ(inName,"valmod") ) { return hx::Val( valmod_dyn() ); }
		if (HX_FIELD_EQ(inName,"at_ite") ) { return hx::Val( at_ite ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified_dyn() ); }
		if (HX_FIELD_EQ(inName,"validate") ) { return hx::Val( validate_dyn() ); }
		if (HX_FIELD_EQ(inName,"at_index") ) { return hx::Val( at_index ); }
		if (HX_FIELD_EQ(inName,"push_ite") ) { return hx::Val( push_ite ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"immutable") ) { return hx::Val( immutable ); }
		if (HX_FIELD_EQ(inName,"_validate") ) { return hx::Val( _validate ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"post_adder") ) { return hx::Val( post_adder ); }
		if (HX_FIELD_EQ(inName,"dontremove") ) { return hx::Val( dontremove ); }
		if (HX_FIELD_EQ(inName,"invalidate") ) { return hx::Val( invalidate_dyn() ); }
		if (HX_FIELD_EQ(inName,"zip_length") ) { return hx::Val( zip_length ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_invalidate") ) { return hx::Val( _invalidate ); }
		if (HX_FIELD_EQ(inName,"_modifiable") ) { return hx::Val( _modifiable ); }
		if (HX_FIELD_EQ(inName,"modify_test") ) { return hx::Val( modify_test_dyn() ); }
		if (HX_FIELD_EQ(inName,"user_length") ) { return hx::Val( user_length ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_invalidated") ) { return hx::Val( _invalidated ); }
		if (HX_FIELD_EQ(inName,"reverse_flag") ) { return hx::Val( reverse_flag ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ZPP_InteractorList_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"internal") ) { outValue = ( internal ); return true; }
	}
	return false;
}

hx::Val ZPP_InteractorList_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"outer") ) { outer=inValue.Cast<  ::nape::phys::InteractorList >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inner") ) { inner=inValue.Cast<  ::zpp_nape::util::ZNPList_ZPP_Interactor >(); return inValue; }
		if (HX_FIELD_EQ(inName,"adder") ) { adder=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"subber") ) { subber=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"at_ite") ) { at_ite=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_Interactor >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"at_index") ) { at_index=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"push_ite") ) { push_ite=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_Interactor >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"immutable") ) { immutable=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_validate") ) { _validate=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"post_adder") ) { post_adder=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dontremove") ) { dontremove=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"zip_length") ) { zip_length=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_invalidate") ) { _invalidate=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_modifiable") ) { _modifiable=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"user_length") ) { user_length=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_invalidated") ) { _invalidated=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"reverse_flag") ) { reverse_flag=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ZPP_InteractorList_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"internal") ) { internal=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

void ZPP_InteractorList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("outer",7b,b8,28,37));
	outFields->push(HX_("inner",96,31,1c,be));
	outFields->push(HX_("immutable",42,28,c7,66));
	outFields->push(HX_("_invalidated",8a,e0,b5,23));
	outFields->push(HX_("dontremove",95,cf,b2,03));
	outFields->push(HX_("reverse_flag",29,93,06,7a));
	outFields->push(HX_("at_index",86,ef,d2,3d));
	outFields->push(HX_("at_ite",8e,a1,34,d2));
	outFields->push(HX_("push_ite",f5,5d,33,23));
	outFields->push(HX_("zip_length",c4,c5,11,3c));
	outFields->push(HX_("user_length",9a,c3,4e,06));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ZPP_InteractorList_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::nape::phys::InteractorList */ ,(int)offsetof(ZPP_InteractorList_obj,outer),HX_("outer",7b,b8,28,37)},
	{hx::fsObject /*  ::zpp_nape::util::ZNPList_ZPP_Interactor */ ,(int)offsetof(ZPP_InteractorList_obj,inner),HX_("inner",96,31,1c,be)},
	{hx::fsBool,(int)offsetof(ZPP_InteractorList_obj,immutable),HX_("immutable",42,28,c7,66)},
	{hx::fsBool,(int)offsetof(ZPP_InteractorList_obj,_invalidated),HX_("_invalidated",8a,e0,b5,23)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,_invalidate),HX_("_invalidate",9a,e6,b3,59)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,_validate),HX_("_validate",f5,c7,79,4c)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,_modifiable),HX_("_modifiable",23,cc,cf,0c)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,adder),HX_("adder",ce,d4,43,1c)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,post_adder),HX_("post_adder",6f,28,cf,38)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ZPP_InteractorList_obj,subber),HX_("subber",cf,fb,fd,99)},
	{hx::fsBool,(int)offsetof(ZPP_InteractorList_obj,dontremove),HX_("dontremove",95,cf,b2,03)},
	{hx::fsBool,(int)offsetof(ZPP_InteractorList_obj,reverse_flag),HX_("reverse_flag",29,93,06,7a)},
	{hx::fsInt,(int)offsetof(ZPP_InteractorList_obj,at_index),HX_("at_index",86,ef,d2,3d)},
	{hx::fsObject /*  ::zpp_nape::util::ZNPNode_ZPP_Interactor */ ,(int)offsetof(ZPP_InteractorList_obj,at_ite),HX_("at_ite",8e,a1,34,d2)},
	{hx::fsObject /*  ::zpp_nape::util::ZNPNode_ZPP_Interactor */ ,(int)offsetof(ZPP_InteractorList_obj,push_ite),HX_("push_ite",f5,5d,33,23)},
	{hx::fsBool,(int)offsetof(ZPP_InteractorList_obj,zip_length),HX_("zip_length",c4,c5,11,3c)},
	{hx::fsInt,(int)offsetof(ZPP_InteractorList_obj,user_length),HX_("user_length",9a,c3,4e,06)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ZPP_InteractorList_obj_sStaticStorageInfo[] = {
	{hx::fsBool,(void *) &ZPP_InteractorList_obj::internal,HX_("internal",3d,67,76,28)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ZPP_InteractorList_obj_sMemberFields[] = {
	HX_("outer",7b,b8,28,37),
	HX_("inner",96,31,1c,be),
	HX_("immutable",42,28,c7,66),
	HX_("_invalidated",8a,e0,b5,23),
	HX_("_invalidate",9a,e6,b3,59),
	HX_("_validate",f5,c7,79,4c),
	HX_("_modifiable",23,cc,cf,0c),
	HX_("adder",ce,d4,43,1c),
	HX_("post_adder",6f,28,cf,38),
	HX_("subber",cf,fb,fd,99),
	HX_("dontremove",95,cf,b2,03),
	HX_("reverse_flag",29,93,06,7a),
	HX_("valmod",81,fa,b0,4f),
	HX_("modified",49,db,c7,16),
	HX_("modify_test",77,55,c2,0d),
	HX_("validate",96,d0,e3,04),
	HX_("invalidate",7b,19,2a,87),
	HX_("at_index",86,ef,d2,3d),
	HX_("at_ite",8e,a1,34,d2),
	HX_("push_ite",f5,5d,33,23),
	HX_("zip_length",c4,c5,11,3c),
	HX_("user_length",9a,c3,4e,06),
	::String(null()) };

static void ZPP_InteractorList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZPP_InteractorList_obj::internal,"internal");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZPP_InteractorList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZPP_InteractorList_obj::internal,"internal");
};

#endif

hx::Class ZPP_InteractorList_obj::__mClass;

static ::String ZPP_InteractorList_obj_sStaticFields[] = {
	HX_("internal",3d,67,76,28),
	HX_("get",96,80,4e,00),
	::String(null())
};

void ZPP_InteractorList_obj::__register()
{
	ZPP_InteractorList_obj _hx_dummy;
	ZPP_InteractorList_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("zpp_nape.util.ZPP_InteractorList",87,ab,f0,a5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ZPP_InteractorList_obj::__GetStatic;
	__mClass->mSetStaticField = &ZPP_InteractorList_obj::__SetStatic;
	__mClass->mMarkFunc = ZPP_InteractorList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ZPP_InteractorList_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZPP_InteractorList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZPP_InteractorList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZPP_InteractorList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZPP_InteractorList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZPP_InteractorList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ZPP_InteractorList_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_ac4043229ae897c9_16627_boot)
HXDLIN(16627)		internal = false;
            	}
}

} // end namespace zpp_nape
} // end namespace util
