// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_sys_io_FileSeek
#include <hxinc/sys/io/FileSeek.h>
#endif
#ifndef INCLUDED_kha_input_SensorType
#include <hxinc/kha/input/SensorType.h>
#endif
#ifndef INCLUDED_kha_graphics4_Usage
#include <hxinc/kha/graphics4/Usage.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFormat
#include <hxinc/kha/graphics4/TextureFormat.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFilter
#include <hxinc/kha/graphics4/TextureFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureAddressing
#include <hxinc/kha/graphics4/TextureAddressing.h>
#endif
#ifndef INCLUDED_kha_graphics4_TexDir
#include <hxinc/kha/graphics4/TexDir.h>
#endif
#ifndef INCLUDED_kha_graphics4_StencilValue
#include <hxinc/kha/graphics4/StencilValue.h>
#endif
#ifndef INCLUDED_kha_graphics4_StencilAction
#include <hxinc/kha/graphics4/StencilAction.h>
#endif
#ifndef INCLUDED_kha_graphics4_MipMapFilter
#include <hxinc/kha/graphics4/MipMapFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_CullMode
#include <hxinc/kha/graphics4/CullMode.h>
#endif
#ifndef INCLUDED_kha_graphics4_CompareMode
#include <hxinc/kha/graphics4/CompareMode.h>
#endif
#ifndef INCLUDED_kha_graphics4_BlendingOperation
#include <hxinc/kha/graphics4/BlendingOperation.h>
#endif
#ifndef INCLUDED_kha_graphics4_BlendingFactor
#include <hxinc/kha/graphics4/BlendingFactor.h>
#endif
#ifndef INCLUDED_kha_graphics2_ImageScaleQuality
#include <hxinc/kha/graphics2/ImageScaleQuality.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderErrorType
#include <hxinc/kha/audio2/ogg/vorbis/data/ReaderErrorType.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis__VorbisDecodeState_FindPageResult
#include <hxinc/kha/audio2/ogg/vorbis/_VorbisDecodeState/FindPageResult.h>
#endif
#ifndef INCLUDED_kha_ScreenRotation
#include <hxinc/kha/ScreenRotation.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <hxinc/haxe/io/Error.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <hxinc/haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_zui_Handle
#include <hxinc/zui/Handle.h>
#endif
#ifndef INCLUDED_zui_Zui
#include <hxinc/zui/Zui.h>
#endif
#ifndef INCLUDED_zui_Themes
#include <hxinc/zui/Themes.h>
#endif
#ifndef INCLUDED_zui_Id
#include <hxinc/zui/Id.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_SimpleEvent
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_SimpleEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_SimpleSeg
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_SimpleSeg.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_SimpleVert
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_SimpleVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_PartitionPair
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_PartitionPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_PartitionVertex
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_PartitionVertex.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_CbSetPair
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_CbSetPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_Body
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ContactList
#include <hxinc/zpp_nape/util/ZPP_ContactList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ArbiterList
#include <hxinc/zpp_nape/util/ZPP_ArbiterList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_InteractionGroupList
#include <hxinc/zpp_nape/util/ZPP_InteractionGroupList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_EdgeList
#include <hxinc/zpp_nape/util/ZPP_EdgeList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ConvexResultList
#include <hxinc/zpp_nape/util/ZPP_ConvexResultList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_RayResultList
#include <hxinc/zpp_nape/util/ZPP_RayResultList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_GeomPolyList
#include <hxinc/zpp_nape/util/ZPP_GeomPolyList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Vec2List
#include <hxinc/zpp_nape/util/ZPP_Vec2List.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_CbTypeList
#include <hxinc/zpp_nape/util/ZPP_CbTypeList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_InteractorList
#include <hxinc/zpp_nape/util/ZPP_InteractorList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_RayResult
#include <hxinc/zpp_nape/util/ZNPNode_RayResult.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_GeomPoly
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_GeomPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ConvexResult
#include <hxinc/zpp_nape/util/ZNPNode_ConvexResult.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_ToiEvent
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_ToiEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_InteractionGroup
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_ColArbiter
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_ColArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Listener
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_SensorArbiter
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_SensorArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_FluidArbiter
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_FluidArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Component
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Component.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_AABBNode
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_AABBNode.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Edge
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Edge.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_AABBPair
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_AABBPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Vec2
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_SimpleEvent
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_SimpleEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_SimpleVert
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_SimpleVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_GeomVert
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_PartitionedPoly
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_PartitionedPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_SimplifyP
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_SimplifyP.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_PartitionVertex
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_PartitionVertex.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CutVert
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CutVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CutInt
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CutInt.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_ConstraintListener
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_ConstraintListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CbSetPair
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CbSetPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_BodyListener
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_BodyListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Interactor
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CbSet
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CbSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_InteractionListener
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_InteractionListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Arbiter
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Arbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Compound
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Constraint
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Body
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Shape
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CallbackSet
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CallbackSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_CbType
#include <hxinc/zpp_nape/util/ZNPNode_ZPP_CbType.h>
#endif
#ifndef INCLUDED_zpp_nape_util_Hashable2_Boolfalse
#include <hxinc/zpp_nape/util/Hashable2_Boolfalse.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_SweepData
#include <hxinc/zpp_nape/space/ZPP_SweepData.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Component
#include <hxinc/zpp_nape/space/ZPP_Component.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_AABBPair
#include <hxinc/zpp_nape/space/ZPP_AABBPair.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_AABBNode
#include <hxinc/zpp_nape/space/ZPP_AABBNode.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Edge
#include <hxinc/zpp_nape/shape/ZPP_Edge.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Shape
#include <hxinc/zpp_nape/shape/ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Material
#include <hxinc/zpp_nape/phys/ZPP_Material.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_FluidProperties
#include <hxinc/zpp_nape/phys/ZPP_FluidProperties.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Triangular
#include <hxinc/zpp_nape/geom/ZPP_Triangular.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_PartitionPair
#include <hxinc/zpp_nape/geom/ZPP_PartitionPair.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_ToiEvent
#include <hxinc/zpp_nape/geom/ZPP_ToiEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Simplify
#include <hxinc/zpp_nape/geom/ZPP_Simplify.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimplifyP
#include <hxinc/zpp_nape/geom/ZPP_SimplifyP.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimplifyV
#include <hxinc/zpp_nape/geom/ZPP_SimplifyV.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Simple
#include <hxinc/zpp_nape/geom/ZPP_Simple.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimpleEvent
#include <hxinc/zpp_nape/geom/ZPP_SimpleEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimpleSeg
#include <hxinc/zpp_nape/geom/ZPP_SimpleSeg.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimpleVert
#include <hxinc/zpp_nape/geom/ZPP_SimpleVert.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Ray
#include <hxinc/zpp_nape/geom/ZPP_Ray.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_PartitionedPoly
#include <hxinc/zpp_nape/geom/ZPP_PartitionedPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_PartitionVertex
#include <hxinc/zpp_nape/geom/ZPP_PartitionVertex.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Monotone
#include <hxinc/zpp_nape/geom/ZPP_Monotone.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Mat23
#include <hxinc/zpp_nape/geom/ZPP_Mat23.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_MarchingSquares
#include <hxinc/zpp_nape/geom/ZPP_MarchingSquares.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_MarchPair
#include <hxinc/zpp_nape/geom/ZPP_MarchPair.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_MarchSpan
#include <hxinc/zpp_nape/geom/ZPP_MarchSpan.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_GeomVertexIterator
#include <hxinc/zpp_nape/geom/ZPP_GeomVertexIterator.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_GeomVert
#include <hxinc/zpp_nape/geom/ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Cutter
#include <hxinc/zpp_nape/geom/ZPP_Cutter.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_CutInt
#include <hxinc/zpp_nape/geom/ZPP_CutInt.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_CutVert
#include <hxinc/zpp_nape/geom/ZPP_CutVert.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_ConvexRayResult
#include <hxinc/zpp_nape/geom/ZPP_ConvexRayResult.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Collide
#include <hxinc/zpp_nape/geom/ZPP_Collide.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionGroup
#include <hxinc/zpp_nape/dynamics/ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionFilter
#include <hxinc/zpp_nape/dynamics/ZPP_InteractionFilter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_Contact
#include <hxinc/zpp_nape/dynamics/ZPP_Contact.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_ColArbiter
#include <hxinc/zpp_nape/dynamics/ZPP_ColArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_FluidArbiter
#include <hxinc/zpp_nape/dynamics/ZPP_FluidArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_SensorArbiter
#include <hxinc/zpp_nape/dynamics/ZPP_SensorArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_Arbiter
#include <hxinc/zpp_nape/dynamics/ZPP_Arbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_InteractionListener
#include <hxinc/zpp_nape/callbacks/ZPP_InteractionListener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Listener
#include <hxinc/zpp_nape/callbacks/ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_CbSetPair
#include <hxinc/zpp_nape/callbacks/ZPP_CbSetPair.h>
#endif
#ifndef INCLUDED_zpp_nape_ZPP_Const
#include <hxinc/zpp_nape/ZPP_Const.h>
#endif
#ifndef INCLUDED_scene_managment_SceneManager
#include <hxinc/scene/managment/SceneManager.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_CbSet
#include <hxinc/zpp_nape/callbacks/ZPP_CbSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Set_ZPP_CbSet
#include <hxinc/zpp_nape/util/ZPP_Set_ZPP_CbSet.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_CallbackSet
#include <hxinc/zpp_nape/space/ZPP_CallbackSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ListenerList
#include <hxinc/zpp_nape/util/ZPP_ListenerList.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_CbType
#include <hxinc/zpp_nape/callbacks/ZPP_CbType.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_PubPool
#include <hxinc/zpp_nape/util/ZPP_PubPool.h>
#endif
#ifndef INCLUDED_zpp_nape_ZPP_ID
#include <hxinc/zpp_nape/ZPP_ID.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ShapeList
#include <hxinc/zpp_nape/util/ZPP_ShapeList.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Body
#include <hxinc/zpp_nape/phys/ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ConstraintList
#include <hxinc/zpp_nape/util/ZPP_ConstraintList.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Island
#include <hxinc/zpp_nape/space/ZPP_Island.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_CompoundList
#include <hxinc/zpp_nape/util/ZPP_CompoundList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_BodyList
#include <hxinc/zpp_nape/util/ZPP_BodyList.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_AABBTree
#include <hxinc/zpp_nape/space/ZPP_AABBTree.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_AABB
#include <hxinc/zpp_nape/geom/ZPP_AABB.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_DynAABBPhase
#include <hxinc/zpp_nape/space/ZPP_DynAABBPhase.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Flags
#include <hxinc/zpp_nape/util/ZPP_Flags.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Callback
#include <hxinc/zpp_nape/callbacks/ZPP_Callback.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <hxinc/zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_nape_shape_ShapeIterator
#include <hxinc/nape/shape/ShapeIterator.h>
#endif
#ifndef INCLUDED_nape_shape_EdgeIterator
#include <hxinc/nape/shape/EdgeIterator.h>
#endif
#ifndef INCLUDED_nape_shape_Shape
#include <hxinc/nape/shape/Shape.h>
#endif
#ifndef INCLUDED_nape_phys_InteractorIterator
#include <hxinc/nape/phys/InteractorIterator.h>
#endif
#ifndef INCLUDED_nape_phys_CompoundIterator
#include <hxinc/nape/phys/CompoundIterator.h>
#endif
#ifndef INCLUDED_nape_phys_BodyIterator
#include <hxinc/nape/phys/BodyIterator.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <hxinc/nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2Iterator
#include <hxinc/nape/geom/Vec2Iterator.h>
#endif
#ifndef INCLUDED_nape_geom_RayResultIterator
#include <hxinc/nape/geom/RayResultIterator.h>
#endif
#ifndef INCLUDED_nape_geom_GeomPolyIterator
#include <hxinc/nape/geom/GeomPolyIterator.h>
#endif
#ifndef INCLUDED_nape_geom_ConvexResultIterator
#include <hxinc/nape/geom/ConvexResultIterator.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroupIterator
#include <hxinc/nape/dynamics/InteractionGroupIterator.h>
#endif
#ifndef INCLUDED_nape_dynamics_ContactIterator
#include <hxinc/nape/dynamics/ContactIterator.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterIterator
#include <hxinc/nape/dynamics/ArbiterIterator.h>
#endif
#ifndef INCLUDED_nape_constraint_ConstraintIterator
#include <hxinc/nape/constraint/ConstraintIterator.h>
#endif
#ifndef INCLUDED_nape_constraint_Constraint
#include <hxinc/nape/constraint/Constraint.h>
#endif
#ifndef INCLUDED_nape_callbacks_ListenerIterator
#include <hxinc/nape/callbacks/ListenerIterator.h>
#endif
#ifndef INCLUDED_nape_callbacks_CbTypeIterator
#include <hxinc/nape/callbacks/CbTypeIterator.h>
#endif
#ifndef INCLUDED_nape_Config
#include <hxinc/nape/Config.h>
#endif
#ifndef INCLUDED_kha_vr_VrInterfaceEmulated
#include <hxinc/kha/vr/VrInterfaceEmulated.h>
#endif
#ifndef INCLUDED_kha_netsync_SyncBuilder
#include <hxinc/kha/netsync/SyncBuilder.h>
#endif
#ifndef INCLUDED_kha_netsync_Session
#include <hxinc/kha/netsync/Session.h>
#endif
#ifndef INCLUDED_kha_netsync_ControllerBuilder
#include <hxinc/kha/netsync/ControllerBuilder.h>
#endif
#ifndef INCLUDED_kha_math_Quaternion
#include <hxinc/kha/math/Quaternion.h>
#endif
#ifndef INCLUDED_kha_math_Matrix4
#include <hxinc/kha/math/Matrix4.h>
#endif
#ifndef INCLUDED_kha_math_Matrix3
#include <hxinc/kha/math/Matrix3.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <hxinc/kha/math/FastMatrix4.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <hxinc/kha/math/FastMatrix3.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_Graphics
#include <hxinc/kha/kore/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <hxinc/kha/internal/BytesBlob.h>
#endif
#ifndef INCLUDED_kha_input_Sensor
#include <hxinc/kha/input/Sensor.h>
#endif
#ifndef INCLUDED_kha_input_Mouse
#include <hxinc/kha/input/Mouse.h>
#endif
#ifndef INCLUDED_kha_input_Keyboard
#include <hxinc/kha/input/Keyboard.h>
#endif
#ifndef INCLUDED_kha_input_Gamepad
#include <hxinc/kha/input/Gamepad.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextShaderPainter
#include <hxinc/kha/graphics4/TextShaderPainter.h>
#endif
#ifndef INCLUDED_kha_graphics4_ColoredShaderPainter
#include <hxinc/kha/graphics4/ColoredShaderPainter.h>
#endif
#ifndef INCLUDED_kha_graphics4_ImageShaderPainter
#include <hxinc/kha/graphics4/ImageShaderPainter.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_StbTruetype
#include <hxinc/kha/graphics2/truetype/StbTruetype.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Setting
#include <hxinc/kha/audio2/ogg/vorbis/data/Setting.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_PageFlag
#include <hxinc/kha/audio2/ogg/vorbis/data/PageFlag.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Header
#include <hxinc/kha/audio2/ogg/vorbis/data/Header.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Codebook
#include <hxinc/kha/audio2/ogg/vorbis/data/Codebook.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisTools
#include <hxinc/kha/audio2/ogg/vorbis/VorbisTools.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecodeState
#include <hxinc/kha/audio2/ogg/vorbis/VorbisDecodeState.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_tools_Crc32
#include <hxinc/kha/audio2/ogg/tools/Crc32.h>
#endif
#ifndef INCLUDED_kha_audio2_Audio1
#include <hxinc/kha/audio2/Audio1.h>
#endif
#ifndef INCLUDED_kha__WindowOptions_WindowFeatures_Impl_
#include <hxinc/kha/_WindowOptions/WindowFeatures_Impl_.h>
#endif
#ifndef INCLUDED_kha_Window
#include <hxinc/kha/Window.h>
#endif
#ifndef INCLUDED_kha_SystemImpl
#include <hxinc/kha/SystemImpl.h>
#endif
#ifndef INCLUDED_kha_System
#include <hxinc/kha/System.h>
#endif
#ifndef INCLUDED_kha_Shaders
#include <hxinc/kha/Shaders.h>
#endif
#ifndef INCLUDED_kha_Scheduler
#include <hxinc/kha/Scheduler.h>
#endif
#ifndef INCLUDED_kha_Display
#include <hxinc/kha/Display.h>
#endif
#ifndef INCLUDED_kha__Color_Color_Impl_
#include <hxinc/kha/_Color/Color_Impl_.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_haxe_xml_Parser
#include <hxinc/haxe/xml/Parser.h>
#endif
#ifndef INCLUDED_haxe_Unserializer
#include <hxinc/haxe/Unserializer.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <hxinc/haxe/Log.h>
#endif
#ifndef INCLUDED_Xml
#include <hxinc/Xml.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Math
#include <hxinc/zpp_nape/util/ZPP_Math.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_MixVec2List
#include <hxinc/zpp_nape/util/ZPP_MixVec2List.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_RayResult
#include <hxinc/zpp_nape/util/ZNPList_RayResult.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_GeomPoly
#include <hxinc/zpp_nape/util/ZNPList_ZPP_GeomPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ConvexResult
#include <hxinc/zpp_nape/util/ZNPList_ConvexResult.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_InteractionGroup
#include <hxinc/zpp_nape/util/ZNPList_ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_AABBNode
#include <hxinc/zpp_nape/util/ZNPList_ZPP_AABBNode.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Edge
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Edge.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_AABBPair
#include <hxinc/zpp_nape/util/ZNPList_ZPP_AABBPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_SimpleEvent
#include <hxinc/zpp_nape/util/ZNPList_ZPP_SimpleEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_SimpleVert
#include <hxinc/zpp_nape/util/ZNPList_ZPP_SimpleVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_GeomVert
#include <hxinc/zpp_nape/util/ZNPList_ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_PartitionedPoly
#include <hxinc/zpp_nape/util/ZNPList_ZPP_PartitionedPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_SimplifyP
#include <hxinc/zpp_nape/util/ZNPList_ZPP_SimplifyP.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_PartitionVertex
#include <hxinc/zpp_nape/util/ZNPList_ZPP_PartitionVertex.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CutVert
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CutVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CutInt
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CutInt.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CbSetPair
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CbSetPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_FastHash2_Hashable2_Boolfalse
#include <hxinc/zpp_nape/util/FastHash2_Hashable2_Boolfalse.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPArray2_ZPP_MarchPair
#include <hxinc/zpp_nape/util/ZNPArray2_ZPP_MarchPair.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPArray2_ZPP_GeomVert
#include <hxinc/zpp_nape/util/ZNPArray2_ZPP_GeomVert.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPArray2_Float
#include <hxinc/zpp_nape/util/ZNPArray2_Float.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Polygon
#include <hxinc/zpp_nape/shape/ZPP_Polygon.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Circle
#include <hxinc/zpp_nape/shape/ZPP_Circle.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Compound
#include <hxinc/zpp_nape/phys/ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_VecMath
#include <hxinc/zpp_nape/geom/ZPP_VecMath.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec3
#include <hxinc/zpp_nape/geom/ZPP_Vec3.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SweepDistance
#include <hxinc/zpp_nape/geom/ZPP_SweepDistance.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_SimpleSweep
#include <hxinc/zpp_nape/geom/ZPP_SimpleSweep.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_MatMN
#include <hxinc/zpp_nape/geom/ZPP_MatMN.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_GeomPoly
#include <hxinc/zpp_nape/geom/ZPP_GeomPoly.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Geom
#include <hxinc/zpp_nape/geom/ZPP_Geom.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Convex
#include <hxinc/zpp_nape/geom/ZPP_Convex.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Vec2
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_SpaceArbiterList
#include <hxinc/zpp_nape/dynamics/ZPP_SpaceArbiterList.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_IContact
#include <hxinc/zpp_nape/dynamics/ZPP_IContact.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_WeldJoint
#include <hxinc/zpp_nape/constraint/ZPP_WeldJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_UserBody
#include <hxinc/zpp_nape/constraint/ZPP_UserBody.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_UserConstraint
#include <hxinc/zpp_nape/constraint/ZPP_UserConstraint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_PulleyJoint
#include <hxinc/zpp_nape/constraint/ZPP_PulleyJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_PivotJoint
#include <hxinc/zpp_nape/constraint/ZPP_PivotJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_MotorJoint
#include <hxinc/zpp_nape/constraint/ZPP_MotorJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_LineJoint
#include <hxinc/zpp_nape/constraint/ZPP_LineJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_DistanceJoint
#include <hxinc/zpp_nape/constraint/ZPP_DistanceJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_CopyHelper
#include <hxinc/zpp_nape/constraint/ZPP_CopyHelper.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_AngleJoint
#include <hxinc/zpp_nape/constraint/ZPP_AngleJoint.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_Constraint
#include <hxinc/zpp_nape/constraint/ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_OptionType
#include <hxinc/zpp_nape/callbacks/ZPP_OptionType.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_ConstraintListener
#include <hxinc/zpp_nape/callbacks/ZPP_ConstraintListener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_BodyListener
#include <hxinc/zpp_nape/callbacks/ZPP_BodyListener.h>
#endif
#ifndef INCLUDED_world_Stage
#include <hxinc/world/Stage.h>
#endif
#ifndef INCLUDED_sys_io_FileInput
#include <hxinc/sys/io/FileInput.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <hxinc/sys/io/File.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <hxinc/sys/FileSystem.h>
#endif
#ifndef INCLUDED_util_Timer
#include <hxinc/util/Timer.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_CbSetManager
#include <hxinc/zpp_nape/space/ZPP_CbSetManager.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Listener
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CbSet
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CbSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Interactor
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_ConstraintListener
#include <hxinc/zpp_nape/util/ZNPList_ZPP_ConstraintListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_BodyListener
#include <hxinc/zpp_nape/util/ZNPList_ZPP_BodyListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_InteractionListener
#include <hxinc/zpp_nape/util/ZNPList_ZPP_InteractionListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CbType
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CbType.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_CallbackSet
#include <hxinc/zpp_nape/util/ZNPList_ZPP_CallbackSet.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Shape
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Arbiter
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Arbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <hxinc/zpp_nape/phys/ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Constraint
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Component
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Component.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_SensorArbiter
#include <hxinc/zpp_nape/util/ZNPList_ZPP_SensorArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_FluidArbiter
#include <hxinc/zpp_nape/util/ZNPList_ZPP_FluidArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_ColArbiter
#include <hxinc/zpp_nape/util/ZNPList_ZPP_ColArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Compound
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Body
#include <hxinc/zpp_nape/util/ZNPList_ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_SweepPhase
#include <hxinc/zpp_nape/space/ZPP_SweepPhase.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Broadphase
#include <hxinc/zpp_nape/space/ZPP_Broadphase.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_ToiEvent
#include <hxinc/zpp_nape/util/ZNPList_ZPP_ToiEvent.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Space
#include <hxinc/zpp_nape/space/ZPP_Space.h>
#endif
#ifndef INCLUDED_scene_impl_PreloaderScene
#include <hxinc/scene/impl/PreloaderScene.h>
#endif
#ifndef INCLUDED_scene_impl_GameScene
#include <hxinc/scene/impl/GameScene.h>
#endif
#ifndef INCLUDED_scene_Scene
#include <hxinc/scene/Scene.h>
#endif
#ifndef INCLUDED_nape_util_Debug
#include <hxinc/nape/util/Debug.h>
#endif
#ifndef INCLUDED_nape_space_Space
#include <hxinc/nape/space/Space.h>
#endif
#ifndef INCLUDED_nape_space_Broadphase
#include <hxinc/nape/space/Broadphase.h>
#endif
#ifndef INCLUDED_nape_shape_ValidationResult
#include <hxinc/nape/shape/ValidationResult.h>
#endif
#ifndef INCLUDED_nape_shape_ShapeType
#include <hxinc/nape/shape/ShapeType.h>
#endif
#ifndef INCLUDED_nape_shape_ShapeList
#include <hxinc/nape/shape/ShapeList.h>
#endif
#ifndef INCLUDED_nape_shape_Polygon
#include <hxinc/nape/shape/Polygon.h>
#endif
#ifndef INCLUDED_nape_shape_EdgeList
#include <hxinc/nape/shape/EdgeList.h>
#endif
#ifndef INCLUDED_nape_shape_Edge
#include <hxinc/nape/shape/Edge.h>
#endif
#ifndef INCLUDED_nape_shape_Circle
#include <hxinc/nape/shape/Circle.h>
#endif
#ifndef INCLUDED_nape_phys_Material
#include <hxinc/nape/phys/Material.h>
#endif
#ifndef INCLUDED_nape_phys_MassMode
#include <hxinc/nape/phys/MassMode.h>
#endif
#ifndef INCLUDED_nape_phys_InteractorList
#include <hxinc/nape/phys/InteractorList.h>
#endif
#ifndef INCLUDED_nape_phys_InertiaMode
#include <hxinc/nape/phys/InertiaMode.h>
#endif
#ifndef INCLUDED_nape_phys_GravMassMode
#include <hxinc/nape/phys/GravMassMode.h>
#endif
#ifndef INCLUDED_nape_phys_FluidProperties
#include <hxinc/nape/phys/FluidProperties.h>
#endif
#ifndef INCLUDED_nape_phys_CompoundList
#include <hxinc/nape/phys/CompoundList.h>
#endif
#ifndef INCLUDED_nape_phys_Compound
#include <hxinc/nape/phys/Compound.h>
#endif
#ifndef INCLUDED_nape_phys_BodyType
#include <hxinc/nape/phys/BodyType.h>
#endif
#ifndef INCLUDED_nape_phys_BodyList
#include <hxinc/nape/phys/BodyList.h>
#endif
#ifndef INCLUDED_nape_phys_Body
#include <hxinc/nape/phys/Body.h>
#endif
#ifndef INCLUDED_nape_geom_Winding
#include <hxinc/nape/geom/Winding.h>
#endif
#ifndef INCLUDED_nape_geom_Vec3
#include <hxinc/nape/geom/Vec3.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2List
#include <hxinc/nape/geom/Vec2List.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <hxinc/nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_nape_geom_RayResultList
#include <hxinc/nape/geom/RayResultList.h>
#endif
#ifndef INCLUDED_nape_geom_RayResult
#include <hxinc/nape/geom/RayResult.h>
#endif
#ifndef INCLUDED_nape_geom_Ray
#include <hxinc/nape/geom/Ray.h>
#endif
#ifndef INCLUDED_nape_geom_MatMN
#include <hxinc/nape/geom/MatMN.h>
#endif
#ifndef INCLUDED_nape_geom_Mat23
#include <hxinc/nape/geom/Mat23.h>
#endif
#ifndef INCLUDED_nape_geom_MarchingSquares
#include <hxinc/nape/geom/MarchingSquares.h>
#endif
#ifndef INCLUDED_nape_geom_GeomVertexIterator
#include <hxinc/nape/geom/GeomVertexIterator.h>
#endif
#ifndef INCLUDED_nape_geom_GeomPolyList
#include <hxinc/nape/geom/GeomPolyList.h>
#endif
#ifndef INCLUDED_nape_geom_GeomPoly
#include <hxinc/nape/geom/GeomPoly.h>
#endif
#ifndef INCLUDED_nape_geom_Geom
#include <hxinc/nape/geom/Geom.h>
#endif
#ifndef INCLUDED_nape_geom_ConvexResultList
#include <hxinc/nape/geom/ConvexResultList.h>
#endif
#ifndef INCLUDED_nape_geom_ConvexResult
#include <hxinc/nape/geom/ConvexResult.h>
#endif
#ifndef INCLUDED_nape_geom_AABB
#include <hxinc/nape/geom/AABB.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroupList
#include <hxinc/nape/dynamics/InteractionGroupList.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroup
#include <hxinc/nape/dynamics/InteractionGroup.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionFilter
#include <hxinc/nape/dynamics/InteractionFilter.h>
#endif
#ifndef INCLUDED_nape_dynamics_FluidArbiter
#include <hxinc/nape/dynamics/FluidArbiter.h>
#endif
#ifndef INCLUDED_nape_dynamics_ContactList
#include <hxinc/nape/dynamics/ContactList.h>
#endif
#ifndef INCLUDED_nape_dynamics_Contact
#include <hxinc/nape/dynamics/Contact.h>
#endif
#ifndef INCLUDED_nape_dynamics_CollisionArbiter
#include <hxinc/nape/dynamics/CollisionArbiter.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterType
#include <hxinc/nape/dynamics/ArbiterType.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterList
#include <hxinc/nape/dynamics/ArbiterList.h>
#endif
#ifndef INCLUDED_nape_dynamics_Arbiter
#include <hxinc/nape/dynamics/Arbiter.h>
#endif
#ifndef INCLUDED_nape_constraint_WeldJoint
#include <hxinc/nape/constraint/WeldJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_UserConstraint
#include <hxinc/nape/constraint/UserConstraint.h>
#endif
#ifndef INCLUDED_nape_constraint_PulleyJoint
#include <hxinc/nape/constraint/PulleyJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_PivotJoint
#include <hxinc/nape/constraint/PivotJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_MotorJoint
#include <hxinc/nape/constraint/MotorJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_LineJoint
#include <hxinc/nape/constraint/LineJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_DistanceJoint
#include <hxinc/nape/constraint/DistanceJoint.h>
#endif
#ifndef INCLUDED_nape_constraint_ConstraintList
#include <hxinc/nape/constraint/ConstraintList.h>
#endif
#ifndef INCLUDED_nape_constraint_AngleJoint
#include <hxinc/nape/constraint/AngleJoint.h>
#endif
#ifndef INCLUDED_nape_callbacks_PreListener
#include <hxinc/nape/callbacks/PreListener.h>
#endif
#ifndef INCLUDED_nape_callbacks_PreFlag
#include <hxinc/nape/callbacks/PreFlag.h>
#endif
#ifndef INCLUDED_nape_callbacks_PreCallback
#include <hxinc/nape/callbacks/PreCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_OptionType
#include <hxinc/nape/callbacks/OptionType.h>
#endif
#ifndef INCLUDED_nape_callbacks_ListenerType
#include <hxinc/nape/callbacks/ListenerType.h>
#endif
#ifndef INCLUDED_nape_callbacks_ListenerList
#include <hxinc/nape/callbacks/ListenerList.h>
#endif
#ifndef INCLUDED_nape_callbacks_InteractionType
#include <hxinc/nape/callbacks/InteractionType.h>
#endif
#ifndef INCLUDED_nape_callbacks_InteractionListener
#include <hxinc/nape/callbacks/InteractionListener.h>
#endif
#ifndef INCLUDED_nape_callbacks_InteractionCallback
#include <hxinc/nape/callbacks/InteractionCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_ConstraintListener
#include <hxinc/nape/callbacks/ConstraintListener.h>
#endif
#ifndef INCLUDED_nape_callbacks_ConstraintCallback
#include <hxinc/nape/callbacks/ConstraintCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_CbTypeList
#include <hxinc/nape/callbacks/CbTypeList.h>
#endif
#ifndef INCLUDED_nape_callbacks_CbType
#include <hxinc/nape/callbacks/CbType.h>
#endif
#ifndef INCLUDED_nape_callbacks_CbEvent
#include <hxinc/nape/callbacks/CbEvent.h>
#endif
#ifndef INCLUDED_nape_callbacks_BodyListener
#include <hxinc/nape/callbacks/BodyListener.h>
#endif
#ifndef INCLUDED_nape_callbacks_Listener
#include <hxinc/nape/callbacks/Listener.h>
#endif
#ifndef INCLUDED_nape_callbacks_BodyCallback
#include <hxinc/nape/callbacks/BodyCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_Callback
#include <hxinc/nape/callbacks/Callback.h>
#endif
#ifndef INCLUDED_kha_vr_VrInterface
#include <hxinc/kha/vr/VrInterface.h>
#endif
#ifndef INCLUDED_kha_vr_TimeWarpParms
#include <hxinc/kha/vr/TimeWarpParms.h>
#endif
#ifndef INCLUDED_kha_vr_TimeWarpImage
#include <hxinc/kha/vr/TimeWarpImage.h>
#endif
#ifndef INCLUDED_kha_vr_SensorState
#include <hxinc/kha/vr/SensorState.h>
#endif
#ifndef INCLUDED_kha_vr_PoseState
#include <hxinc/kha/vr/PoseState.h>
#endif
#ifndef INCLUDED_kha_vr_Pose
#include <hxinc/kha/vr/Pose.h>
#endif
#ifndef INCLUDED_kha_netsync_State
#include <hxinc/kha/netsync/State.h>
#endif
#ifndef INCLUDED_kha_netsync_Network
#include <hxinc/kha/netsync/Network.h>
#endif
#ifndef INCLUDED_kha_netsync_LocalClient
#include <hxinc/kha/netsync/LocalClient.h>
#endif
#ifndef INCLUDED_kha_netsync_Entity
#include <hxinc/kha/netsync/Entity.h>
#endif
#ifndef INCLUDED_kha_netsync_Client
#include <hxinc/kha/netsync/Client.h>
#endif
#ifndef INCLUDED_kha_math_Vector4
#include <hxinc/kha/math/Vector4.h>
#endif
#ifndef INCLUDED_kha_math_Vector3
#include <hxinc/kha/math/Vector3.h>
#endif
#ifndef INCLUDED_kha_math_Vector2
#include <hxinc/kha/math/Vector2.h>
#endif
#ifndef INCLUDED_kha_math_FastVector4
#include <hxinc/kha/math/FastVector4.h>
#endif
#ifndef INCLUDED_kha_math_FastVector3
#include <hxinc/kha/math/FastVector3.h>
#endif
#ifndef INCLUDED_kha_math_FastVector2
#include <hxinc/kha/math/FastVector2.h>
#endif
#ifndef INCLUDED_kha_kore_graphics5_Graphics
#include <hxinc/kha/kore/graphics5/Graphics.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_TextureUnit
#include <hxinc/kha/kore/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_Graphics2
#include <hxinc/kha/kore/graphics4/Graphics2.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_ConstantLocation
#include <hxinc/kha/kore/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_kore_Video
#include <hxinc/kha/kore/Video.h>
#endif
#ifndef INCLUDED_kha_kore_Sound
#include <hxinc/kha/kore/Sound.h>
#endif
#ifndef INCLUDED_kha_kore_Keyboard
#include <hxinc/kha/kore/Keyboard.h>
#endif
#ifndef INCLUDED_kha_input_Surface
#include <hxinc/kha/input/Surface.h>
#endif
#ifndef INCLUDED_kha_input_Pen
#include <hxinc/kha/input/Pen.h>
#endif
#ifndef INCLUDED_kha_input_MouseImpl
#include <hxinc/kha/input/MouseImpl.h>
#endif
#ifndef INCLUDED_kha_netsync_Controller
#include <hxinc/kha/netsync/Controller.h>
#endif
#ifndef INCLUDED_kha_graphics5_VertexShader
#include <hxinc/kha/graphics5/VertexShader.h>
#endif
#ifndef INCLUDED_kha_graphics5_VertexBuffer
#include <hxinc/kha/graphics5/VertexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics5_RenderTarget
#include <hxinc/kha/graphics5/RenderTarget.h>
#endif
#ifndef INCLUDED_kha_graphics5_PipelineState
#include <hxinc/kha/graphics5/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics5_PipelineStateBase
#include <hxinc/kha/graphics5/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_graphics5_IndexBuffer
#include <hxinc/kha/graphics5/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics5_Graphics
#include <hxinc/kha/graphics5/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics5_FragmentShader
#include <hxinc/kha/graphics5/FragmentShader.h>
#endif
#ifndef INCLUDED_kha_graphics5_CommandList
#include <hxinc/kha/graphics5/CommandList.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexStructure
#include <hxinc/kha/graphics4/VertexStructure.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexShader
#include <hxinc/kha/graphics4/VertexShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexElement
#include <hxinc/kha/graphics4/VertexElement.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexBuffer
#include <hxinc/kha/graphics4/VertexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureUnit
#include <hxinc/kha/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_graphics4_TessellationEvaluationShader
#include <hxinc/kha/graphics4/TessellationEvaluationShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_TessellationControlShader
#include <hxinc/kha/graphics4/TessellationControlShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <hxinc/kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <hxinc/kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_graphics4_IndexBuffer
#include <hxinc/kha/graphics4/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics2
#include <hxinc/kha/graphics4/Graphics2.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <hxinc/kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_GeometryShader
#include <hxinc/kha/graphics4/GeometryShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_FragmentShader
#include <hxinc/kha/graphics4/FragmentShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_CubeMap
#include <hxinc/kha/graphics4/CubeMap.h>
#endif
#ifndef INCLUDED_kha_graphics4_ConstantLocation
#include <hxinc/kha/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__point
#include <hxinc/kha/graphics2/truetype/Stbtt__point.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__active_edge
#include <hxinc/kha/graphics2/truetype/Stbtt__active_edge.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__edge
#include <hxinc/kha/graphics2/truetype/Stbtt__edge.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__bitmap
#include <hxinc/kha/graphics2/truetype/Stbtt__bitmap.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_vertex
#include <hxinc/kha/graphics2/truetype/Stbtt_vertex.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_fontinfo
#include <hxinc/kha/graphics2/truetype/Stbtt_fontinfo.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_pack_context
#include <hxinc/kha/graphics2/truetype/Stbtt_pack_context.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_pack_range
#include <hxinc/kha/graphics2/truetype/Stbtt_pack_range.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_packedchar
#include <hxinc/kha/graphics2/truetype/Stbtt_packedchar.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_aligned_quad
#include <hxinc/kha/graphics2/truetype/Stbtt_aligned_quad.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_bakedchar
#include <hxinc/kha/graphics2/truetype/Stbtt_bakedchar.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_region
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_region.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_font_v_metrics
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_font_v_metrics.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_glyph_h_metrics
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_glyph_h_metrics.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_rect
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_rect.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_VectorOfIntPointer
#include <hxinc/kha/graphics2/truetype/VectorOfIntPointer.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics1
#include <hxinc/kha/graphics2/Graphics1.h>
#endif
#ifndef INCLUDED_kha_graphics1_Graphics
#include <hxinc/kha/graphics1/Graphics.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Residue
#include <hxinc/kha/audio2/ogg/vorbis/data/Residue.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError
#include <hxinc/kha/audio2/ogg/vorbis/data/ReaderError.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ProbedPage
#include <hxinc/kha/audio2/ogg/vorbis/data/ProbedPage.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Page
#include <hxinc/kha/audio2/ogg/vorbis/data/Page.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mode
#include <hxinc/kha/audio2/ogg/vorbis/data/Mode.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_MappingChannel
#include <hxinc/kha/audio2/ogg/vorbis/data/MappingChannel.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mapping
#include <hxinc/kha/audio2/ogg/vorbis/data/Mapping.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_IntPoint
#include <hxinc/kha/audio2/ogg/vorbis/data/IntPoint.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor1
#include <hxinc/kha/audio2/ogg/vorbis/data/Floor1.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor0
#include <hxinc/kha/audio2/ogg/vorbis/data/Floor0.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor
#include <hxinc/kha/audio2/ogg/vorbis/data/Floor.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Comment
#include <hxinc/kha/audio2/ogg/vorbis/data/Comment.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecoder
#include <hxinc/kha/audio2/ogg/vorbis/VorbisDecoder.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_Reader
#include <hxinc/kha/audio2/ogg/vorbis/Reader.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_tools_Mdct
#include <hxinc/kha/audio2/ogg/tools/Mdct.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_tools_MathTools
#include <hxinc/kha/audio2/ogg/tools/MathTools.h>
#endif
#ifndef INCLUDED_kha_audio2_StreamChannel
#include <hxinc/kha/audio2/StreamChannel.h>
#endif
#ifndef INCLUDED_kha_audio2_Buffer
#include <hxinc/kha/audio2/Buffer.h>
#endif
#ifndef INCLUDED_kha_audio2_AudioChannel
#include <hxinc/kha/audio2/AudioChannel.h>
#endif
#ifndef INCLUDED_kha_audio2_Audio
#include <hxinc/kha/audio2/Audio.h>
#endif
#ifndef INCLUDED_kha_audio1_AudioChannel
#include <hxinc/kha/audio1/AudioChannel.h>
#endif
#ifndef INCLUDED_kha_arrays__Uint32Array_Uint32Array_Impl_
#include <hxinc/kha/arrays/_Uint32Array/Uint32Array_Impl_.h>
#endif
#ifndef INCLUDED_kha_arrays_Uint32ArrayPrivate
#include <hxinc/kha/arrays/Uint32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_arrays__Float32Array_Float32Array_Impl_
#include <hxinc/kha/arrays/_Float32Array/Float32Array_Impl_.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <hxinc/kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_Worker
#include <hxinc/kha/Worker.h>
#endif
#ifndef INCLUDED_kha_WindowOptions
#include <hxinc/kha/WindowOptions.h>
#endif
#ifndef INCLUDED_kha_Video
#include <hxinc/kha/Video.h>
#endif
#ifndef INCLUDED_kha_SystemOptions
#include <hxinc/kha/SystemOptions.h>
#endif
#ifndef INCLUDED_kha_Sound
#include <hxinc/kha/Sound.h>
#endif
#ifndef INCLUDED_kha_FrameTask
#include <hxinc/kha/FrameTask.h>
#endif
#ifndef INCLUDED_kha_TimeTask
#include <hxinc/kha/TimeTask.h>
#endif
#ifndef INCLUDED_kha_LoaderImpl
#include <hxinc/kha/LoaderImpl.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <hxinc/kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_KravurImage
#include <hxinc/kha/KravurImage.h>
#endif
#ifndef INCLUDED_kha_AlignedQuad
#include <hxinc/kha/AlignedQuad.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_FramebufferOptions
#include <hxinc/kha/FramebufferOptions.h>
#endif
#ifndef INCLUDED_kha_Framebuffer
#include <hxinc/kha/Framebuffer.h>
#endif
#ifndef INCLUDED_kha_DisplayMode
#include <hxinc/kha/DisplayMode.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha__Assets_VideoList
#include <hxinc/kha/_Assets/VideoList.h>
#endif
#ifndef INCLUDED_kha__Assets_FontList
#include <hxinc/kha/_Assets/FontList.h>
#endif
#ifndef INCLUDED_kha__Assets_BlobList
#include <hxinc/kha/_Assets/BlobList.h>
#endif
#ifndef INCLUDED_kha__Assets_SoundList
#include <hxinc/kha/_Assets/SoundList.h>
#endif
#ifndef INCLUDED_kha__Assets_ImageList
#include <hxinc/kha/_Assets/ImageList.h>
#endif
#ifndef INCLUDED_haxe_xml_Printer
#include <hxinc/haxe/xml/Printer.h>
#endif
#ifndef INCLUDED_haxe_xml_XmlParserException
#include <hxinc/haxe/xml/XmlParserException.h>
#endif
#ifndef INCLUDED_haxe_xml__Access_NodeListAccess_Impl_
#include <hxinc/haxe/xml/_Access/NodeListAccess_Impl_.h>
#endif
#ifndef INCLUDED_haxe_xml__Access_HasAttribAccess_Impl_
#include <hxinc/haxe/xml/_Access/HasAttribAccess_Impl_.h>
#endif
#ifndef INCLUDED_haxe_xml__Access_AttribAccess_Impl_
#include <hxinc/haxe/xml/_Access/AttribAccess_Impl_.h>
#endif
#ifndef INCLUDED_haxe_xml__Access_NodeAccess_Impl_
#include <hxinc/haxe/xml/_Access/NodeAccess_Impl_.h>
#endif
#ifndef INCLUDED_haxe_iterators_MapKeyValueIterator
#include <hxinc/haxe/iterators/MapKeyValueIterator.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <hxinc/haxe/io/Path.h>
#endif
#ifndef INCLUDED_haxe_io_FPHelper
#include <hxinc/haxe/io/FPHelper.h>
#endif
#ifndef INCLUDED_haxe_io_Eof
#include <hxinc/haxe/io/Eof.h>
#endif
#ifndef INCLUDED_haxe_io_BytesOutput
#include <hxinc/haxe/io/BytesOutput.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <hxinc/haxe/io/Output.h>
#endif
#ifndef INCLUDED_haxe_io_BytesInput
#include <hxinc/haxe/io/BytesInput.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <hxinc/haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <hxinc/haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <hxinc/haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <hxinc/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <hxinc/haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds__List_ListNode
#include <hxinc/haxe/ds/_List/ListNode.h>
#endif
#ifndef INCLUDED_haxe_ds_List
#include <hxinc/haxe/ds/List.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <hxinc/haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe__Unserializer_DefaultResolver
#include <hxinc/haxe/_Unserializer/DefaultResolver.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <hxinc/haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_entity_group_TypedGroup
#include <hxinc/entity/group/TypedGroup.h>
#endif
#ifndef INCLUDED_entity_element_user_Player
#include <hxinc/entity/element/user/Player.h>
#endif
#ifndef INCLUDED_entity_element_ui_physic_PhysicText
#include <hxinc/entity/element/ui/physic/PhysicText.h>
#endif
#ifndef INCLUDED_entity_element_ui_physic_PhysicUI
#include <hxinc/entity/element/ui/physic/PhysicUI.h>
#endif
#ifndef INCLUDED_entity_element_ui_Text
#include <hxinc/entity/element/ui/Text.h>
#endif
#ifndef INCLUDED_entity_element_item_Sprite
#include <hxinc/entity/element/item/Sprite.h>
#endif
#ifndef INCLUDED_entity_element_Entity
#include <hxinc/entity/element/Entity.h>
#endif
#ifndef INCLUDED_entity_element_IEntity
#include <hxinc/entity/element/IEntity.h>
#endif
#ifndef INCLUDED_cpp_vm_Thread
#include <hxinc/cpp/vm/Thread.h>
#endif
#ifndef INCLUDED_cpp_vm_Mutex
#include <hxinc/cpp/vm/Mutex.h>
#endif
#ifndef INCLUDED_Type
#include <hxinc/Type.h>
#endif
#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_StringBuf
#include <hxinc/StringBuf.h>
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_Reflect
#include <hxinc/Reflect.h>
#endif
#ifndef INCLUDED_Project
#include <hxinc/Project.h>
#endif
#ifndef INCLUDED_Main
#include <hxinc/Main.h>
#endif
#ifndef INCLUDED_Lambda
#include <hxinc/Lambda.h>
#endif
#ifndef INCLUDED_EReg
#include <hxinc/EReg.h>
#endif
#ifndef INCLUDED_Date
#include <hxinc/Date.h>
#endif

void __files__boot();

void __boot_all()
{
__files__boot();
hx::RegisterResources( hx::GetResources() );
::sys::io::FileSeek_obj::__register();
::kha::input::SensorType_obj::__register();
::kha::graphics4::Usage_obj::__register();
::kha::graphics4::TextureFormat_obj::__register();
::kha::graphics4::TextureFilter_obj::__register();
::kha::graphics4::TextureAddressing_obj::__register();
::kha::graphics4::TexDir_obj::__register();
::kha::graphics4::StencilValue_obj::__register();
::kha::graphics4::StencilAction_obj::__register();
::kha::graphics4::MipMapFilter_obj::__register();
::kha::graphics4::CullMode_obj::__register();
::kha::graphics4::CompareMode_obj::__register();
::kha::graphics4::BlendingOperation_obj::__register();
::kha::graphics4::BlendingFactor_obj::__register();
::kha::graphics2::ImageScaleQuality_obj::__register();
::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::__register();
::kha::audio2::ogg::vorbis::_VorbisDecodeState::FindPageResult_obj::__register();
::kha::ScreenRotation_obj::__register();
::haxe::io::Error_obj::__register();
::haxe::io::Encoding_obj::__register();
::zui::Handle_obj::__register();
::zui::Zui_obj::__register();
::zui::Themes_obj::__register();
::zui::Id_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_SimpleEvent_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_SimpleSeg_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_SimpleVert_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_PartitionPair_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_PartitionVertex_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_CbSetPair_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_Body_obj::__register();
::zpp_nape::util::ZPP_ContactList_obj::__register();
::zpp_nape::util::ZPP_ArbiterList_obj::__register();
::zpp_nape::util::ZPP_InteractionGroupList_obj::__register();
::zpp_nape::util::ZPP_EdgeList_obj::__register();
::zpp_nape::util::ZPP_ConvexResultList_obj::__register();
::zpp_nape::util::ZPP_RayResultList_obj::__register();
::zpp_nape::util::ZPP_GeomPolyList_obj::__register();
::zpp_nape::util::ZPP_Vec2List_obj::__register();
::zpp_nape::util::ZPP_CbTypeList_obj::__register();
::zpp_nape::util::ZPP_InteractorList_obj::__register();
::zpp_nape::util::ZNPNode_RayResult_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_GeomPoly_obj::__register();
::zpp_nape::util::ZNPNode_ConvexResult_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_ToiEvent_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_ColArbiter_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Listener_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_SensorArbiter_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_FluidArbiter_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Component_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_AABBNode_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Edge_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_AABBPair_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Vec2_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_SimpleEvent_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_SimpleVert_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_PartitionedPoly_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_PartitionVertex_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CutVert_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CutInt_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_ConstraintListener_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CbSetPair_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_BodyListener_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Interactor_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CbSet_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Arbiter_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Constraint_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Body_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_Shape_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CallbackSet_obj::__register();
::zpp_nape::util::ZNPNode_ZPP_CbType_obj::__register();
::zpp_nape::util::Hashable2_Boolfalse_obj::__register();
::zpp_nape::space::ZPP_SweepData_obj::__register();
::zpp_nape::space::ZPP_Component_obj::__register();
::zpp_nape::space::ZPP_AABBPair_obj::__register();
::zpp_nape::space::ZPP_AABBNode_obj::__register();
::zpp_nape::shape::ZPP_Edge_obj::__register();
::zpp_nape::shape::ZPP_Shape_obj::__register();
::zpp_nape::phys::ZPP_Material_obj::__register();
::zpp_nape::phys::ZPP_FluidProperties_obj::__register();
::zpp_nape::geom::ZPP_Triangular_obj::__register();
::zpp_nape::geom::ZPP_PartitionPair_obj::__register();
::zpp_nape::geom::ZPP_ToiEvent_obj::__register();
::zpp_nape::geom::ZPP_Simplify_obj::__register();
::zpp_nape::geom::ZPP_SimplifyP_obj::__register();
::zpp_nape::geom::ZPP_SimplifyV_obj::__register();
::zpp_nape::geom::ZPP_Simple_obj::__register();
::zpp_nape::geom::ZPP_SimpleEvent_obj::__register();
::zpp_nape::geom::ZPP_SimpleSeg_obj::__register();
::zpp_nape::geom::ZPP_SimpleVert_obj::__register();
::zpp_nape::geom::ZPP_Ray_obj::__register();
::zpp_nape::geom::ZPP_PartitionedPoly_obj::__register();
::zpp_nape::geom::ZPP_PartitionVertex_obj::__register();
::zpp_nape::geom::ZPP_Monotone_obj::__register();
::zpp_nape::geom::ZPP_Mat23_obj::__register();
::zpp_nape::geom::ZPP_MarchingSquares_obj::__register();
::zpp_nape::geom::ZPP_MarchPair_obj::__register();
::zpp_nape::geom::ZPP_MarchSpan_obj::__register();
::zpp_nape::geom::ZPP_GeomVertexIterator_obj::__register();
::zpp_nape::geom::ZPP_GeomVert_obj::__register();
::zpp_nape::geom::ZPP_Cutter_obj::__register();
::zpp_nape::geom::ZPP_CutInt_obj::__register();
::zpp_nape::geom::ZPP_CutVert_obj::__register();
::zpp_nape::geom::ZPP_ConvexRayResult_obj::__register();
::zpp_nape::geom::ZPP_Collide_obj::__register();
::zpp_nape::dynamics::ZPP_InteractionGroup_obj::__register();
::zpp_nape::dynamics::ZPP_InteractionFilter_obj::__register();
::zpp_nape::dynamics::ZPP_Contact_obj::__register();
::zpp_nape::dynamics::ZPP_ColArbiter_obj::__register();
::zpp_nape::dynamics::ZPP_FluidArbiter_obj::__register();
::zpp_nape::dynamics::ZPP_SensorArbiter_obj::__register();
::zpp_nape::dynamics::ZPP_Arbiter_obj::__register();
::zpp_nape::callbacks::ZPP_InteractionListener_obj::__register();
::zpp_nape::callbacks::ZPP_Listener_obj::__register();
::zpp_nape::callbacks::ZPP_CbSetPair_obj::__register();
::zpp_nape::ZPP_Const_obj::__register();
::scene::managment::SceneManager_obj::__register();
::zpp_nape::callbacks::ZPP_CbSet_obj::__register();
::zpp_nape::util::ZPP_Set_ZPP_CbSet_obj::__register();
::zpp_nape::space::ZPP_CallbackSet_obj::__register();
::zpp_nape::util::ZPP_ListenerList_obj::__register();
::zpp_nape::callbacks::ZPP_CbType_obj::__register();
::zpp_nape::util::ZPP_PubPool_obj::__register();
::zpp_nape::ZPP_ID_obj::__register();
::zpp_nape::util::ZPP_ShapeList_obj::__register();
::zpp_nape::phys::ZPP_Body_obj::__register();
::zpp_nape::util::ZPP_ConstraintList_obj::__register();
::zpp_nape::space::ZPP_Island_obj::__register();
::zpp_nape::util::ZPP_CompoundList_obj::__register();
::zpp_nape::util::ZPP_BodyList_obj::__register();
::zpp_nape::space::ZPP_AABBTree_obj::__register();
::zpp_nape::geom::ZPP_AABB_obj::__register();
::zpp_nape::space::ZPP_DynAABBPhase_obj::__register();
::zpp_nape::util::ZPP_Flags_obj::__register();
::zpp_nape::callbacks::ZPP_Callback_obj::__register();
::zpp_nape::geom::ZPP_Vec2_obj::__register();
::nape::shape::ShapeIterator_obj::__register();
::nape::shape::EdgeIterator_obj::__register();
::nape::shape::Shape_obj::__register();
::nape::phys::InteractorIterator_obj::__register();
::nape::phys::CompoundIterator_obj::__register();
::nape::phys::BodyIterator_obj::__register();
::nape::phys::Interactor_obj::__register();
::nape::geom::Vec2Iterator_obj::__register();
::nape::geom::RayResultIterator_obj::__register();
::nape::geom::GeomPolyIterator_obj::__register();
::nape::geom::ConvexResultIterator_obj::__register();
::nape::dynamics::InteractionGroupIterator_obj::__register();
::nape::dynamics::ContactIterator_obj::__register();
::nape::dynamics::ArbiterIterator_obj::__register();
::nape::constraint::ConstraintIterator_obj::__register();
::nape::constraint::Constraint_obj::__register();
::nape::callbacks::ListenerIterator_obj::__register();
::nape::callbacks::CbTypeIterator_obj::__register();
::nape::Config_obj::__register();
::kha::vr::VrInterfaceEmulated_obj::__register();
::kha::netsync::SyncBuilder_obj::__register();
::kha::netsync::Session_obj::__register();
::kha::netsync::ControllerBuilder_obj::__register();
::kha::math::Quaternion_obj::__register();
::kha::math::Matrix4_obj::__register();
::kha::math::Matrix3_obj::__register();
::kha::math::FastMatrix4_obj::__register();
::kha::math::FastMatrix3_obj::__register();
::kha::kore::graphics4::Graphics_obj::__register();
::kha::internal::BytesBlob_obj::__register();
::kha::input::Sensor_obj::__register();
::kha::input::Mouse_obj::__register();
::kha::input::Keyboard_obj::__register();
::kha::input::Gamepad_obj::__register();
::kha::graphics4::TextShaderPainter_obj::__register();
::kha::graphics4::ColoredShaderPainter_obj::__register();
::kha::graphics4::ImageShaderPainter_obj::__register();
::kha::graphics2::truetype::StbTruetype_obj::__register();
::kha::graphics2::Graphics_obj::__register();
::kha::audio2::ogg::vorbis::data::Setting_obj::__register();
::kha::audio2::ogg::vorbis::data::PageFlag_obj::__register();
::kha::audio2::ogg::vorbis::data::Header_obj::__register();
::kha::audio2::ogg::vorbis::data::Codebook_obj::__register();
::kha::audio2::ogg::vorbis::VorbisTools_obj::__register();
::kha::audio2::ogg::vorbis::VorbisDecodeState_obj::__register();
::kha::audio2::ogg::tools::Crc32_obj::__register();
::kha::audio2::Audio1_obj::__register();
::kha::_WindowOptions::WindowFeatures_Impl__obj::__register();
::kha::Window_obj::__register();
::kha::SystemImpl_obj::__register();
::kha::System_obj::__register();
::kha::Shaders_obj::__register();
::kha::Scheduler_obj::__register();
::kha::Display_obj::__register();
::kha::_Color::Color_Impl__obj::__register();
::kha::Assets_obj::__register();
::haxe::xml::Parser_obj::__register();
::haxe::Unserializer_obj::__register();
::haxe::Log_obj::__register();
::Xml_obj::__register();
::zpp_nape::util::ZPP_Math_obj::__register();
::zpp_nape::util::ZPP_MixVec2List_obj::__register();
::zpp_nape::util::ZNPList_RayResult_obj::__register();
::zpp_nape::util::ZNPList_ZPP_GeomPoly_obj::__register();
::zpp_nape::util::ZNPList_ConvexResult_obj::__register();
::zpp_nape::util::ZNPList_ZPP_InteractionGroup_obj::__register();
::zpp_nape::util::ZNPList_ZPP_AABBNode_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Edge_obj::__register();
::zpp_nape::util::ZNPList_ZPP_AABBPair_obj::__register();
::zpp_nape::util::ZNPList_ZPP_SimpleEvent_obj::__register();
::zpp_nape::util::ZNPList_ZPP_SimpleVert_obj::__register();
::zpp_nape::util::ZNPList_ZPP_GeomVert_obj::__register();
::zpp_nape::util::ZNPList_ZPP_PartitionedPoly_obj::__register();
::zpp_nape::util::ZNPList_ZPP_SimplifyP_obj::__register();
::zpp_nape::util::ZNPList_ZPP_PartitionVertex_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CutVert_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CutInt_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CbSetPair_obj::__register();
::zpp_nape::util::FastHash2_Hashable2_Boolfalse_obj::__register();
::zpp_nape::util::ZNPArray2_ZPP_MarchPair_obj::__register();
::zpp_nape::util::ZNPArray2_ZPP_GeomVert_obj::__register();
::zpp_nape::util::ZNPArray2_Float_obj::__register();
::zpp_nape::shape::ZPP_Polygon_obj::__register();
::zpp_nape::shape::ZPP_Circle_obj::__register();
::zpp_nape::phys::ZPP_Compound_obj::__register();
::zpp_nape::geom::ZPP_VecMath_obj::__register();
::zpp_nape::geom::ZPP_Vec3_obj::__register();
::zpp_nape::geom::ZPP_SweepDistance_obj::__register();
::zpp_nape::geom::ZPP_SimpleSweep_obj::__register();
::zpp_nape::geom::ZPP_MatMN_obj::__register();
::zpp_nape::geom::ZPP_GeomPoly_obj::__register();
::zpp_nape::geom::ZPP_Geom_obj::__register();
::zpp_nape::geom::ZPP_Convex_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Vec2_obj::__register();
::zpp_nape::dynamics::ZPP_SpaceArbiterList_obj::__register();
::zpp_nape::dynamics::ZPP_IContact_obj::__register();
::zpp_nape::constraint::ZPP_WeldJoint_obj::__register();
::zpp_nape::constraint::ZPP_UserBody_obj::__register();
::zpp_nape::constraint::ZPP_UserConstraint_obj::__register();
::zpp_nape::constraint::ZPP_PulleyJoint_obj::__register();
::zpp_nape::constraint::ZPP_PivotJoint_obj::__register();
::zpp_nape::constraint::ZPP_MotorJoint_obj::__register();
::zpp_nape::constraint::ZPP_LineJoint_obj::__register();
::zpp_nape::constraint::ZPP_DistanceJoint_obj::__register();
::zpp_nape::constraint::ZPP_CopyHelper_obj::__register();
::zpp_nape::constraint::ZPP_AngleJoint_obj::__register();
::zpp_nape::constraint::ZPP_Constraint_obj::__register();
::zpp_nape::callbacks::ZPP_OptionType_obj::__register();
::zpp_nape::callbacks::ZPP_ConstraintListener_obj::__register();
::zpp_nape::callbacks::ZPP_BodyListener_obj::__register();
::world::Stage_obj::__register();
::sys::io::FileInput_obj::__register();
::sys::io::File_obj::__register();
::sys::FileSystem_obj::__register();
::util::Timer_obj::__register();
::zpp_nape::space::ZPP_CbSetManager_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Listener_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CbSet_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Interactor_obj::__register();
::zpp_nape::util::ZNPList_ZPP_ConstraintListener_obj::__register();
::zpp_nape::util::ZNPList_ZPP_BodyListener_obj::__register();
::zpp_nape::util::ZNPList_ZPP_InteractionListener_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CbType_obj::__register();
::zpp_nape::util::ZNPList_ZPP_CallbackSet_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Shape_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Arbiter_obj::__register();
::zpp_nape::phys::ZPP_Interactor_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Constraint_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Component_obj::__register();
::zpp_nape::util::ZNPList_ZPP_SensorArbiter_obj::__register();
::zpp_nape::util::ZNPList_ZPP_FluidArbiter_obj::__register();
::zpp_nape::util::ZNPList_ZPP_ColArbiter_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Compound_obj::__register();
::zpp_nape::util::ZNPList_ZPP_Body_obj::__register();
::zpp_nape::space::ZPP_SweepPhase_obj::__register();
::zpp_nape::space::ZPP_Broadphase_obj::__register();
::zpp_nape::util::ZNPList_ZPP_ToiEvent_obj::__register();
::zpp_nape::space::ZPP_Space_obj::__register();
::scene::impl::PreloaderScene_obj::__register();
::scene::impl::GameScene_obj::__register();
::scene::Scene_obj::__register();
::nape::util::Debug_obj::__register();
::nape::space::Space_obj::__register();
::nape::space::Broadphase_obj::__register();
::nape::shape::ValidationResult_obj::__register();
::nape::shape::ShapeType_obj::__register();
::nape::shape::ShapeList_obj::__register();
::nape::shape::Polygon_obj::__register();
::nape::shape::EdgeList_obj::__register();
::nape::shape::Edge_obj::__register();
::nape::shape::Circle_obj::__register();
::nape::phys::Material_obj::__register();
::nape::phys::MassMode_obj::__register();
::nape::phys::InteractorList_obj::__register();
::nape::phys::InertiaMode_obj::__register();
::nape::phys::GravMassMode_obj::__register();
::nape::phys::FluidProperties_obj::__register();
::nape::phys::CompoundList_obj::__register();
::nape::phys::Compound_obj::__register();
::nape::phys::BodyType_obj::__register();
::nape::phys::BodyList_obj::__register();
::nape::phys::Body_obj::__register();
::nape::geom::Winding_obj::__register();
::nape::geom::Vec3_obj::__register();
::nape::geom::Vec2List_obj::__register();
::nape::geom::Vec2_obj::__register();
::nape::geom::RayResultList_obj::__register();
::nape::geom::RayResult_obj::__register();
::nape::geom::Ray_obj::__register();
::nape::geom::MatMN_obj::__register();
::nape::geom::Mat23_obj::__register();
::nape::geom::MarchingSquares_obj::__register();
::nape::geom::GeomVertexIterator_obj::__register();
::nape::geom::GeomPolyList_obj::__register();
::nape::geom::GeomPoly_obj::__register();
::nape::geom::Geom_obj::__register();
::nape::geom::ConvexResultList_obj::__register();
::nape::geom::ConvexResult_obj::__register();
::nape::geom::AABB_obj::__register();
::nape::dynamics::InteractionGroupList_obj::__register();
::nape::dynamics::InteractionGroup_obj::__register();
::nape::dynamics::InteractionFilter_obj::__register();
::nape::dynamics::FluidArbiter_obj::__register();
::nape::dynamics::ContactList_obj::__register();
::nape::dynamics::Contact_obj::__register();
::nape::dynamics::CollisionArbiter_obj::__register();
::nape::dynamics::ArbiterType_obj::__register();
::nape::dynamics::ArbiterList_obj::__register();
::nape::dynamics::Arbiter_obj::__register();
::nape::constraint::WeldJoint_obj::__register();
::nape::constraint::UserConstraint_obj::__register();
::nape::constraint::PulleyJoint_obj::__register();
::nape::constraint::PivotJoint_obj::__register();
::nape::constraint::MotorJoint_obj::__register();
::nape::constraint::LineJoint_obj::__register();
::nape::constraint::DistanceJoint_obj::__register();
::nape::constraint::ConstraintList_obj::__register();
::nape::constraint::AngleJoint_obj::__register();
::nape::callbacks::PreListener_obj::__register();
::nape::callbacks::PreFlag_obj::__register();
::nape::callbacks::PreCallback_obj::__register();
::nape::callbacks::OptionType_obj::__register();
::nape::callbacks::ListenerType_obj::__register();
::nape::callbacks::ListenerList_obj::__register();
::nape::callbacks::InteractionType_obj::__register();
::nape::callbacks::InteractionListener_obj::__register();
::nape::callbacks::InteractionCallback_obj::__register();
::nape::callbacks::ConstraintListener_obj::__register();
::nape::callbacks::ConstraintCallback_obj::__register();
::nape::callbacks::CbTypeList_obj::__register();
::nape::callbacks::CbType_obj::__register();
::nape::callbacks::CbEvent_obj::__register();
::nape::callbacks::BodyListener_obj::__register();
::nape::callbacks::Listener_obj::__register();
::nape::callbacks::BodyCallback_obj::__register();
::nape::callbacks::Callback_obj::__register();
::kha::vr::VrInterface_obj::__register();
::kha::vr::TimeWarpParms_obj::__register();
::kha::vr::TimeWarpImage_obj::__register();
::kha::vr::SensorState_obj::__register();
::kha::vr::PoseState_obj::__register();
::kha::vr::Pose_obj::__register();
::kha::netsync::State_obj::__register();
::kha::netsync::Network_obj::__register();
::kha::netsync::LocalClient_obj::__register();
::kha::netsync::Entity_obj::__register();
::kha::netsync::Client_obj::__register();
::kha::math::Vector4_obj::__register();
::kha::math::Vector3_obj::__register();
::kha::math::Vector2_obj::__register();
::kha::math::FastVector4_obj::__register();
::kha::math::FastVector3_obj::__register();
::kha::math::FastVector2_obj::__register();
::kha::kore::graphics5::Graphics_obj::__register();
::kha::kore::graphics4::TextureUnit_obj::__register();
::kha::kore::graphics4::Graphics2_obj::__register();
::kha::kore::graphics4::ConstantLocation_obj::__register();
::kha::kore::Video_obj::__register();
::kha::kore::Sound_obj::__register();
::kha::kore::Keyboard_obj::__register();
::kha::input::Surface_obj::__register();
::kha::input::Pen_obj::__register();
::kha::input::MouseImpl_obj::__register();
::kha::netsync::Controller_obj::__register();
::kha::graphics5::VertexShader_obj::__register();
::kha::graphics5::VertexBuffer_obj::__register();
::kha::graphics5::RenderTarget_obj::__register();
::kha::graphics5::PipelineState_obj::__register();
::kha::graphics5::PipelineStateBase_obj::__register();
::kha::graphics5::IndexBuffer_obj::__register();
::kha::graphics5::Graphics_obj::__register();
::kha::graphics5::FragmentShader_obj::__register();
::kha::graphics5::CommandList_obj::__register();
::kha::graphics4::VertexStructure_obj::__register();
::kha::graphics4::VertexShader_obj::__register();
::kha::graphics4::VertexElement_obj::__register();
::kha::graphics4::VertexBuffer_obj::__register();
::kha::graphics4::TextureUnit_obj::__register();
::kha::graphics4::TessellationEvaluationShader_obj::__register();
::kha::graphics4::TessellationControlShader_obj::__register();
::kha::graphics4::PipelineState_obj::__register();
::kha::graphics4::PipelineStateBase_obj::__register();
::kha::graphics4::IndexBuffer_obj::__register();
::kha::graphics4::Graphics2_obj::__register();
::kha::graphics4::Graphics_obj::__register();
::kha::graphics4::GeometryShader_obj::__register();
::kha::graphics4::FragmentShader_obj::__register();
::kha::graphics4::CubeMap_obj::__register();
::kha::graphics4::ConstantLocation_obj::__register();
::kha::graphics2::truetype::Stbtt__point_obj::__register();
::kha::graphics2::truetype::Stbtt__active_edge_obj::__register();
::kha::graphics2::truetype::Stbtt__edge_obj::__register();
::kha::graphics2::truetype::Stbtt__bitmap_obj::__register();
::kha::graphics2::truetype::Stbtt_vertex_obj::__register();
::kha::graphics2::truetype::Stbtt_fontinfo_obj::__register();
::kha::graphics2::truetype::Stbtt_pack_context_obj::__register();
::kha::graphics2::truetype::Stbtt_pack_range_obj::__register();
::kha::graphics2::truetype::Stbtt_packedchar_obj::__register();
::kha::graphics2::truetype::Stbtt_aligned_quad_obj::__register();
::kha::graphics2::truetype::Stbtt_bakedchar_obj::__register();
::kha::graphics2::truetype::Stbtt_temp_region_obj::__register();
::kha::graphics2::truetype::Stbtt_temp_font_v_metrics_obj::__register();
::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics_obj::__register();
::kha::graphics2::truetype::Stbtt_temp_rect_obj::__register();
::kha::graphics2::truetype::VectorOfIntPointer_obj::__register();
::kha::graphics2::Graphics1_obj::__register();
::kha::graphics1::Graphics_obj::__register();
::kha::audio2::ogg::vorbis::data::Residue_obj::__register();
::kha::audio2::ogg::vorbis::data::ReaderError_obj::__register();
::kha::audio2::ogg::vorbis::data::ProbedPage_obj::__register();
::kha::audio2::ogg::vorbis::data::Page_obj::__register();
::kha::audio2::ogg::vorbis::data::Mode_obj::__register();
::kha::audio2::ogg::vorbis::data::MappingChannel_obj::__register();
::kha::audio2::ogg::vorbis::data::Mapping_obj::__register();
::kha::audio2::ogg::vorbis::data::IntPoint_obj::__register();
::kha::audio2::ogg::vorbis::data::Floor1_obj::__register();
::kha::audio2::ogg::vorbis::data::Floor0_obj::__register();
::kha::audio2::ogg::vorbis::data::Floor_obj::__register();
::kha::audio2::ogg::vorbis::data::Comment_obj::__register();
::kha::audio2::ogg::vorbis::VorbisDecoder_obj::__register();
::kha::audio2::ogg::vorbis::Reader_obj::__register();
::kha::audio2::ogg::tools::Mdct_obj::__register();
::kha::audio2::ogg::tools::MathTools_obj::__register();
::kha::audio2::StreamChannel_obj::__register();
::kha::audio2::Buffer_obj::__register();
::kha::audio2::AudioChannel_obj::__register();
::kha::audio2::Audio_obj::__register();
::kha::audio1::AudioChannel_obj::__register();
::kha::arrays::_Uint32Array::Uint32Array_Impl__obj::__register();
::kha::arrays::Uint32ArrayPrivate_obj::__register();
::kha::arrays::_Float32Array::Float32Array_Impl__obj::__register();
::kha::arrays::Float32ArrayPrivate_obj::__register();
::kha::Worker_obj::__register();
::kha::WindowOptions_obj::__register();
::kha::Video_obj::__register();
::kha::SystemOptions_obj::__register();
::kha::Sound_obj::__register();
::kha::FrameTask_obj::__register();
::kha::TimeTask_obj::__register();
::kha::LoaderImpl_obj::__register();
::kha::Kravur_obj::__register();
::kha::KravurImage_obj::__register();
::kha::AlignedQuad_obj::__register();
::kha::Image_obj::__register();
::kha::Resource_obj::__register();
::kha::FramebufferOptions_obj::__register();
::kha::Framebuffer_obj::__register();
::kha::DisplayMode_obj::__register();
::kha::Canvas_obj::__register();
::kha::_Assets::VideoList_obj::__register();
::kha::_Assets::FontList_obj::__register();
::kha::_Assets::BlobList_obj::__register();
::kha::_Assets::SoundList_obj::__register();
::kha::_Assets::ImageList_obj::__register();
::haxe::xml::Printer_obj::__register();
::haxe::xml::XmlParserException_obj::__register();
::haxe::xml::_Access::NodeListAccess_Impl__obj::__register();
::haxe::xml::_Access::HasAttribAccess_Impl__obj::__register();
::haxe::xml::_Access::AttribAccess_Impl__obj::__register();
::haxe::xml::_Access::NodeAccess_Impl__obj::__register();
::haxe::iterators::MapKeyValueIterator_obj::__register();
::haxe::io::Path_obj::__register();
::haxe::io::FPHelper_obj::__register();
::haxe::io::Eof_obj::__register();
::haxe::io::BytesOutput_obj::__register();
::haxe::io::Output_obj::__register();
::haxe::io::BytesInput_obj::__register();
::haxe::io::Input_obj::__register();
::haxe::io::BytesBuffer_obj::__register();
::haxe::io::Bytes_obj::__register();
::haxe::ds::StringMap_obj::__register();
::haxe::ds::ObjectMap_obj::__register();
::haxe::ds::_List::ListNode_obj::__register();
::haxe::ds::List_obj::__register();
::haxe::ds::IntMap_obj::__register();
::haxe::_Unserializer::DefaultResolver_obj::__register();
::haxe::Timer_obj::__register();
::haxe::IMap_obj::__register();
::entity::group::TypedGroup_obj::__register();
::entity::element::user::Player_obj::__register();
::entity::element::ui::physic::PhysicText_obj::__register();
::entity::element::ui::physic::PhysicUI_obj::__register();
::entity::element::ui::Text_obj::__register();
::entity::element::item::Sprite_obj::__register();
::entity::element::Entity_obj::__register();
::entity::element::IEntity_obj::__register();
::cpp::vm::Thread_obj::__register();
::cpp::vm::Mutex_obj::__register();
::Type_obj::__register();
::StringTools_obj::__register();
::StringBuf_obj::__register();
::Std_obj::__register();
::Reflect_obj::__register();
::Project_obj::__register();
::Main_obj::__register();
::Lambda_obj::__register();
::EReg_obj::__register();
::Date_obj::__register();
::sys::io::FileSeek_obj::__boot();
::kha::input::SensorType_obj::__boot();
::kha::graphics4::Usage_obj::__boot();
::kha::graphics4::TextureFormat_obj::__boot();
::kha::graphics4::TextureFilter_obj::__boot();
::kha::graphics4::TextureAddressing_obj::__boot();
::kha::graphics4::TexDir_obj::__boot();
::kha::graphics4::StencilValue_obj::__boot();
::kha::graphics4::StencilAction_obj::__boot();
::kha::graphics4::MipMapFilter_obj::__boot();
::kha::graphics4::CullMode_obj::__boot();
::kha::graphics4::CompareMode_obj::__boot();
::kha::graphics4::BlendingOperation_obj::__boot();
::kha::graphics4::BlendingFactor_obj::__boot();
::kha::graphics2::ImageScaleQuality_obj::__boot();
::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::__boot();
::kha::audio2::ogg::vorbis::_VorbisDecodeState::FindPageResult_obj::__boot();
::kha::ScreenRotation_obj::__boot();
::haxe::io::Error_obj::__boot();
::haxe::io::Encoding_obj::__boot();
::haxe::Log_obj::__boot();
::Xml_obj::__boot();
::haxe::Unserializer_obj::__boot();
::haxe::xml::Parser_obj::__boot();
::kha::Assets_obj::__boot();
::kha::_Color::Color_Impl__obj::__boot();
::kha::Display_obj::__boot();
::kha::Scheduler_obj::__boot();
::kha::Shaders_obj::__boot();
::kha::System_obj::__boot();
::kha::SystemImpl_obj::__boot();
::kha::Window_obj::__boot();
::kha::_WindowOptions::WindowFeatures_Impl__obj::__boot();
::kha::audio2::Audio1_obj::__boot();
::kha::audio2::ogg::tools::Crc32_obj::__boot();
::kha::audio2::ogg::vorbis::VorbisDecodeState_obj::__boot();
::kha::audio2::ogg::vorbis::VorbisTools_obj::__boot();
::kha::audio2::ogg::vorbis::data::Codebook_obj::__boot();
::kha::audio2::ogg::vorbis::data::Header_obj::__boot();
::kha::audio2::ogg::vorbis::data::PageFlag_obj::__boot();
::kha::audio2::ogg::vorbis::data::Setting_obj::__boot();
::kha::graphics2::Graphics_obj::__boot();
::kha::graphics2::truetype::StbTruetype_obj::__boot();
::kha::graphics4::ImageShaderPainter_obj::__boot();
::kha::graphics4::ColoredShaderPainter_obj::__boot();
::kha::graphics4::TextShaderPainter_obj::__boot();
::kha::input::Gamepad_obj::__boot();
::kha::input::Keyboard_obj::__boot();
::kha::input::Mouse_obj::__boot();
::kha::input::Sensor_obj::__boot();
::kha::internal::BytesBlob_obj::__boot();
::kha::kore::graphics4::Graphics_obj::__boot();
::kha::math::FastMatrix3_obj::__boot();
::kha::math::FastMatrix4_obj::__boot();
::kha::math::Matrix3_obj::__boot();
::kha::math::Matrix4_obj::__boot();
::kha::math::Quaternion_obj::__boot();
::kha::netsync::ControllerBuilder_obj::__boot();
::kha::netsync::Session_obj::__boot();
::kha::netsync::SyncBuilder_obj::__boot();
::kha::vr::VrInterfaceEmulated_obj::__boot();
::nape::Config_obj::__boot();
::nape::callbacks::CbTypeIterator_obj::__boot();
::nape::callbacks::ListenerIterator_obj::__boot();
::nape::constraint::Constraint_obj::__boot();
::nape::constraint::ConstraintIterator_obj::__boot();
::nape::dynamics::ArbiterIterator_obj::__boot();
::nape::dynamics::ContactIterator_obj::__boot();
::nape::dynamics::InteractionGroupIterator_obj::__boot();
::nape::geom::ConvexResultIterator_obj::__boot();
::nape::geom::GeomPolyIterator_obj::__boot();
::nape::geom::RayResultIterator_obj::__boot();
::nape::geom::Vec2Iterator_obj::__boot();
::nape::phys::Interactor_obj::__boot();
::nape::phys::BodyIterator_obj::__boot();
::nape::phys::CompoundIterator_obj::__boot();
::nape::phys::InteractorIterator_obj::__boot();
::nape::shape::Shape_obj::__boot();
::nape::shape::EdgeIterator_obj::__boot();
::nape::shape::ShapeIterator_obj::__boot();
::zpp_nape::geom::ZPP_Vec2_obj::__boot();
::zpp_nape::callbacks::ZPP_Callback_obj::__boot();
::zpp_nape::util::ZPP_Flags_obj::__boot();
::zpp_nape::space::ZPP_DynAABBPhase_obj::__boot();
::zpp_nape::geom::ZPP_AABB_obj::__boot();
::zpp_nape::space::ZPP_AABBTree_obj::__boot();
::zpp_nape::util::ZPP_BodyList_obj::__boot();
::zpp_nape::util::ZPP_CompoundList_obj::__boot();
::zpp_nape::space::ZPP_Island_obj::__boot();
::zpp_nape::util::ZPP_ConstraintList_obj::__boot();
::zpp_nape::phys::ZPP_Body_obj::__boot();
::zpp_nape::util::ZPP_ShapeList_obj::__boot();
::zpp_nape::ZPP_ID_obj::__boot();
::zpp_nape::util::ZPP_PubPool_obj::__boot();
::zpp_nape::callbacks::ZPP_CbType_obj::__boot();
::zpp_nape::util::ZPP_ListenerList_obj::__boot();
::zpp_nape::space::ZPP_CallbackSet_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_CbSet_obj::__boot();
::zpp_nape::callbacks::ZPP_CbSet_obj::__boot();
::scene::managment::SceneManager_obj::__boot();
::zpp_nape::ZPP_Const_obj::__boot();
::zpp_nape::callbacks::ZPP_CbSetPair_obj::__boot();
::zpp_nape::callbacks::ZPP_Listener_obj::__boot();
::zpp_nape::callbacks::ZPP_InteractionListener_obj::__boot();
::zpp_nape::dynamics::ZPP_Arbiter_obj::__boot();
::zpp_nape::dynamics::ZPP_SensorArbiter_obj::__boot();
::zpp_nape::dynamics::ZPP_FluidArbiter_obj::__boot();
::zpp_nape::dynamics::ZPP_ColArbiter_obj::__boot();
::zpp_nape::dynamics::ZPP_Contact_obj::__boot();
::zpp_nape::dynamics::ZPP_InteractionFilter_obj::__boot();
::zpp_nape::dynamics::ZPP_InteractionGroup_obj::__boot();
::zpp_nape::geom::ZPP_Collide_obj::__boot();
::zpp_nape::geom::ZPP_ConvexRayResult_obj::__boot();
::zpp_nape::geom::ZPP_CutVert_obj::__boot();
::zpp_nape::geom::ZPP_CutInt_obj::__boot();
::zpp_nape::geom::ZPP_Cutter_obj::__boot();
::zpp_nape::geom::ZPP_GeomVert_obj::__boot();
::zpp_nape::geom::ZPP_GeomVertexIterator_obj::__boot();
::zpp_nape::geom::ZPP_MarchSpan_obj::__boot();
::zpp_nape::geom::ZPP_MarchPair_obj::__boot();
::zpp_nape::geom::ZPP_MarchingSquares_obj::__boot();
::zpp_nape::geom::ZPP_Mat23_obj::__boot();
::zpp_nape::geom::ZPP_Monotone_obj::__boot();
::zpp_nape::geom::ZPP_PartitionVertex_obj::__boot();
::zpp_nape::geom::ZPP_PartitionedPoly_obj::__boot();
::zpp_nape::geom::ZPP_Ray_obj::__boot();
::zpp_nape::geom::ZPP_SimpleVert_obj::__boot();
::zpp_nape::geom::ZPP_SimpleSeg_obj::__boot();
::zpp_nape::geom::ZPP_SimpleEvent_obj::__boot();
::zpp_nape::geom::ZPP_Simple_obj::__boot();
::zpp_nape::geom::ZPP_SimplifyV_obj::__boot();
::zpp_nape::geom::ZPP_SimplifyP_obj::__boot();
::zpp_nape::geom::ZPP_Simplify_obj::__boot();
::zpp_nape::geom::ZPP_ToiEvent_obj::__boot();
::zpp_nape::geom::ZPP_PartitionPair_obj::__boot();
::zpp_nape::geom::ZPP_Triangular_obj::__boot();
::zpp_nape::phys::ZPP_FluidProperties_obj::__boot();
::zpp_nape::phys::ZPP_Material_obj::__boot();
::zpp_nape::shape::ZPP_Shape_obj::__boot();
::zpp_nape::shape::ZPP_Edge_obj::__boot();
::zpp_nape::space::ZPP_AABBNode_obj::__boot();
::zpp_nape::space::ZPP_AABBPair_obj::__boot();
::zpp_nape::space::ZPP_Component_obj::__boot();
::zpp_nape::space::ZPP_SweepData_obj::__boot();
::zpp_nape::util::Hashable2_Boolfalse_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CbType_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CallbackSet_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Shape_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Body_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Constraint_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Compound_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Arbiter_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CbSet_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Interactor_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_BodyListener_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CbSetPair_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_ConstraintListener_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CutInt_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_CutVert_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_PartitionVertex_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_SimplifyP_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_PartitionedPoly_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_GeomVert_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_SimpleVert_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_SimpleEvent_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Vec2_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_AABBPair_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Edge_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_AABBNode_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Component_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_FluidArbiter_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_SensorArbiter_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_Listener_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_ColArbiter_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_ToiEvent_obj::__boot();
::zpp_nape::util::ZNPNode_ConvexResult_obj::__boot();
::zpp_nape::util::ZNPNode_ZPP_GeomPoly_obj::__boot();
::zpp_nape::util::ZNPNode_RayResult_obj::__boot();
::zpp_nape::util::ZPP_InteractorList_obj::__boot();
::zpp_nape::util::ZPP_CbTypeList_obj::__boot();
::zpp_nape::util::ZPP_Vec2List_obj::__boot();
::zpp_nape::util::ZPP_GeomPolyList_obj::__boot();
::zpp_nape::util::ZPP_RayResultList_obj::__boot();
::zpp_nape::util::ZPP_ConvexResultList_obj::__boot();
::zpp_nape::util::ZPP_EdgeList_obj::__boot();
::zpp_nape::util::ZPP_InteractionGroupList_obj::__boot();
::zpp_nape::util::ZPP_ArbiterList_obj::__boot();
::zpp_nape::util::ZPP_ContactList_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_Body_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_CbSetPair_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_PartitionVertex_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_PartitionPair_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_SimpleVert_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_SimpleSeg_obj::__boot();
::zpp_nape::util::ZPP_Set_ZPP_SimpleEvent_obj::__boot();
::zui::Id_obj::__boot();
::zui::Themes_obj::__boot();
::zui::Zui_obj::__boot();
::zui::Handle_obj::__boot();
}

