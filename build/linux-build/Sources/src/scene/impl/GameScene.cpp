// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_entity_element_Entity
#include <hxinc/entity/element/Entity.h>
#endif
#ifndef INCLUDED_entity_element_IEntity
#include <hxinc/entity/element/IEntity.h>
#endif
#ifndef INCLUDED_entity_element_ui_physic_PhysicText
#include <hxinc/entity/element/ui/physic/PhysicText.h>
#endif
#ifndef INCLUDED_entity_element_ui_physic_PhysicUI
#include <hxinc/entity/element/ui/physic/PhysicUI.h>
#endif
#ifndef INCLUDED_entity_element_user_Player
#include <hxinc/entity/element/user/Player.h>
#endif
#ifndef INCLUDED_entity_group_TypedGroup
#include <hxinc/entity/group/TypedGroup.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <hxinc/kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha__Assets_FontList
#include <hxinc/kha/_Assets/FontList.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_scene_Scene
#include <hxinc/scene/Scene.h>
#endif
#ifndef INCLUDED_scene_impl_GameScene
#include <hxinc/scene/impl/GameScene.h>
#endif
#ifndef INCLUDED_world_Stage
#include <hxinc/world/Stage.h>
#endif
#ifndef INCLUDED_zui_Handle
#include <hxinc/zui/Handle.h>
#endif
#ifndef INCLUDED_zui_Zui
#include <hxinc/zui/Zui.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a7762339b24f79cc_25_new,"scene.impl.GameScene","new",0xfcf549a0,"scene.impl.GameScene.new","scene/impl/GameScene.hx",25,0x5f043630)
HX_LOCAL_STACK_FRAME(_hx_pos_a7762339b24f79cc_50_draw,"scene.impl.GameScene","draw",0x5318cac4,"scene.impl.GameScene.draw","scene/impl/GameScene.hx",50,0x5f043630)
HX_LOCAL_STACK_FRAME(_hx_pos_a7762339b24f79cc_70_update,"scene.impl.GameScene","update",0x8a2354c9,"scene.impl.GameScene.update","scene/impl/GameScene.hx",70,0x5f043630)
HX_LOCAL_STACK_FRAME(_hx_pos_a7762339b24f79cc_74_destroy,"scene.impl.GameScene","destroy",0xdb7d463a,"scene.impl.GameScene.destroy","scene/impl/GameScene.hx",74,0x5f043630)
namespace scene{
namespace impl{

void GameScene_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_a7762339b24f79cc_25_new)
HXLINE(  68)		this->loadTime = ((Float)2.0);
HXLINE(  33)		this->playerGroup =  ::entity::group::TypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  34)		 ::entity::group::TypedGroup _hx_tmp = this->playerGroup;
HXDLIN(  34)		_hx_tmp->add( ::entity::element::user::Player_obj::__alloc( HX_CTX ,( (Float)(250) ),( (Float)(250) )));
HXLINE(  35)		 ::entity::group::TypedGroup _hx_tmp1 = this->playerGroup;
HXDLIN(  35)		_hx_tmp1->add( ::entity::element::user::Player_obj::__alloc( HX_CTX ,( (Float)(10) ),( (Float)(10) )));
HXLINE(  37)		this->textGroup =  ::entity::group::TypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  38)		 ::entity::group::TypedGroup _hx_tmp2 = this->textGroup;
HXDLIN(  38)		_hx_tmp2->add( ::entity::element::ui::physic::PhysicText_obj::__alloc( HX_CTX ,( (Float)(100) ),( (Float)(100) ),HX_("I \xd0""\xa4""\xd0""\xb8""\xd0""\xb7""\xd0""\xb8""\xd0""\xba""\xd0""\xb0""",4c,bc,5b,e8),24,null()));
HXLINE(  44)		this->currentStage =  ::world::Stage_obj::__alloc( HX_CTX ,HX_("l0_xml",1c,83,ed,10));
HXLINE(  45)		this->ui =  ::zui::Zui_obj::__alloc( HX_CTX , ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("scaleFactor",f9,5e,11,d0),((Float)1.0))
            			->setFixed(1,HX_("khaWindowId",2f,bc,2f,40),0)
            			->setFixed(2,HX_("font",cf,5d,c0,43),::kha::Assets_obj::fonts->OpenSans)));
            	}

Dynamic GameScene_obj::__CreateEmpty() { return new GameScene_obj; }

void *GameScene_obj::_hx_vtable = 0;

Dynamic GameScene_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GameScene_obj > _hx_result = new GameScene_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameScene_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x11dc62da;
}

static ::scene::Scene_obj _hx_scene_impl_GameScene__hx_scene_Scene= {
	( void (hx::Object::*)( ::kha::graphics2::Graphics))&::scene::impl::GameScene_obj::draw,
	( void (hx::Object::*)(Float))&::scene::impl::GameScene_obj::update,
	( void (hx::Object::*)())&::scene::impl::GameScene_obj::destroy,
};

void *GameScene_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x199446a0: return &_hx_scene_impl_GameScene__hx_scene_Scene;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void GameScene_obj::draw( ::kha::graphics2::Graphics gr){
            	HX_STACKFRAME(&_hx_pos_a7762339b24f79cc_50_draw)
HXLINE(  51)		gr->begin(true,this->bgColor);
HXLINE(  52)		gr->set_font(::kha::Assets_obj::fonts->OpenSans);
HXLINE(  55)		this->playerGroup->draw(gr);
HXLINE(  57)		gr->end();
HXLINE(  59)		this->ui->begin(gr);
HXLINE(  60)		 ::zui::Zui _hx_tmp = this->ui;
HXDLIN(  60)		if (_hx_tmp->window(::zui::Handle_obj::global->nest(0,null()),10,10,240,600,true)) {
HXLINE(  61)			 ::zui::Zui _hx_tmp1 = this->ui;
HXDLIN(  61)			if (_hx_tmp1->panel(::zui::Handle_obj::global->nest(1, ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("selected",5b,2a,6d,b1),true))),HX_("\xd0""\x9f""\xd0""\xb0""\xd0""\xbd""\xd0""\xb5""\xd0""\xbb""\xd1""\x8c""",c7,b3,49,d0),null(),null())) {
HXLINE(  62)				 ::zui::Zui _hx_tmp2 = this->ui;
HXDLIN(  62)				_hx_tmp2->textInput(::zui::Handle_obj::global->nest(2, ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("text",ad,cc,f9,4c),HX_("Hello",f2,a2,ee,b7)))),HX_("Input",ea,33,4b,51),null());
            			}
            		}
HXLINE(  65)		this->ui->end(null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameScene_obj,draw,(void))

void GameScene_obj::update(Float dt){
            	HX_STACKFRAME(&_hx_pos_a7762339b24f79cc_70_update)
HXLINE(  71)		this->playerGroup->update(dt);
HXLINE(  72)		this->textGroup->update(dt);
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameScene_obj,update,(void))

void GameScene_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_a7762339b24f79cc_74_destroy)
            	}


HX_DEFINE_DYNAMIC_FUNC0(GameScene_obj,destroy,(void))


hx::ObjectPtr< GameScene_obj > GameScene_obj::__new() {
	hx::ObjectPtr< GameScene_obj > __this = new GameScene_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< GameScene_obj > GameScene_obj::__alloc(hx::Ctx *_hx_ctx) {
	GameScene_obj *__this = (GameScene_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GameScene_obj), true, "scene.impl.GameScene"));
	*(void **)__this = GameScene_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GameScene_obj::GameScene_obj()
{
}

void GameScene_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GameScene);
	HX_MARK_MEMBER_NAME(currentStage,"currentStage");
	HX_MARK_MEMBER_NAME(bgColor,"bgColor");
	HX_MARK_MEMBER_NAME(playerGroup,"playerGroup");
	HX_MARK_MEMBER_NAME(textGroup,"textGroup");
	HX_MARK_MEMBER_NAME(ui,"ui");
	HX_MARK_MEMBER_NAME(loadTime,"loadTime");
	HX_MARK_END_CLASS();
}

void GameScene_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(currentStage,"currentStage");
	HX_VISIT_MEMBER_NAME(bgColor,"bgColor");
	HX_VISIT_MEMBER_NAME(playerGroup,"playerGroup");
	HX_VISIT_MEMBER_NAME(textGroup,"textGroup");
	HX_VISIT_MEMBER_NAME(ui,"ui");
	HX_VISIT_MEMBER_NAME(loadTime,"loadTime");
}

hx::Val GameScene_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ui") ) { return hx::Val( ui ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bgColor") ) { return hx::Val( bgColor ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"loadTime") ) { return hx::Val( loadTime ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"textGroup") ) { return hx::Val( textGroup ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"playerGroup") ) { return hx::Val( playerGroup ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentStage") ) { return hx::Val( currentStage ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val GameScene_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ui") ) { ui=inValue.Cast<  ::zui::Zui >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bgColor") ) { bgColor=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"loadTime") ) { loadTime=inValue.Cast< Float >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"textGroup") ) { textGroup=inValue.Cast<  ::entity::group::TypedGroup >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"playerGroup") ) { playerGroup=inValue.Cast<  ::entity::group::TypedGroup >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentStage") ) { currentStage=inValue.Cast<  ::world::Stage >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GameScene_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("currentStage",c5,4f,17,cb));
	outFields->push(HX_("bgColor",5e,81,83,f7));
	outFields->push(HX_("playerGroup",1e,58,d3,a0));
	outFields->push(HX_("textGroup",52,43,e2,32));
	outFields->push(HX_("ui",54,66,00,00));
	outFields->push(HX_("loadTime",53,9d,9c,bd));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo GameScene_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::world::Stage */ ,(int)offsetof(GameScene_obj,currentStage),HX_("currentStage",c5,4f,17,cb)},
	{hx::fsInt,(int)offsetof(GameScene_obj,bgColor),HX_("bgColor",5e,81,83,f7)},
	{hx::fsObject /*  ::entity::group::TypedGroup */ ,(int)offsetof(GameScene_obj,playerGroup),HX_("playerGroup",1e,58,d3,a0)},
	{hx::fsObject /*  ::entity::group::TypedGroup */ ,(int)offsetof(GameScene_obj,textGroup),HX_("textGroup",52,43,e2,32)},
	{hx::fsObject /*  ::zui::Zui */ ,(int)offsetof(GameScene_obj,ui),HX_("ui",54,66,00,00)},
	{hx::fsFloat,(int)offsetof(GameScene_obj,loadTime),HX_("loadTime",53,9d,9c,bd)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *GameScene_obj_sStaticStorageInfo = 0;
#endif

static ::String GameScene_obj_sMemberFields[] = {
	HX_("currentStage",c5,4f,17,cb),
	HX_("bgColor",5e,81,83,f7),
	HX_("playerGroup",1e,58,d3,a0),
	HX_("textGroup",52,43,e2,32),
	HX_("ui",54,66,00,00),
	HX_("draw",04,2c,70,42),
	HX_("loadTime",53,9d,9c,bd),
	HX_("update",09,86,05,87),
	HX_("destroy",fa,2c,86,24),
	::String(null()) };

hx::Class GameScene_obj::__mClass;

void GameScene_obj::__register()
{
	GameScene_obj _hx_dummy;
	GameScene_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("scene.impl.GameScene",ae,39,70,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(GameScene_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< GameScene_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameScene_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameScene_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace scene
} // end namespace impl
