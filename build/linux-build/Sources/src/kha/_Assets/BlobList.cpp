// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <hxinc/Reflect.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <hxinc/haxe/Log.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha__Assets_BlobList
#include <hxinc/kha/_Assets/BlobList.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <hxinc/kha/internal/BytesBlob.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_37d7e3a43e386237_34_new,"kha._Assets.BlobList","new",0xb2850123,"kha._Assets.BlobList.new","kha/Assets.hx",34,0x66f27110)
static const ::String _hx_array_data_cac733b1_1[] = {
	HX_("OpenSans_sfd",4f,71,f4,ea),HX_("l0_xml",1c,83,ed,10),
};
static const ::String _hx_array_data_cac733b1_2[] = {
	HX_("l0.xml",ad,0e,8a,f0),
};
static const ::String _hx_array_data_cac733b1_3[] = {
	HX_("OpenSans.sfd",e0,fc,90,ca),
};
HX_LOCAL_STACK_FRAME(_hx_pos_37d7e3a43e386237_40_get,"kha._Assets.BlobList","get",0xb27fb159,"kha._Assets.BlobList.get","kha/Assets.hx",40,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_89b6f8aff09b9782_138_OpenSans_sfdLoad,"kha._Assets.BlobList","OpenSans_sfdLoad",0x3890dc72,"kha._Assets.BlobList.OpenSans_sfdLoad","kha/internal/AssetsBuilder.hx",138,0x6901246d)
HX_LOCAL_STACK_FRAME(_hx_pos_89b6f8aff09b9782_182_OpenSans_sfdUnload,"kha._Assets.BlobList","OpenSans_sfdUnload",0x30f40e4b,"kha._Assets.BlobList.OpenSans_sfdUnload","kha/internal/AssetsBuilder.hx",182,0x6901246d)
HX_LOCAL_STACK_FRAME(_hx_pos_89b6f8aff09b9782_138_l0_xmlLoad,"kha._Assets.BlobList","l0_xmlLoad",0xc7f5c4ff,"kha._Assets.BlobList.l0_xmlLoad","kha/internal/AssetsBuilder.hx",138,0x6901246d)
HX_LOCAL_STACK_FRAME(_hx_pos_89b6f8aff09b9782_182_l0_xmlUnload,"kha._Assets.BlobList","l0_xmlUnload",0x11cdf418,"kha._Assets.BlobList.l0_xmlUnload","kha/internal/AssetsBuilder.hx",182,0x6901246d)
namespace kha{
namespace _Assets{

void BlobList_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_37d7e3a43e386237_34_new)
HXLINE( 198)		this->names = ::Array_obj< ::String >::fromData( _hx_array_data_cac733b1_1,2);
HXLINE( 122)		this->l0_xmlDescription =  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::fromData( _hx_array_data_cac733b1_2,1))
            			->setFixed(1,HX_("name",4b,72,ff,48),HX_("l0_xml",1c,83,ed,10))
            			->setFixed(2,HX_("type",ba,f2,08,4d),HX_("blob",5d,3d,19,41)));
HXLINE( 113)		this->l0_xmlName = HX_("l0_xml",1c,83,ed,10);
HXLINE(  85)		this->l0_xml = null();
HXLINE( 122)		this->OpenSans_sfdDescription =  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::fromData( _hx_array_data_cac733b1_3,1))
            			->setFixed(1,HX_("name",4b,72,ff,48),HX_("OpenSans_sfd",4f,71,f4,ea))
            			->setFixed(2,HX_("type",ba,f2,08,4d),HX_("blob",5d,3d,19,41)));
HXLINE( 113)		this->OpenSans_sfdName = HX_("OpenSans_sfd",4f,71,f4,ea);
HXLINE(  85)		this->OpenSans_sfd = null();
            	}

Dynamic BlobList_obj::__CreateEmpty() { return new BlobList_obj; }

void *BlobList_obj::_hx_vtable = 0;

Dynamic BlobList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BlobList_obj > _hx_result = new BlobList_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BlobList_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3d5a6b99;
}

 ::kha::internal::BytesBlob BlobList_obj::get(::String name){
            	HX_STACKFRAME(&_hx_pos_37d7e3a43e386237_40_get)
HXDLIN(  40)		return ( ( ::kha::internal::BytesBlob)(::Reflect_obj::field(hx::ObjectPtr<OBJ_>(this),name)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(BlobList_obj,get,return )

void BlobList_obj::OpenSans_sfdLoad( ::Dynamic done, ::Dynamic failure){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::internal::BytesBlob blob){
            			HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_OpenSans_sfdLoad)
HXDLIN( 138)			done();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_OpenSans_sfdLoad)
HXDLIN( 138)		 ::Dynamic _hx_tmp;
HXDLIN( 138)		if (hx::IsNotNull( failure )) {
HXDLIN( 138)			_hx_tmp = failure;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,infos, ::Dynamic,f) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_OpenSans_sfdLoad)
HXDLIN( 138)				f(v,infos);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXDLIN( 138)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 138)			 ::Dynamic infos = hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),138,HX_("kha._Assets.BlobList",b1,33,c7,ca),HX_("OpenSans_sfdLoad",15,8b,b9,6b));
HXDLIN( 138)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(infos,f));
            		}
HXDLIN( 138)		::kha::Assets_obj::loadBlob(HX_("OpenSans_sfd",4f,71,f4,ea), ::Dynamic(new _hx_Closure_1(done)),_hx_tmp,hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),138,HX_("kha._Assets.BlobList",b1,33,c7,ca),HX_("OpenSans_sfdLoad",15,8b,b9,6b)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(BlobList_obj,OpenSans_sfdLoad,(void))

void BlobList_obj::OpenSans_sfdUnload(){
            	HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_182_OpenSans_sfdUnload)
HXLINE( 183)		this->OpenSans_sfd->unload();
HXLINE( 184)		this->OpenSans_sfd = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BlobList_obj,OpenSans_sfdUnload,(void))

void BlobList_obj::l0_xmlLoad( ::Dynamic done, ::Dynamic failure){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::internal::BytesBlob blob){
            			HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_l0_xmlLoad)
HXDLIN( 138)			done();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_l0_xmlLoad)
HXDLIN( 138)		 ::Dynamic _hx_tmp;
HXDLIN( 138)		if (hx::IsNotNull( failure )) {
HXDLIN( 138)			_hx_tmp = failure;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,infos, ::Dynamic,f) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_138_l0_xmlLoad)
HXDLIN( 138)				f(v,infos);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXDLIN( 138)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 138)			 ::Dynamic infos = hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),138,HX_("kha._Assets.BlobList",b1,33,c7,ca),HX_("l0_xmlLoad",62,07,34,5b));
HXDLIN( 138)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(infos,f));
            		}
HXDLIN( 138)		::kha::Assets_obj::loadBlob(HX_("l0_xml",1c,83,ed,10), ::Dynamic(new _hx_Closure_1(done)),_hx_tmp,hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),138,HX_("kha._Assets.BlobList",b1,33,c7,ca),HX_("l0_xmlLoad",62,07,34,5b)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(BlobList_obj,l0_xmlLoad,(void))

void BlobList_obj::l0_xmlUnload(){
            	HX_STACKFRAME(&_hx_pos_89b6f8aff09b9782_182_l0_xmlUnload)
HXLINE( 183)		this->l0_xml->unload();
HXLINE( 184)		this->l0_xml = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BlobList_obj,l0_xmlUnload,(void))


hx::ObjectPtr< BlobList_obj > BlobList_obj::__new() {
	hx::ObjectPtr< BlobList_obj > __this = new BlobList_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< BlobList_obj > BlobList_obj::__alloc(hx::Ctx *_hx_ctx) {
	BlobList_obj *__this = (BlobList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BlobList_obj), true, "kha._Assets.BlobList"));
	*(void **)__this = BlobList_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

BlobList_obj::BlobList_obj()
{
}

void BlobList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BlobList);
	HX_MARK_MEMBER_NAME(OpenSans_sfd,"OpenSans_sfd");
	HX_MARK_MEMBER_NAME(OpenSans_sfdName,"OpenSans_sfdName");
	HX_MARK_MEMBER_NAME(OpenSans_sfdDescription,"OpenSans_sfdDescription");
	HX_MARK_MEMBER_NAME(l0_xml,"l0_xml");
	HX_MARK_MEMBER_NAME(l0_xmlName,"l0_xmlName");
	HX_MARK_MEMBER_NAME(l0_xmlDescription,"l0_xmlDescription");
	HX_MARK_MEMBER_NAME(names,"names");
	HX_MARK_END_CLASS();
}

void BlobList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(OpenSans_sfd,"OpenSans_sfd");
	HX_VISIT_MEMBER_NAME(OpenSans_sfdName,"OpenSans_sfdName");
	HX_VISIT_MEMBER_NAME(OpenSans_sfdDescription,"OpenSans_sfdDescription");
	HX_VISIT_MEMBER_NAME(l0_xml,"l0_xml");
	HX_VISIT_MEMBER_NAME(l0_xmlName,"l0_xmlName");
	HX_VISIT_MEMBER_NAME(l0_xmlDescription,"l0_xmlDescription");
	HX_VISIT_MEMBER_NAME(names,"names");
}

hx::Val BlobList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"names") ) { return hx::Val( names ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"l0_xml") ) { return hx::Val( l0_xml ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"l0_xmlName") ) { return hx::Val( l0_xmlName ); }
		if (HX_FIELD_EQ(inName,"l0_xmlLoad") ) { return hx::Val( l0_xmlLoad_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"OpenSans_sfd") ) { return hx::Val( OpenSans_sfd ); }
		if (HX_FIELD_EQ(inName,"l0_xmlUnload") ) { return hx::Val( l0_xmlUnload_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"OpenSans_sfdName") ) { return hx::Val( OpenSans_sfdName ); }
		if (HX_FIELD_EQ(inName,"OpenSans_sfdLoad") ) { return hx::Val( OpenSans_sfdLoad_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"l0_xmlDescription") ) { return hx::Val( l0_xmlDescription ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"OpenSans_sfdUnload") ) { return hx::Val( OpenSans_sfdUnload_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"OpenSans_sfdDescription") ) { return hx::Val( OpenSans_sfdDescription ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BlobList_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"names") ) { names=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"l0_xml") ) { l0_xml=inValue.Cast<  ::kha::internal::BytesBlob >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"l0_xmlName") ) { l0_xmlName=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"OpenSans_sfd") ) { OpenSans_sfd=inValue.Cast<  ::kha::internal::BytesBlob >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"OpenSans_sfdName") ) { OpenSans_sfdName=inValue.Cast< ::String >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"l0_xmlDescription") ) { l0_xmlDescription=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"OpenSans_sfdDescription") ) { OpenSans_sfdDescription=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BlobList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("OpenSans_sfd",4f,71,f4,ea));
	outFields->push(HX_("OpenSans_sfdName",3a,63,01,6d));
	outFields->push(HX_("OpenSans_sfdDescription",ed,a3,51,de));
	outFields->push(HX_("l0_xml",1c,83,ed,10));
	outFields->push(HX_("l0_xmlName",87,df,7b,5c));
	outFields->push(HX_("l0_xmlDescription",40,fb,8a,d5));
	outFields->push(HX_("names",c8,8f,84,96));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo BlobList_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::kha::internal::BytesBlob */ ,(int)offsetof(BlobList_obj,OpenSans_sfd),HX_("OpenSans_sfd",4f,71,f4,ea)},
	{hx::fsString,(int)offsetof(BlobList_obj,OpenSans_sfdName),HX_("OpenSans_sfdName",3a,63,01,6d)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BlobList_obj,OpenSans_sfdDescription),HX_("OpenSans_sfdDescription",ed,a3,51,de)},
	{hx::fsObject /*  ::kha::internal::BytesBlob */ ,(int)offsetof(BlobList_obj,l0_xml),HX_("l0_xml",1c,83,ed,10)},
	{hx::fsString,(int)offsetof(BlobList_obj,l0_xmlName),HX_("l0_xmlName",87,df,7b,5c)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BlobList_obj,l0_xmlDescription),HX_("l0_xmlDescription",40,fb,8a,d5)},
	{hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(BlobList_obj,names),HX_("names",c8,8f,84,96)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BlobList_obj_sStaticStorageInfo = 0;
#endif

static ::String BlobList_obj_sMemberFields[] = {
	HX_("get",96,80,4e,00),
	HX_("OpenSans_sfd",4f,71,f4,ea),
	HX_("OpenSans_sfdName",3a,63,01,6d),
	HX_("OpenSans_sfdDescription",ed,a3,51,de),
	HX_("OpenSans_sfdLoad",15,8b,b9,6b),
	HX_("OpenSans_sfdUnload",ae,eb,9f,02),
	HX_("l0_xml",1c,83,ed,10),
	HX_("l0_xmlName",87,df,7b,5c),
	HX_("l0_xmlDescription",40,fb,8a,d5),
	HX_("l0_xmlLoad",62,07,34,5b),
	HX_("l0_xmlUnload",3b,d5,eb,a2),
	HX_("names",c8,8f,84,96),
	::String(null()) };

hx::Class BlobList_obj::__mClass;

void BlobList_obj::__register()
{
	BlobList_obj _hx_dummy;
	BlobList_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha._Assets.BlobList",b1,33,c7,ca);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BlobList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BlobList_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BlobList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BlobList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace _Assets
