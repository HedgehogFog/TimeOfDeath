// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_entity_element_Entity
#include <hxinc/entity/element/Entity.h>
#endif
#ifndef INCLUDED_entity_element_IEntity
#include <hxinc/entity/element/IEntity.h>
#endif
#ifndef INCLUDED_entity_group_TypedGroup
#include <hxinc/entity/group/TypedGroup.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <hxinc/haxe/Log.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_918e6ed2074d3873_11_new,"entity.group.TypedGroup","new",0x35d02981,"entity.group.TypedGroup.new","entity/group/Group.hx",11,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_27_add,"entity.group.TypedGroup","add",0x35c64b42,"entity.group.TypedGroup.add","entity/group/Group.hx",27,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_47_remove,"entity.group.TypedGroup","remove",0x4e59edc3,"entity.group.TypedGroup.remove","entity/group/Group.hx",47,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_60_recycle,"entity.group.TypedGroup","recycle",0x84e20db4,"entity.group.TypedGroup.recycle","entity/group/Group.hx",60,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_67_draw,"entity.group.TypedGroup","draw",0xd9c1cfc3,"entity.group.TypedGroup.draw","entity/group/Group.hx",67,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_74_update,"entity.group.TypedGroup","update",0xd0d6d788,"entity.group.TypedGroup.update","entity/group/Group.hx",74,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_79_destroy,"entity.group.TypedGroup","destroy",0x71dc2a9b,"entity.group.TypedGroup.destroy","entity/group/Group.hx",79,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_92_kill,"entity.group.TypedGroup","kill",0xde5b835d,"entity.group.TypedGroup.kill","entity/group/Group.hx",92,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_95_revive,"entity.group.TypedGroup","revive",0x54484bd4,"entity.group.TypedGroup.revive","entity/group/Group.hx",95,0x547291bb)
HX_LOCAL_STACK_FRAME(_hx_pos_918e6ed2074d3873_99_getFirstNull,"entity.group.TypedGroup","getFirstNull",0xf77db220,"entity.group.TypedGroup.getFirstNull","entity/group/Group.hx",99,0x547291bb)
namespace entity{
namespace group{

void TypedGroup_obj::__construct(::String groupName){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_11_new)
HXLINE(  16)		this->alive = true;
HXLINE(  15)		this->visible = true;
HXLINE(  14)		this->active = true;
HXLINE(  12)		this->name = HX_("Group",1f,23,22,2d);
HXLINE(  21)		if (hx::IsNotNull( groupName )) {
HXLINE(  22)			this->name = groupName;
            		}
HXLINE(  24)		this->members = ::cpp::VirtualArray_obj::__new(0);
            	}

Dynamic TypedGroup_obj::__CreateEmpty() { return new TypedGroup_obj; }

void *TypedGroup_obj::_hx_vtable = 0;

Dynamic TypedGroup_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TypedGroup_obj > _hx_result = new TypedGroup_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TypedGroup_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4b0dfe2d;
}

static ::entity::element::IEntity_obj _hx_entity_group_TypedGroup__hx_entity_element_IEntity= {
	( void (hx::Object::*)( ::kha::graphics2::Graphics))&::entity::group::TypedGroup_obj::draw,
	( void (hx::Object::*)(Float))&::entity::group::TypedGroup_obj::update,
	( void (hx::Object::*)())&::entity::group::TypedGroup_obj::destroy,
	( void (hx::Object::*)())&::entity::group::TypedGroup_obj::kill,
	( void (hx::Object::*)())&::entity::group::TypedGroup_obj::revive,
};

void *TypedGroup_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x340cedf3: return &_hx_entity_group_TypedGroup__hx_entity_element_IEntity;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void TypedGroup_obj::add( ::Dynamic entity1){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_27_add)
HXLINE(  28)		if (hx::IsNull( entity1 )) {
HXLINE(  29)			::haxe::Log_obj::trace(HX_("Add obj not be null",2f,78,66,3c),hx::SourceInfo(HX_("entity/group/Group.hx",bb,91,72,54),29,HX_("entity.group.TypedGroup",0f,55,43,07),HX_("add",21,f2,49,00)));
HXLINE(  30)			return;
            		}
HXLINE(  33)		if ((this->members->indexOf(entity1,null()) >= 0)) {
HXLINE(  34)			::haxe::Log_obj::trace(HX_("Object exist yje",0a,47,3f,6e),hx::SourceInfo(HX_("entity/group/Group.hx",bb,91,72,54),34,HX_("entity.group.TypedGroup",0f,55,43,07),HX_("add",21,f2,49,00)));
HXLINE(  35)			return;
            		}
HXLINE(  38)		int index = this->getFirstNull();
HXLINE(  39)		if ((index != -1)) {
HXLINE(  40)			this->members->set(index,entity1);
HXLINE(  41)			return;
            		}
HXLINE(  44)		this->members->push(entity1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TypedGroup_obj,add,(void))

void TypedGroup_obj::remove( ::Dynamic entity1,hx::Null< bool >  __o_splice){
            		bool splice = __o_splice.Default(false);
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_47_remove)
HXLINE(  48)		if (hx::IsNull( this->members )) {
HXLINE(  48)			return;
            		}
HXLINE(  50)		int index = this->members->indexOf(entity1,null());
HXLINE(  51)		if ((index < 0)) {
HXLINE(  51)			return;
            		}
HXLINE(  53)		if (splice) {
HXLINE(  54)			this->members->splice(index,1);
            		}
            		else {
HXLINE(  56)			this->members->set(index,null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(TypedGroup_obj,remove,(void))

void TypedGroup_obj::recycle(){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_60_recycle)
            	}


HX_DEFINE_DYNAMIC_FUNC0(TypedGroup_obj,recycle,(void))

void TypedGroup_obj::draw( ::kha::graphics2::Graphics gr){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_67_draw)
HXDLIN(  67)		int _g = 0;
HXDLIN(  67)		::cpp::VirtualArray _g1 = this->members;
HXDLIN(  67)		while((_g < _g1->get_length())){
HXDLIN(  67)			 ::Dynamic entity1 = _g1->__get(_g);
HXDLIN(  67)			_g = (_g + 1);
HXLINE(  68)			bool _hx_tmp;
HXDLIN(  68)			if (hx::IsNotNull( entity1 )) {
HXLINE(  68)				_hx_tmp = ( ( ::entity::element::Entity)(entity1) )->visible;
            			}
            			else {
HXLINE(  68)				_hx_tmp = false;
            			}
HXDLIN(  68)			if (_hx_tmp) {
HXLINE(  69)				( ( ::entity::element::Entity)(entity1) )->draw(gr);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TypedGroup_obj,draw,(void))

void TypedGroup_obj::update(Float dt){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_74_update)
HXDLIN(  74)		int _g = 0;
HXDLIN(  74)		::cpp::VirtualArray _g1 = this->members;
HXDLIN(  74)		while((_g < _g1->get_length())){
HXDLIN(  74)			 ::Dynamic entity1 = _g1->__get(_g);
HXDLIN(  74)			_g = (_g + 1);
HXLINE(  75)			bool _hx_tmp;
HXDLIN(  75)			if (hx::IsNotNull( entity1 )) {
HXLINE(  75)				_hx_tmp = ( ( ::entity::element::Entity)(entity1) )->active;
            			}
            			else {
HXLINE(  75)				_hx_tmp = false;
            			}
HXDLIN(  75)			if (_hx_tmp) {
HXLINE(  76)				( ( ::entity::element::Entity)(entity1) )->update(dt);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TypedGroup_obj,update,(void))

void TypedGroup_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_79_destroy)
HXLINE(  80)		if (hx::IsNull( this->members )) {
HXLINE(  80)			return;
            		}
HXLINE(  82)		{
HXLINE(  82)			int _g = 0;
HXDLIN(  82)			::cpp::VirtualArray _g1 = this->members;
HXDLIN(  82)			while((_g < _g1->get_length())){
HXLINE(  82)				 ::Dynamic entity1 = _g1->__get(_g);
HXDLIN(  82)				_g = (_g + 1);
HXLINE(  83)				if (hx::IsNull( entity1 )) {
HXLINE(  83)					continue;
            				}
HXLINE(  85)				( ( ::entity::element::Entity)(entity1) )->destroy();
            			}
            		}
HXLINE(  88)		this->members = ::cpp::VirtualArray_obj::__new(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(TypedGroup_obj,destroy,(void))

void TypedGroup_obj::kill(){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_92_kill)
            	}


HX_DEFINE_DYNAMIC_FUNC0(TypedGroup_obj,kill,(void))

void TypedGroup_obj::revive(){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_95_revive)
            	}


HX_DEFINE_DYNAMIC_FUNC0(TypedGroup_obj,revive,(void))

int TypedGroup_obj::getFirstNull(){
            	HX_STACKFRAME(&_hx_pos_918e6ed2074d3873_99_getFirstNull)
HXLINE( 100)		{
HXLINE( 100)			int _g = 0;
HXDLIN( 100)			int _g1 = this->members->get_length();
HXDLIN( 100)			while((_g < _g1)){
HXLINE( 100)				_g = (_g + 1);
HXDLIN( 100)				int i = (_g - 1);
HXLINE( 101)				if (hx::IsNull( this->members->__get(i) )) {
HXLINE( 102)					return i;
            				}
            			}
            		}
HXLINE( 105)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(TypedGroup_obj,getFirstNull,return )


hx::ObjectPtr< TypedGroup_obj > TypedGroup_obj::__new(::String groupName) {
	hx::ObjectPtr< TypedGroup_obj > __this = new TypedGroup_obj();
	__this->__construct(groupName);
	return __this;
}

hx::ObjectPtr< TypedGroup_obj > TypedGroup_obj::__alloc(hx::Ctx *_hx_ctx,::String groupName) {
	TypedGroup_obj *__this = (TypedGroup_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TypedGroup_obj), true, "entity.group.TypedGroup"));
	*(void **)__this = TypedGroup_obj::_hx_vtable;
	__this->__construct(groupName);
	return __this;
}

TypedGroup_obj::TypedGroup_obj()
{
}

void TypedGroup_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TypedGroup);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(active,"active");
	HX_MARK_MEMBER_NAME(visible,"visible");
	HX_MARK_MEMBER_NAME(alive,"alive");
	HX_MARK_MEMBER_NAME(members,"members");
	HX_MARK_END_CLASS();
}

void TypedGroup_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(active,"active");
	HX_VISIT_MEMBER_NAME(visible,"visible");
	HX_VISIT_MEMBER_NAME(alive,"alive");
	HX_VISIT_MEMBER_NAME(members,"members");
}

hx::Val TypedGroup_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return hx::Val( draw_dyn() ); }
		if (HX_FIELD_EQ(inName,"kill") ) { return hx::Val( kill_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alive") ) { return hx::Val( alive ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"active") ) { return hx::Val( active ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"revive") ) { return hx::Val( revive_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"visible") ) { return hx::Val( visible ); }
		if (HX_FIELD_EQ(inName,"members") ) { return hx::Val( members ); }
		if (HX_FIELD_EQ(inName,"recycle") ) { return hx::Val( recycle_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getFirstNull") ) { return hx::Val( getFirstNull_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TypedGroup_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alive") ) { alive=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"active") ) { active=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"visible") ) { visible=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"members") ) { members=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TypedGroup_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("active",c6,41,46,16));
	outFields->push(HX_("visible",72,78,24,a3));
	outFields->push(HX_("alive",cd,63,91,21));
	outFields->push(HX_("members",d9,2c,70,1a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo TypedGroup_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(TypedGroup_obj,name),HX_("name",4b,72,ff,48)},
	{hx::fsBool,(int)offsetof(TypedGroup_obj,active),HX_("active",c6,41,46,16)},
	{hx::fsBool,(int)offsetof(TypedGroup_obj,visible),HX_("visible",72,78,24,a3)},
	{hx::fsBool,(int)offsetof(TypedGroup_obj,alive),HX_("alive",cd,63,91,21)},
	{hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(TypedGroup_obj,members),HX_("members",d9,2c,70,1a)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TypedGroup_obj_sStaticStorageInfo = 0;
#endif

static ::String TypedGroup_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("active",c6,41,46,16),
	HX_("visible",72,78,24,a3),
	HX_("alive",cd,63,91,21),
	HX_("members",d9,2c,70,1a),
	HX_("add",21,f2,49,00),
	HX_("remove",44,9c,88,04),
	HX_("recycle",13,10,8c,37),
	HX_("draw",04,2c,70,42),
	HX_("update",09,86,05,87),
	HX_("destroy",fa,2c,86,24),
	HX_("kill",9e,df,09,47),
	HX_("revive",55,fa,76,0a),
	HX_("getFirstNull",61,b7,33,0f),
	::String(null()) };

hx::Class TypedGroup_obj::__mClass;

void TypedGroup_obj::__register()
{
	TypedGroup_obj _hx_dummy;
	TypedGroup_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("entity.group.TypedGroup",0f,55,43,07);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TypedGroup_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TypedGroup_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TypedGroup_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TypedGroup_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace entity
} // end namespace group
