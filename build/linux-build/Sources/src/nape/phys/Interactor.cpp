// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_nape_callbacks_CbTypeList
#include <hxinc/nape/callbacks/CbTypeList.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroup
#include <hxinc/nape/dynamics/InteractionGroup.h>
#endif
#ifndef INCLUDED_nape_phys_Body
#include <hxinc/nape/phys/Body.h>
#endif
#ifndef INCLUDED_nape_phys_Compound
#include <hxinc/nape/phys/Compound.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <hxinc/nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_nape_shape_Shape
#include <hxinc/nape/shape/Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionGroup
#include <hxinc/zpp_nape/dynamics/ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Body
#include <hxinc/zpp_nape/phys/ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Compound
#include <hxinc/zpp_nape/phys/ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <hxinc/zpp_nape/phys/ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Shape
#include <hxinc/zpp_nape/shape/ZPP_Shape.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_174_new,"nape.phys.Interactor","new",0x114ae081,"nape.phys.Interactor.new","nape/phys/Interactor.hx",174,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_185_get_id,"nape.phys.Interactor","get_id",0xefd2eda3,"nape.phys.Interactor.get_id","nape/phys/Interactor.hx",185,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_200_get_userData,"nape.phys.Interactor","get_userData",0xc382addd,"nape.phys.Interactor.get_userData","nape/phys/Interactor.hx",200,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_212_isShape,"nape.phys.Interactor","isShape",0xda9abb78,"nape.phys.Interactor.isShape","nape/phys/Interactor.hx",212,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_220_isBody,"nape.phys.Interactor","isBody",0xab253a2b,"nape.phys.Interactor.isBody","nape/phys/Interactor.hx",220,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_228_isCompound,"nape.phys.Interactor","isCompound",0x8f0a7b74,"nape.phys.Interactor.isCompound","nape/phys/Interactor.hx",228,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_236_get_castShape,"nape.phys.Interactor","get_castShape",0x2ec8171a,"nape.phys.Interactor.get_castShape","nape/phys/Interactor.hx",236,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_244_get_castBody,"nape.phys.Interactor","get_castBody",0x8ff8a8c9,"nape.phys.Interactor.get_castBody","nape/phys/Interactor.hx",244,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_252_get_castCompound,"nape.phys.Interactor","get_castCompound",0xe67c9112,"nape.phys.Interactor.get_castCompound","nape/phys/Interactor.hx",252,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_262_get_group,"nape.phys.Interactor","get_group",0x35856e77,"nape.phys.Interactor.get_group","nape/phys/Interactor.hx",262,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_264_set_group,"nape.phys.Interactor","set_group",0x18d65a83,"nape.phys.Interactor.set_group","nape/phys/Interactor.hx",264,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_278_get_cbTypes,"nape.phys.Interactor","get_cbTypes",0x1f5f2292,"nape.phys.Interactor.get_cbTypes","nape/phys/Interactor.hx",278,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_297_toString,"nape.phys.Interactor","toString",0x2fa4a8eb,"nape.phys.Interactor.toString","nape/phys/Interactor.hx",297,0xc210d1af)
HX_LOCAL_STACK_FRAME(_hx_pos_a0d5349daf8b7760_286_boot,"nape.phys.Interactor","boot",0x085290f1,"nape.phys.Interactor.boot","nape/phys/Interactor.hx",286,0xc210d1af)
namespace nape{
namespace phys{

void Interactor_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_174_new)
HXLINE( 178)		this->zpp_inner_i = null();
HXLINE( 290)		if (!(::nape::phys::Interactor_obj::zpp_internalAlloc)) {
HXLINE( 290)			HX_STACK_DO_THROW(HX_("Error: Cannot instantiate an Interactor, only Shape/Body/Compound",51,d5,1e,29));
            		}
            	}

Dynamic Interactor_obj::__CreateEmpty() { return new Interactor_obj; }

void *Interactor_obj::_hx_vtable = 0;

Dynamic Interactor_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Interactor_obj > _hx_result = new Interactor_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Interactor_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x643c1bb3;
}

int Interactor_obj::get_id(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_185_get_id)
HXDLIN( 185)		return this->zpp_inner_i->id;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_id,return )

 ::Dynamic Interactor_obj::get_userData(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_200_get_userData)
HXLINE( 201)		if (hx::IsNull( this->zpp_inner_i->userData )) {
HXLINE( 202)			this->zpp_inner_i->userData =  ::Dynamic(hx::Anon_obj::Create(0));
            		}
HXLINE( 204)		return this->zpp_inner_i->userData;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_userData,return )

bool Interactor_obj::isShape(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_212_isShape)
HXDLIN( 212)		return hx::IsNotNull( this->zpp_inner_i->ishape );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isShape,return )

bool Interactor_obj::isBody(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_220_isBody)
HXDLIN( 220)		return hx::IsNotNull( this->zpp_inner_i->ibody );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isBody,return )

bool Interactor_obj::isCompound(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_228_isCompound)
HXDLIN( 228)		return hx::IsNotNull( this->zpp_inner_i->icompound );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isCompound,return )

 ::nape::shape::Shape Interactor_obj::get_castShape(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_236_get_castShape)
HXDLIN( 236)		if (hx::IsNotNull( this->zpp_inner_i->ishape )) {
HXDLIN( 236)			return this->zpp_inner_i->ishape->outer;
            		}
            		else {
HXDLIN( 236)			return null();
            		}
HXDLIN( 236)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castShape,return )

 ::nape::phys::Body Interactor_obj::get_castBody(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_244_get_castBody)
HXDLIN( 244)		if (hx::IsNotNull( this->zpp_inner_i->ibody )) {
HXDLIN( 244)			return this->zpp_inner_i->ibody->outer;
            		}
            		else {
HXDLIN( 244)			return null();
            		}
HXDLIN( 244)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castBody,return )

 ::nape::phys::Compound Interactor_obj::get_castCompound(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_252_get_castCompound)
HXDLIN( 252)		if (hx::IsNotNull( this->zpp_inner_i->icompound )) {
HXDLIN( 252)			return this->zpp_inner_i->icompound->outer;
            		}
            		else {
HXDLIN( 252)			return null();
            		}
HXDLIN( 252)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castCompound,return )

 ::nape::dynamics::InteractionGroup Interactor_obj::get_group(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_262_get_group)
HXDLIN( 262)		if (hx::IsNull( this->zpp_inner_i->group )) {
HXDLIN( 262)			return null();
            		}
            		else {
HXDLIN( 262)			return this->zpp_inner_i->group->outer;
            		}
HXDLIN( 262)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_group,return )

 ::nape::dynamics::InteractionGroup Interactor_obj::set_group( ::nape::dynamics::InteractionGroup group){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_264_set_group)
HXLINE( 265)		{
HXLINE( 266)			this->zpp_inner_i->immutable_midstep(HX_("Interactor::group",26,ef,48,55));
HXLINE( 267)			 ::zpp_nape::dynamics::ZPP_InteractionGroup _hx_tmp;
HXDLIN( 267)			if (hx::IsNull( group )) {
HXLINE( 267)				_hx_tmp = null();
            			}
            			else {
HXLINE( 267)				_hx_tmp = group->zpp_inner;
            			}
HXDLIN( 267)			this->zpp_inner_i->setGroup(_hx_tmp);
            		}
HXLINE( 269)		if (hx::IsNull( this->zpp_inner_i->group )) {
HXLINE( 269)			return null();
            		}
            		else {
HXLINE( 269)			return this->zpp_inner_i->group->outer;
            		}
HXDLIN( 269)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interactor_obj,set_group,return )

 ::nape::callbacks::CbTypeList Interactor_obj::get_cbTypes(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_278_get_cbTypes)
HXLINE( 279)		if (hx::IsNull( this->zpp_inner_i->wrap_cbTypes )) {
HXLINE( 279)			this->zpp_inner_i->setupcbTypes();
            		}
HXLINE( 280)		return this->zpp_inner_i->wrap_cbTypes;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_cbTypes,return )

::String Interactor_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_297_toString)
HXDLIN( 297)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,toString,return )

bool Interactor_obj::zpp_internalAlloc;


hx::ObjectPtr< Interactor_obj > Interactor_obj::__new() {
	hx::ObjectPtr< Interactor_obj > __this = new Interactor_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Interactor_obj > Interactor_obj::__alloc(hx::Ctx *_hx_ctx) {
	Interactor_obj *__this = (Interactor_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Interactor_obj), true, "nape.phys.Interactor"));
	*(void **)__this = Interactor_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Interactor_obj::Interactor_obj()
{
}

void Interactor_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interactor);
	HX_MARK_MEMBER_NAME(zpp_inner_i,"zpp_inner_i");
	HX_MARK_END_CLASS();
}

void Interactor_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner_i,"zpp_inner_i");
}

hx::Val Interactor_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_id() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_group() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { return hx::Val( get_id_dyn() ); }
		if (HX_FIELD_EQ(inName,"isBody") ) { return hx::Val( isBody_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isShape") ) { return hx::Val( isShape_dyn() ); }
		if (HX_FIELD_EQ(inName,"cbTypes") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_cbTypes() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"userData") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_userData() ); }
		if (HX_FIELD_EQ(inName,"castBody") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_castBody() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"castShape") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_castShape() ); }
		if (HX_FIELD_EQ(inName,"get_group") ) { return hx::Val( get_group_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_group") ) { return hx::Val( set_group_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"isCompound") ) { return hx::Val( isCompound_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"zpp_inner_i") ) { return hx::Val( zpp_inner_i ); }
		if (HX_FIELD_EQ(inName,"get_cbTypes") ) { return hx::Val( get_cbTypes_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_userData") ) { return hx::Val( get_userData_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_castBody") ) { return hx::Val( get_castBody_dyn() ); }
		if (HX_FIELD_EQ(inName,"castCompound") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_castCompound() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_castShape") ) { return hx::Val( get_castShape_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_castCompound") ) { return hx::Val( get_castCompound_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Interactor_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"zpp_internalAlloc") ) { outValue = ( zpp_internalAlloc ); return true; }
	}
	return false;
}

hx::Val Interactor_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_group(inValue.Cast<  ::nape::dynamics::InteractionGroup >()) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"zpp_inner_i") ) { zpp_inner_i=inValue.Cast<  ::zpp_nape::phys::ZPP_Interactor >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Interactor_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"zpp_internalAlloc") ) { zpp_internalAlloc=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

void Interactor_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("zpp_inner_i",bb,6e,a6,b0));
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("userData",15,96,28,05));
	outFields->push(HX_("castShape",e2,5f,4d,5e));
	outFields->push(HX_("castBody",01,91,9e,d1));
	outFields->push(HX_("castCompound",4a,f5,a6,93));
	outFields->push(HX_("group",3f,b3,f4,99));
	outFields->push(HX_("cbTypes",5a,29,bf,f1));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Interactor_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::zpp_nape::phys::ZPP_Interactor */ ,(int)offsetof(Interactor_obj,zpp_inner_i),HX_("zpp_inner_i",bb,6e,a6,b0)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Interactor_obj_sStaticStorageInfo[] = {
	{hx::fsBool,(void *) &Interactor_obj::zpp_internalAlloc,HX_("zpp_internalAlloc",b3,36,26,40)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Interactor_obj_sMemberFields[] = {
	HX_("zpp_inner_i",bb,6e,a6,b0),
	HX_("get_id",24,f3,2f,a3),
	HX_("get_userData",1e,4a,42,ba),
	HX_("isShape",d7,86,a2,18),
	HX_("isBody",ac,3f,82,5e),
	HX_("isCompound",75,d5,7e,fc),
	HX_("get_castShape",b9,33,b1,1f),
	HX_("get_castBody",0a,45,b8,86),
	HX_("get_castCompound",d3,e1,45,98),
	HX_("get_group",96,0f,9e,dd),
	HX_("set_group",a2,fb,ee,c0),
	HX_("get_cbTypes",71,89,b9,77),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

static void Interactor_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Interactor_obj::zpp_internalAlloc,"zpp_internalAlloc");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Interactor_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Interactor_obj::zpp_internalAlloc,"zpp_internalAlloc");
};

#endif

hx::Class Interactor_obj::__mClass;

static ::String Interactor_obj_sStaticFields[] = {
	HX_("zpp_internalAlloc",b3,36,26,40),
	::String(null())
};

void Interactor_obj::__register()
{
	Interactor_obj _hx_dummy;
	Interactor_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("nape.phys.Interactor",0f,8c,56,d3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Interactor_obj::__GetStatic;
	__mClass->mSetStaticField = &Interactor_obj::__SetStatic;
	__mClass->mMarkFunc = Interactor_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Interactor_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Interactor_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Interactor_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Interactor_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interactor_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interactor_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Interactor_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_286_boot)
HXDLIN( 286)		zpp_internalAlloc = false;
            	}
}

} // end namespace nape
} // end namespace phys
