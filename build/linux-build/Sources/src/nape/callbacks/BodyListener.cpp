// Generated by Haxe 4.0.0-preview.5
#include <hxcpp.h>

#ifndef INCLUDED_nape_callbacks_BodyCallback
#include <hxinc/nape/callbacks/BodyCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_BodyListener
#include <hxinc/nape/callbacks/BodyListener.h>
#endif
#ifndef INCLUDED_nape_callbacks_Callback
#include <hxinc/nape/callbacks/Callback.h>
#endif
#ifndef INCLUDED_nape_callbacks_CbEvent
#include <hxinc/nape/callbacks/CbEvent.h>
#endif
#ifndef INCLUDED_nape_callbacks_Listener
#include <hxinc/nape/callbacks/Listener.h>
#endif
#ifndef INCLUDED_nape_callbacks_OptionType
#include <hxinc/nape/callbacks/OptionType.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_BodyListener
#include <hxinc/zpp_nape/callbacks/ZPP_BodyListener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Listener
#include <hxinc/zpp_nape/callbacks/ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_OptionType
#include <hxinc/zpp_nape/callbacks/ZPP_OptionType.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Flags
#include <hxinc/zpp_nape/util/ZPP_Flags.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e19d62d334d4212e_180_new,"nape.callbacks.BodyListener","new",0xe9cb886e,"nape.callbacks.BodyListener.new","nape/callbacks/BodyListener.hx",180,0x83186dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_e19d62d334d4212e_195_get_options,"nape.callbacks.BodyListener","get_options",0x2b1c0983,"nape.callbacks.BodyListener.get_options","nape/callbacks/BodyListener.hx",195,0x83186dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_e19d62d334d4212e_197_set_options,"nape.callbacks.BodyListener","set_options",0x3589108f,"nape.callbacks.BodyListener.set_options","nape/callbacks/BodyListener.hx",197,0x83186dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_e19d62d334d4212e_209_get_handler,"nape.callbacks.BodyListener","get_handler",0x90f385ef,"nape.callbacks.BodyListener.get_handler","nape/callbacks/BodyListener.hx",209,0x83186dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_e19d62d334d4212e_211_set_handler,"nape.callbacks.BodyListener","set_handler",0x9b608cfb,"nape.callbacks.BodyListener.set_handler","nape/callbacks/BodyListener.hx",211,0x83186dc0)
namespace nape{
namespace callbacks{

void BodyListener_obj::__construct( ::nape::callbacks::CbEvent event, ::Dynamic options, ::Dynamic handler,hx::Null< int >  __o_precedence){
            		int precedence = __o_precedence.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_e19d62d334d4212e_180_new)
HXLINE( 184)		this->zpp_inner_zn = null();
HXLINE( 250)		::zpp_nape::callbacks::ZPP_Listener_obj::internal = true;
HXLINE( 252)		super::__construct();
HXLINE( 254)		::zpp_nape::callbacks::ZPP_Listener_obj::internal = false;
HXLINE( 257)		if (hx::IsNull( handler )) {
HXLINE( 258)			HX_STACK_DO_THROW(HX_("Error: BodyListener::handler cannot be null",e1,68,2f,6e));
            		}
HXLINE( 261)		int xevent = -1;
HXLINE( 262)		if (hx::IsNull( ::zpp_nape::util::ZPP_Flags_obj::CbEvent_WAKE )) {
HXLINE( 262)			::zpp_nape::util::ZPP_Flags_obj::internal = true;
HXDLIN( 262)			::zpp_nape::util::ZPP_Flags_obj::CbEvent_WAKE =  ::nape::callbacks::CbEvent_obj::__alloc( HX_CTX );
HXDLIN( 262)			::zpp_nape::util::ZPP_Flags_obj::internal = false;
            		}
HXDLIN( 262)		if (hx::IsEq( event,::zpp_nape::util::ZPP_Flags_obj::CbEvent_WAKE )) {
HXLINE( 262)			xevent = 2;
            		}
            		else {
HXLINE( 263)			if (hx::IsNull( ::zpp_nape::util::ZPP_Flags_obj::CbEvent_SLEEP )) {
HXLINE( 263)				::zpp_nape::util::ZPP_Flags_obj::internal = true;
HXDLIN( 263)				::zpp_nape::util::ZPP_Flags_obj::CbEvent_SLEEP =  ::nape::callbacks::CbEvent_obj::__alloc( HX_CTX );
HXDLIN( 263)				::zpp_nape::util::ZPP_Flags_obj::internal = false;
            			}
HXDLIN( 263)			if (hx::IsEq( event,::zpp_nape::util::ZPP_Flags_obj::CbEvent_SLEEP )) {
HXLINE( 263)				xevent = 3;
            			}
            			else {
HXLINE( 266)				HX_STACK_DO_THROW(((HX_("Error: cbEvent '",b4,ef,36,c7) + event->toString()) + HX_("' is not a valid event type for a BodyListener",ff,e2,2e,73)));
            			}
            		}
HXLINE( 269)		this->zpp_inner_zn =  ::zpp_nape::callbacks::ZPP_BodyListener_obj::__alloc( HX_CTX ,::zpp_nape::callbacks::ZPP_OptionType_obj::argument(options),xevent,handler);
HXLINE( 270)		this->zpp_inner = this->zpp_inner_zn;
HXLINE( 271)		this->zpp_inner->outer = hx::ObjectPtr<OBJ_>(this);
HXLINE( 272)		this->zpp_inner_zn->outer_zn = hx::ObjectPtr<OBJ_>(this);
HXLINE( 273)		this->zpp_inner->precedence = precedence;
            	}

Dynamic BodyListener_obj::__CreateEmpty() { return new BodyListener_obj; }

void *BodyListener_obj::_hx_vtable = 0;

Dynamic BodyListener_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BodyListener_obj > _hx_result = new BodyListener_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool BodyListener_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x631bbafc) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x631bbafc;
	} else {
		return inClassId==(int)0x65d6373a;
	}
}

 ::nape::callbacks::OptionType BodyListener_obj::get_options(){
            	HX_STACKFRAME(&_hx_pos_e19d62d334d4212e_195_get_options)
HXDLIN( 195)		return this->zpp_inner_zn->options->outer;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BodyListener_obj,get_options,return )

 ::nape::callbacks::OptionType BodyListener_obj::set_options( ::nape::callbacks::OptionType options){
            	HX_STACKFRAME(&_hx_pos_e19d62d334d4212e_197_set_options)
HXLINE( 199)		this->zpp_inner_zn->options->set(options->zpp_inner);
HXLINE( 201)		return this->zpp_inner_zn->options->outer;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BodyListener_obj,set_options,return )

 ::Dynamic BodyListener_obj::get_handler(){
            	HX_STACKFRAME(&_hx_pos_e19d62d334d4212e_209_get_handler)
HXDLIN( 209)		return this->zpp_inner_zn->handler;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BodyListener_obj,get_handler,return )

 ::Dynamic BodyListener_obj::set_handler( ::Dynamic handler){
            	HX_STACKFRAME(&_hx_pos_e19d62d334d4212e_211_set_handler)
HXLINE( 212)		{
HXLINE( 214)			if (hx::IsNull( handler )) {
HXLINE( 215)				HX_STACK_DO_THROW(HX_("Error: BodyListener::handler cannot be null",e1,68,2f,6e));
            			}
HXLINE( 218)			this->zpp_inner_zn->handler = handler;
            		}
HXLINE( 220)		return this->zpp_inner_zn->handler;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BodyListener_obj,set_handler,return )


hx::ObjectPtr< BodyListener_obj > BodyListener_obj::__new( ::nape::callbacks::CbEvent event, ::Dynamic options, ::Dynamic handler,hx::Null< int >  __o_precedence) {
	hx::ObjectPtr< BodyListener_obj > __this = new BodyListener_obj();
	__this->__construct(event,options,handler,__o_precedence);
	return __this;
}

hx::ObjectPtr< BodyListener_obj > BodyListener_obj::__alloc(hx::Ctx *_hx_ctx, ::nape::callbacks::CbEvent event, ::Dynamic options, ::Dynamic handler,hx::Null< int >  __o_precedence) {
	BodyListener_obj *__this = (BodyListener_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BodyListener_obj), true, "nape.callbacks.BodyListener"));
	*(void **)__this = BodyListener_obj::_hx_vtable;
	__this->__construct(event,options,handler,__o_precedence);
	return __this;
}

BodyListener_obj::BodyListener_obj()
{
}

void BodyListener_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BodyListener);
	HX_MARK_MEMBER_NAME(zpp_inner_zn,"zpp_inner_zn");
	 ::nape::callbacks::Listener_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void BodyListener_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner_zn,"zpp_inner_zn");
	 ::nape::callbacks::Listener_obj::__Visit(HX_VISIT_ARG);
}

hx::Val BodyListener_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"options") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_options() ); }
		if (HX_FIELD_EQ(inName,"handler") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_handler() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_options") ) { return hx::Val( get_options_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_options") ) { return hx::Val( set_options_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_handler") ) { return hx::Val( get_handler_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_handler") ) { return hx::Val( set_handler_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"zpp_inner_zn") ) { return hx::Val( zpp_inner_zn ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BodyListener_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"options") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_options(inValue.Cast<  ::nape::callbacks::OptionType >()) ); }
		if (HX_FIELD_EQ(inName,"handler") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_handler(inValue.Cast<  ::Dynamic >()) ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"zpp_inner_zn") ) { zpp_inner_zn=inValue.Cast<  ::zpp_nape::callbacks::ZPP_BodyListener >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BodyListener_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("zpp_inner_zn",22,84,fa,e0));
	outFields->push(HX_("options",5e,33,fe,df));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo BodyListener_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::zpp_nape::callbacks::ZPP_BodyListener */ ,(int)offsetof(BodyListener_obj,zpp_inner_zn),HX_("zpp_inner_zn",22,84,fa,e0)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BodyListener_obj_sStaticStorageInfo = 0;
#endif

static ::String BodyListener_obj_sMemberFields[] = {
	HX_("zpp_inner_zn",22,84,fa,e0),
	HX_("get_options",75,93,f8,65),
	HX_("set_options",81,9a,65,70),
	HX_("get_handler",e1,0f,d0,cb),
	HX_("set_handler",ed,16,3d,d6),
	::String(null()) };

hx::Class BodyListener_obj::__mClass;

void BodyListener_obj::__register()
{
	BodyListener_obj _hx_dummy;
	BodyListener_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("nape.callbacks.BodyListener",7c,79,af,e5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BodyListener_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BodyListener_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BodyListener_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BodyListener_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace callbacks
