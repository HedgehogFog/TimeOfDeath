// Generated by Haxe 4.0.0-preview.5
#ifndef INCLUDED_scene_impl_PreloaderScene
#define INCLUDED_scene_impl_PreloaderScene

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_scene_Scene
#include <hxinc/scene/Scene.h>
#endif
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS1(scene,Scene)
HX_DECLARE_CLASS2(scene,impl,PreloaderScene)

namespace scene{
namespace impl{


class HXCPP_CLASS_ATTRIBUTES PreloaderScene_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef PreloaderScene_obj OBJ_;
		PreloaderScene_obj();

	public:
		enum { _hx_ClassId = 0x681713c2 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="scene.impl.PreloaderScene")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"scene.impl.PreloaderScene"); }
		static hx::ObjectPtr< PreloaderScene_obj > __new();
		static hx::ObjectPtr< PreloaderScene_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PreloaderScene_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("PreloaderScene",16,0d,5b,e2); }

		int bgColor;
		void draw( ::kha::graphics2::Graphics gr);
		::Dynamic draw_dyn();

		Float loadTime;
		void update(Float dt);
		::Dynamic update_dyn();

		void destroy();
		::Dynamic destroy_dyn();

};

} // end namespace scene
} // end namespace impl

#endif /* INCLUDED_scene_impl_PreloaderScene */ 
