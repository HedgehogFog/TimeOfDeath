// Generated by Haxe 4.0.0-preview.5
#ifndef INCLUDED_zui_Zui
#define INCLUDED_zui_Zui

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS1(zui,Handle)
HX_DECLARE_CLASS1(zui,Zui)

namespace zui{


class HXCPP_CLASS_ATTRIBUTES Zui_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Zui_obj OBJ_;
		Zui_obj();

	public:
		enum { _hx_ClassId = 0x30f846c4 };

		void __construct( ::Dynamic ops);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="zui.Zui")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"zui.Zui"); }
		static hx::ObjectPtr< Zui_obj > __new( ::Dynamic ops);
		static hx::ObjectPtr< Zui_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic ops);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Zui_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Zui",2e,b1,44,00); }

		static void __boot();
		static ::String textToPaste;
		static ::String textToCopy;
		static bool isCut;
		static bool isCopy;
		static bool isPaste;
		static  ::zui::Zui copyReceiver;
		static int copyFrame;
		static bool comboFirst;
		bool isScrolling;
		bool isTyping;
		bool isStarted;
		bool isPushed;
		bool isHovered;
		bool isReleased;
		bool changed;
		bool alwaysRedraw;
		bool imageInvertY;
		bool scrollEnabled;
		bool inputRegistered;
		bool inputEnabled;
		Float inputX;
		Float inputY;
		Float inputInitialX;
		Float inputInitialY;
		Float inputDX;
		Float inputDY;
		int inputWheelDelta;
		bool inputStarted;
		bool inputStartedR;
		bool inputReleased;
		bool inputReleasedR;
		bool inputDown;
		bool inputDownR;
		bool isKeyDown;
		bool isShiftDown;
		bool isCtrlDown;
		bool isAltDown;
		bool isBackspaceDown;
		bool isDeleteDown;
		bool isEscapeDown;
		 ::Dynamic key;
		::String _hx_char;
		int cursorX;
		int cursorY;
		int highlightAnchor;
		::Array< Float > ratios;
		int curRatio;
		Float xBeforeSplit;
		int wBeforeSplit;
		 ::kha::graphics2::Graphics g;
		 ::kha::graphics2::Graphics globalG;
		 ::Dynamic t;
		Float SCALE;
		 ::Dynamic ops;
		int fontSize;
		Float fontOffsetY;
		Float arrowOffsetX;
		Float arrowOffsetY;
		Float titleOffsetX;
		Float buttonOffsetY;
		Float checkOffsetX;
		Float checkOffsetY;
		Float checkSelectOffsetX;
		Float checkSelectOffsetY;
		Float radioOffsetX;
		Float radioOffsetY;
		Float radioSelectOffsetX;
		Float radioSelectOffsetY;
		Float scrollAlign;
		bool imageScrollAlign;
		Float _x;
		Float _y;
		int _w;
		int _h;
		Float _windowX;
		Float _windowY;
		Float _windowW;
		Float _windowH;
		 ::zui::Handle currentWindow;
		bool windowEnded;
		 ::zui::Handle scrollingHandle;
		Float windowHeader;
		 ::zui::Handle textSelectedHandle;
		::String textSelectedCurrentText;
		 ::zui::Handle submitTextHandle;
		::String textToSubmit;
		bool tabPressed;
		 ::zui::Handle tabPressedHandle;
		 ::zui::Handle comboSelectedHandle;
		 ::zui::Handle comboSelectedWindow;
		int comboSelectedAlign;
		::Array< ::String > comboSelectedTexts;
		::String comboSelectedLabel;
		int comboSelectedX;
		int comboSelectedY;
		int comboSelectedW;
		 ::zui::Handle submitComboHandle;
		int comboToSubmit;
		::String tooltipText;
		 ::kha::Image tooltipImg;
		bool tooltipInvertY;
		Float tooltipX;
		Float tooltipY;
		bool tooltipShown;
		Float tooltipTime;
		::Array< ::String > tabNames;
		 ::zui::Handle tabHandle;
		Float tabScroll;
		bool elementsBaked;
		 ::kha::Image checkSelectImage;
		void setScale(Float factor);
		::Dynamic setScale_dyn();

		void bakeElements();
		::Dynamic bakeElements_dyn();

		void remove();
		::Dynamic remove_dyn();

		void registerInput();
		::Dynamic registerInput_dyn();

		void unregisterInput();
		::Dynamic unregisterInput_dyn();

		void begin( ::kha::graphics2::Graphics g);
		::Dynamic begin_dyn();

		void end(hx::Null< bool >  last);
		::Dynamic end_dyn();

		void endInput();
		::Dynamic endInput_dyn();

		void beginLayout( ::kha::graphics2::Graphics g,int x,int y,int w);
		::Dynamic beginLayout_dyn();

		void endLayout(hx::Null< bool >  last);
		::Dynamic endLayout_dyn();

		bool inputChanged();
		::Dynamic inputChanged_dyn();

		bool windowDirty( ::zui::Handle handle,int x,int y,int w,int h);
		::Dynamic windowDirty_dyn();

		bool window( ::zui::Handle handle,int x,int y,int w,int h,hx::Null< bool >  drag);
		::Dynamic window_dyn();

		void endWindow(hx::Null< bool >  bindGlobalG);
		::Dynamic endWindow_dyn();

		void scroll(Float delta,Float fullHeight);
		::Dynamic scroll_dyn();

		Float restoreX;
		Float restoreY;
		bool tab( ::zui::Handle handle,::String text);
		::Dynamic tab_dyn();

		void drawTabs();
		::Dynamic drawTabs_dyn();

		bool panel( ::zui::Handle handle,::String text,hx::Null< int >  accent,hx::Null< bool >  isTree);
		::Dynamic panel_dyn();

		int image( ::kha::Image image,hx::Null< int >  tint, ::Dynamic h);
		::Dynamic image_dyn();

		void text(::String text,hx::Null< int >  align,hx::Null< int >  bg);
		::Dynamic text_dyn();

		void startTextEdit( ::zui::Handle handle);
		::Dynamic startTextEdit_dyn();

		void submitTextEdit();
		::Dynamic submitTextEdit_dyn();

		void updateTextEdit(hx::Null< int >  align);
		::Dynamic updateTextEdit_dyn();

		::String textInput( ::zui::Handle handle,::String label,hx::Null< int >  align);
		::Dynamic textInput_dyn();

		void deselectText();
		::Dynamic deselectText_dyn();

		bool button(::String text,hx::Null< int >  align,::String label);
		::Dynamic button_dyn();

		bool check( ::zui::Handle handle,::String text);
		::Dynamic check_dyn();

		bool radio( ::zui::Handle handle,int position,::String text);
		::Dynamic radio_dyn();

		int inlineRadio( ::zui::Handle handle,::Array< ::String > texts);
		::Dynamic inlineRadio_dyn();

		int combo( ::zui::Handle handle,::Array< ::String > texts,::String label,hx::Null< bool >  showLabel,hx::Null< int >  align);
		::Dynamic combo_dyn();

		Float slider( ::zui::Handle handle,::String text,hx::Null< Float >  from,hx::Null< Float >  to,hx::Null< bool >  filled,hx::Null< int >  precision,hx::Null< bool >  displayValue,hx::Null< int >  align,hx::Null< bool >  textEdit);
		::Dynamic slider_dyn();

		void separator(hx::Null< int >  h,hx::Null< bool >  fill);
		::Dynamic separator_dyn();

		void tooltip(::String text);
		::Dynamic tooltip_dyn();

		void tooltipImage( ::kha::Image image);
		::Dynamic tooltipImage_dyn();

		void drawArrow(bool selected);
		::Dynamic drawArrow_dyn();

		void drawTree(bool selected);
		::Dynamic drawTree_dyn();

		void drawCheck(bool selected,bool hover);
		::Dynamic drawCheck_dyn();

		void drawRadio(bool selected,bool hover);
		::Dynamic drawRadio_dyn();

		void drawInlineRadio(::String text,bool hover);
		::Dynamic drawInlineRadio_dyn();

		void drawSlider(Float value,Float from,Float to,bool filled,bool hover);
		::Dynamic drawSlider_dyn();

		void drawCombo();
		::Dynamic drawCombo_dyn();

		void drawTooltip();
		::Dynamic drawTooltip_dyn();

		void drawTooltipImage();
		::Dynamic drawTooltipImage_dyn();

		void drawString( ::kha::graphics2::Graphics g,::String text, ::Dynamic xOffset,hx::Null< Float >  yOffset,hx::Null< int >  align);
		::Dynamic drawString_dyn();

		void endElement( ::Dynamic elementSize);
		::Dynamic endElement_dyn();

		void row(::Array< Float > ratios);
		::Dynamic row_dyn();

		void indent();
		::Dynamic indent_dyn();

		void unindent();
		::Dynamic unindent_dyn();

		void fill(Float x,Float y,Float w,Float h,int color);
		::Dynamic fill_dyn();

		void rect(Float x,Float y,Float w,Float h,int color,hx::Null< Float >  strength);
		::Dynamic rect_dyn();

		void drawRect( ::kha::graphics2::Graphics g,bool fill,Float x,Float y,Float w,Float h,hx::Null< Float >  strength);
		::Dynamic drawRect_dyn();

		bool isVisible(Float elemH);
		::Dynamic isVisible_dyn();

		bool getReleased(hx::Null< Float >  elemH);
		::Dynamic getReleased_dyn();

		bool getPushed(hx::Null< Float >  elemH);
		::Dynamic getPushed_dyn();

		bool getStarted(hx::Null< Float >  elemH);
		::Dynamic getStarted_dyn();

		bool getInitialHover(hx::Null< Float >  elemH);
		::Dynamic getInitialHover_dyn();

		bool getHover(hx::Null< Float >  elemH);
		::Dynamic getHover_dyn();

		bool getInputInRect(Float x,Float y,Float w,Float h,hx::Null< Float >  scale);
		::Dynamic getInputInRect_dyn();

		void onMouseDown(int button,int x,int y);
		::Dynamic onMouseDown_dyn();

		void onMouseUp(int button,int x,int y);
		::Dynamic onMouseUp_dyn();

		void onMouseMove(int x,int y,int movementX,int movementY);
		::Dynamic onMouseMove_dyn();

		void onMouseWheel(int delta);
		::Dynamic onMouseWheel_dyn();

		void setInputPosition(int x,int y);
		::Dynamic setInputPosition_dyn();

		void onKeyDown(int code);
		::Dynamic onKeyDown_dyn();

		void onKeyUp(int code);
		::Dynamic onKeyUp_dyn();

		void onKeyPress(::String _hx_char);
		::Dynamic onKeyPress_dyn();

		::String onCut();
		::Dynamic onCut_dyn();

		::String onCopy();
		::Dynamic onCopy_dyn();

		void onPaste(::String s);
		::Dynamic onPaste_dyn();

		Float ELEMENT_W();
		::Dynamic ELEMENT_W_dyn();

		Float ELEMENT_H();
		::Dynamic ELEMENT_H_dyn();

		Float ELEMENT_OFFSET();
		::Dynamic ELEMENT_OFFSET_dyn();

		Float ARROW_SIZE();
		::Dynamic ARROW_SIZE_dyn();

		Float BUTTON_H();
		::Dynamic BUTTON_H_dyn();

		Float CHECK_SIZE();
		::Dynamic CHECK_SIZE_dyn();

		Float CHECK_SELECT_SIZE();
		::Dynamic CHECK_SELECT_SIZE_dyn();

		int SCROLL_W();
		::Dynamic SCROLL_W_dyn();

		int TEXT_OFFSET();
		::Dynamic TEXT_OFFSET_dyn();

		int TAB_W();
		::Dynamic TAB_W_dyn();

		Float LINE_STRENGTH();
		::Dynamic LINE_STRENGTH_dyn();

		Float FLASH_SPEED();
		::Dynamic FLASH_SPEED_dyn();

		Float TOOLTIP_DELAY();
		::Dynamic TOOLTIP_DELAY_dyn();

		void resize( ::zui::Handle handle,int w,int h,hx::Null< int >  khaWindowId);
		::Dynamic resize_dyn();

};

} // end namespace zui

#endif /* INCLUDED_zui_Zui */ 
