// Generated by Haxe 4.0.0-preview.5
#ifndef INCLUDED_entity_group_TypedGroup
#define INCLUDED_entity_group_TypedGroup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_entity_element_IEntity
#include <hxinc/entity/element/IEntity.h>
#endif
HX_DECLARE_CLASS2(entity,element,IEntity)
HX_DECLARE_CLASS2(entity,group,TypedGroup)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)

namespace entity{
namespace group{


class HXCPP_CLASS_ATTRIBUTES TypedGroup_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TypedGroup_obj OBJ_;
		TypedGroup_obj();

	public:
		enum { _hx_ClassId = 0x4b0dfe2d };

		void __construct(::String groupName);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="entity.group.TypedGroup")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"entity.group.TypedGroup"); }
		static hx::ObjectPtr< TypedGroup_obj > __new(::String groupName);
		static hx::ObjectPtr< TypedGroup_obj > __alloc(hx::Ctx *_hx_ctx,::String groupName);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TypedGroup_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("TypedGroup",95,f6,65,63); }

		::String name;
		bool active;
		bool visible;
		bool alive;
		::cpp::VirtualArray members;
		void add( ::Dynamic entity1);
		::Dynamic add_dyn();

		void remove( ::Dynamic entity1,hx::Null< bool >  splice);
		::Dynamic remove_dyn();

		void recycle();
		::Dynamic recycle_dyn();

		void draw( ::kha::graphics2::Graphics gr);
		::Dynamic draw_dyn();

		void update(Float dt);
		::Dynamic update_dyn();

		void destroy();
		::Dynamic destroy_dyn();

		void kill();
		::Dynamic kill_dyn();

		void revive();
		::Dynamic revive_dyn();

		int getFirstNull();
		::Dynamic getFirstNull_dyn();

};

} // end namespace entity
} // end namespace group

#endif /* INCLUDED_entity_group_TypedGroup */ 
